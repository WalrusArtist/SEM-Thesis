[
    {
        "title": "Parallel Steps",
        "url": "https://github.com//orgs/community/discussions/14484",
        "upvotes": "1288",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 1433,
        "replies": 33,
        "comments": 19,
        "body": "Hi,/nI'd like that too. There are scenarios where it doesn't make sense juggling artifacts between jobs.\nThis would be greatly helpful for self-hosted and bigger runners too, where you can have many cores and handle parallelism well./nAlternative solution:\nWe can convert steps into actions, and then use reusable workflows to solve the problems you said/nHi,/nLogging into docker in parallel is probably going to result in things exploding./ncan we have the parallel steps please/nThe BitBucket has parallel step options. Why not add this option to GitHub actions?/nThis is the biggest pain point we've run into coming from Jenkins. You can approximate this feature with cache, artifacts, and matrices but it's considerably slower, more costly, and error prone./nNeed parallel steps support for our scenario: deploy multi clusters concurrently within the same VPN environment. So it is convinient to achive in steps rather than actions or jobs/nUsing a yarn monorepo I'd like to:/nIf its easier, GitHub could also allow sharing jobs workdirs/nI just want to start a resource in a background, which needs some time to start, eg a docker container or a simulator. This resource should start during the job start. My test step should wait until the test resource is available, or fail after an (optional) timeout./nNote how it was implemented in Cloud Build many years ago yet it's super convenient syntax:/nAs a workaround I was able to use this\nhttps://github.com/marketplace/actions/distributed-task-runner/nHi. Are there any updates on this topic from a Github team member ?\nReading the thread it seems like a strong painpoint./nWould be great to have some updates here. Parallel steps would be great, plenty of instances where for example I'd like to know whether multiple steps fail (eg: a lint check as well as unit tests). While jobs can run in parallel, each needs to be setup again. Would be great for a pipeline to be able to run a setup step that for example pulls dependencies and then splits off in parallel steps each starting from the state left by the setup.\nBitbucket is able to do this, for example./nWould be awesome if we can, for example, compile our js/css files at the same time we are running composer (for PHP projects)./nJust wanted to add, that parallel jobs means waiting for multiple available workers, which can add a lot to the total build time, and in some cases you don't need the extra hardware./n"
    },
    {
        "title": "[Feature Request] Allow github actions to bypass branch protection rules in certain specific circumstances",
        "url": "https://github.com//orgs/community/discussions/13836",
        "upvotes": "1078",
        "tags": [
            "Enhancement",
            "Actions",
            "ProductFeedback"
        ],
        "rections": 1084,
        "replies": 60,
        "comments": 52,
        "body": "There are workflows in which it is desirable to have the workflow itself make changes (such as updating a pom.xml, packages.json, CHANGELOG.md, etc.) on a branch which is otherwise protected from direct changes./nAlso mentioned and requested here: https://github.community/t/allowing-github-actions-bot-to-push-to-protected-branch/16536/nEven though it wouldn't work in all use cases for all people, treating the github-actions bot as a full-fledged app so we can add it to protected branch pushers would be immensely useful in a number of situations./nFYI: https://github.blog/changelog/2022-05-17-consistently-allow-github-apps-as-exceptions-to-branch-protection-rules/nJust encountered this exact issue. This is certainly great to have for smaller hobby teams as well where you don't really want nor need to setup whole delivery pipelines.\nI have setup simple automatic deployment on main which commits some changes like assembly version bumps, changelog, etc. However, I have to remove the branch protection for it to function which is bad for collaborations./nYes, GitHub, let's get this feature in please./nWould also like this implemented. \ud83d\udc4d/nThat would be a great GA to implement!/n+1 I had to implement a walkaround to cater for such requirements which I do not encourage following.../ndoes this fit your need ? https://github.blog/changelog/2022-08-18-bypass-branch-protections-with-a-new-permission//nAlso interested in a solution - I'm trying to auto bump the version but the branch protection rule I have on main branch doesn't allow it./nAlso looking for a solution! I have a python-black formatter that pushes code to the main branch but the protection rules won't allow it/nI'm running into this issue as well. I use semantic-release to automatically update my package whenever my main branch is updated, and I use @semantic-release/git to commit the updated version and changelog back to the branch. However, I also want to enable required status checks so I can have that peace-of-mind (and also use auto-merge). But I can't, because if I turn it on the action can't push the version update anymore. Having a setting (either in the branch protection rules as suggested above, or in the action itself using the new permissions setting) would be a huge help for getting my setup clean and efficient./nCan we bypass the permission rules with Gitbook?/nAs a simplification of the \"service user\" approach outlined by the OP: for the commit(s) pushed by the \"service user\", one can consider using [skip ci] to suppress status checks without adding any extra rules in the workflows (see https://docs.github.com/en/actions/managing-workflow-runs/skipping-workflow-runs)./nGithub, this is a need for full automation after deploys.  PLEASE consider this soon./njust ran into this today...\n+1/n+1/n+1/nPlease stop Posting +1 comments. Those are ignored. Instead, upvote the initial post./nLike most resources on GitHub, commenting that you support the issue without any meaningful addition to the conversation only functions to notify people that also are unable to fix the issue in most cases./nHey everyone!\nAfter many many many attempts, I found a way to overcome this GitHub limitation./nNow you can use a GitHub App to bypass certain controls in branch protection rules or newly introduced Repository Ruleset depending on your requirement./nWe had the same issue and we were not able to push because at least 3 checks are required. Our problem was, that we run the git pushcommand like this:/n+1/n+1/n+1/nNeed this/nI was able to work around this deficiency by using the Github App approach discussed above. I had never created an app before, so here is the list of steps that were necessary for anyone looking for something a bit more comprehensive:/nI'm not sure I understand. GitHub does not want to resolve this, because anyone would be able to deploy to protected branch by creating a workflow file (comment here @chrispat)/n+1/n"
    },
    {
        "title": "Option to mark reusable workflows as templates to not show them under the \"Actions\" tab",
        "url": "https://github.com//orgs/community/discussions/12025",
        "upvotes": "551",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 511,
        "replies": 21,
        "comments": 90,
        "body": "We use several templates for our workflows in form of reusable workflows, that we never call for themselves, but only call as reusable workflows./nYes, I agree that this would be a useful improvement.  Thanks for the feedback./n+1 to this. The UI for Actions is already bad enough and not able to hide reusable workflows is very annoying./n+1 to this. Having the reused-only workflow in the tab is distracting./nI'd be super keen for this too! I tried burying the reused workflows at the bottom of the list but unfortunately doesn't seem easily possible due to the way the list is sorted.\u00a0Maybe it should hide the workflow if it only has on.workflow_call?/n+1/n+1 to this !/n+1/n+1/n+1/n\u041c\u0438 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0454\u043c\u043e \u043a\u0456\u043b\u044c\u043a\u0430 \u0448\u0430\u0431\u043b\u043e\u043d\u0456\u0432 \u0434\u043b\u044f \u043d\u0430\u0448\u0438\u0445 \u0440\u043e\u0431\u043e\u0447\u0438\u0445 \u043f\u0440\u043e\u0446\u0435\u0441\u0456\u0432 \u0443 \u0444\u043e\u0440\u043c\u0456 \u0431\u0430\u0433\u0430\u0442\u043e\u0440\u0430\u0437\u043e\u0432\u0438\u0445 \u0440\u043e\u0431\u043e\u0447\u0438\u0445 \u043f\u0440\u043e\u0446\u0435\u0441\u0456\u0432, \u044f\u043a\u0456 \u043c\u0438 \u043d\u0456\u043a\u043e\u043b\u0438 \u043d\u0435 \u043d\u0430\u0437\u0438\u0432\u0430\u0454\u043c\u043e \u0441\u0430\u043c\u0456 \u043f\u043e \u0441\u043e\u0431\u0456, \u0430 \u043b\u0438\u0448\u0435 \u043d\u0430\u0437\u0438\u0432\u0430\u0454\u043c\u043e \u0431\u0430\u0433\u0430\u0442\u043e\u0440\u0430\u0437\u043e\u0432\u0438\u043c\u0438 \u0440\u043e\u0431\u043e\u0447\u0438\u043c\u0438 \u043f\u0440\u043e\u0446\u0435\u0441\u0430\u043c\u0438./n+1/nPlease use this GitHub feature to show that the feature is important, but please don't write +1 every time./n+1/n+1/nIt could be a generic hide/show switch, rather than logic checking if the workflow is reusable without other triggers. More flexible and less error prone.\nConsider for example/nDo you happen to have any updates @github? We have tons of reusable workflows and a single main workflow. This issue was raised in 2022, about two years later, and no news. Are you considering doing something about it, or silence = we do not care?/nGitHub: Any news on this? No news = good news?/nIt might be worth keeping an eye on this from the public roadmap: github/roadmap#841/nHere's what GitHub Action looks like in product for our team members:\n/n2024 and we are still here, please allocate one dev a week to implement this small UI feature/n@ja-leo @P1119r1m @h2oearth @troyere/n+1, joining the reusable club and my boys will get really confused if thy need to run something by hand because of this/n+1, would love if this was implemented/nI'm shocked that it still hasn't been added \ud83e\udd2f/nI wanna use this feature, too./n+1 fwiw/n+1/nSeems to be a lot of support for this feature, any word on roadmap?/nFor all the +1 remember this https://github.com/orgs/community/discussions/12025#discussioncomment-3978445/nIt's been 2 years since the original comment so at least some form of response from @github on if this will/will not be implemented would be appreciated at this point/n"
    },
    {
        "title": "Feature request: concurrency to queue all jobs waiting on a group",
        "url": "https://github.com//orgs/community/discussions/12835",
        "upvotes": "485",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 435,
        "replies": 18,
        "comments": 51,
        "body": "Job A arrives, finds nothing in its concurrency group and runs\nJob B arrives, finds job A running in its concurrency group, looks for anyone else waiting (with the intent to kill them), finds nothing, and waits.\nJob C arrives, finds job A running in its concurrency group looks for anyone else waiting (with the intent to kill them), finds job B, kills it, and waits.\nJob A finishes, job C is started./nHi @Shereef - thanks much for the feedback. Our initial design was focused on deployment scenarios, but we want to address the use case that you've outlined. I appreciate you outlining this so nicely and providing these suggestions. I hope that this is an area that we can address in the future./nThe desired behavior here, I believe, would be for jobs with the same run_id to be canceled (either in_progres or in_queue), whenever a new incremental run_id is present on the same ref./nI think I just need the same, but add to a queue instead of cancel the workflow. I meant, don't run un parallel but in serial instead/nWas surprised to see that canceling previous runs was the only option officially supported -- waiting and executing sequentially is what I need and seems to me like a clear usecase (canceling a deployment could result in a broken state)/nWould be great to be able to queue workflow runs (ideally without consuming action minutes). Was surprised that new runs cancel existing ones by default./nWe hit this limitation while testing out the Merge Queue feature that is currently in limited beta. Our use case is ensuring that only one workflow is running for the PR at the top of the merge queue. When concurrency is set at the workflow level (for the merge_group event type) and multiple PRs are queued within the merge queue, the system cancels queued check suites once a new PR is added to the queue. It would be fantastic if we had the ability to disable canceling queued jobs!/nIf you're using self-hosted runners, a workaround/hack we used was to label one of these runners specifically, and then make all the jobs that need to be in a concurrency group just run on this labelled runner instead. No concurrency shenanigans. That causes them to queue up globally across all workflows without any caps on number of waiting jobs./nMy team also needs this feature./nMy team also needs this./nMy team also need this feature - mainly for queueing mulitple actions each with Terraform plan/deploy steps which cannot be run at same time due to a lock on terraform state./nA must have for my team/nReally needing this to be implemented./nNeed this feature too./nGitHub, I'll add my team's need for this feature as well. I see a LONG list of replies like this, with no response from GitHub. (I'm in DevOps.)/nThanks for the feature request, we need this feature/n+1 cancel-in-progress : false/nDon't upvote by posting a comment, just click the upvote button on the original post. Comments notifies/spams everyone subscribed, who are awaiting progress updates, which upvote comments are not./nAnother usecase for this would be to process a larger amount of pull requests (like from dependabot or renovate) in a sequential manner./n+1/n+1 \"cancel-pending:false\"/n+1 \"cancel-pending:false\"/n+1 for ability to set cancel-in-queue: false/n+1 for ability to set cancel-in-queue: false/nUnbelievable how this basic feature is not available and how no one from GitHub is replying here./n"
    },
    {
        "title": "add timezone support to scheduling workflow runs with cron",
        "url": "https://github.com//orgs/community/discussions/13454",
        "upvotes": "477",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 752,
        "replies": 20,
        "comments": 18,
        "body": "Originally brought up at actions/runner#1423, but I don't think anyone actually started a discussion./nWhy isn't this implemented yet? gitlab is already having this functionality afaik/nAny existing workaround? Also, I see that the workflow is sometimes not triggered at all even though I have my own runner which is in idle state./nThanks for the feedback @cj81499. I certainly agree that time zones and scheduling is tricky, so I'll make sure that this is on the backlog./nWe are also interested in this feature. Are there any plans to implement a timezone support?/nJust bringing up another use case that would benefit with the addition of this, in case it further helps convince the addition of this feature./nAnother really useful feature would be to be able to add random jitter like cron supports because we can run into ratelimits when we have multiple actions running at the same time./nAs a super hacky workaround, you can schedule your workflow to run at BOTH standard and daylight times, and then use a bash script to filter out the undesirable runs. This means you'll have 2 runs for every schedule date, but only one of them will execute past the Test schedule step./nI've created a Workaround like @bcowdery, but mine won't fail the run:/nMy team continue waiting for this feature, do you know if GitHub team already have a ticket in progress to attend it? @cj81499 @rahulmr Thanks!/nThis is a much needed feature in GH, any updates on this please./nany progress on this feature? thanks!/nHi guys any updates on this?\nthanks/nI will add a bump here as well, did not expect my job to run at 5pm instead of midnight. Definitely would like to see this improvement./nSeems like easy to implement and would sove a lot of problem./nI am very interested in this feature./nI'm not sure why there are so many thumbs down reactions on these comments.  This feature would greatly improve usability and bring GHA in line with other cicd offerings.  Can we please get any indication if this has made it onto a backlog somewhere or if this won't be implemented?  Thanks!/nalso interested in this feature/n"
    },
    {
        "title": "Feature request: allow workflow configuration in sub-folders",
        "url": "https://github.com//orgs/community/discussions/18055",
        "upvotes": "415",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 613,
        "replies": 56,
        "comments": 40,
        "body": "Copying this feature request over from https://github.community/t/feature-request-allow-workflow-configuration-in-sub-folders/16776/nI was searching for a way to organise many workflows in the UI, like by category or by team for a mono-repo. And I was thinking about just being able to create subfolders in the ./github/workflow/ folder, and that each folder would appear as a collapsable section in the UI./nI was trying to do:/nIt would also be rather nice if there could be a way to run a workflow nested in a submodule, and then leverage that same submoduled workflow to work on the parent repository. This is definitely a much bigger ask than what the original discussion was most likely tailored for, but it would certainly come in use for a repository I currently maintain./nThis will help a lot my team for a mono-repo! I hope to saw this feature soon/nYou can do a lot of this by using a services/foo-service/action.yml and then put uses: ./services/foo-service/ into your .github/workflows/foo-service.yml./nA good workaround is symbolic links in your root directory .github/workflows folder/nThis feature would be awesome to have for  when using both re-usable workflows and the \"regular\" workflow.   Right now, I'm naming things with emojis in front of them to do this. \ud83d\ude02  It gets a little \u26a1  if it's a re-usable./nInstead of recursing through the whole repo, why not provide a keyword in the root .github/workflows that can be used to point to the \"sub-root\" of the directory you want to treat as it's own repo (for actions)?/nCopying this feature request over from https://github.community/t/feature-request-allow-workflow-configuration-in-sub-folders/16776/nThis would be a nice feature for our template projects, to make certain workflows optional and easy to tear out (with related scripts).  eg. \"Not using the event queue system?  tear out the workflow and related integration testing scripts by pulling ONE folder...\"/nalso running a monorepo and having workflow subfolders would be great as we have a lot of granular separation going on./nI've been following this thread for a while, if you're interest I made a simple cli in rust that can help with workflows context separation. Is still a WIP, nothing fancy. Hope this helps someone \u270c\ufe0f/nHas there been any progress made on this? Being able to define a .github directory within subfolders would be ideal,  however what @tn3rb suggested would also be great./nWe are using monorepo setup and our .github/worflows is getting out of control. Before Actions, we were using Buildkite and it allowed to add workflows in specific folders for services as suggested by the OP. The root workflow is getting too big and unmanageable and we are considering moving back to Buildkite just for this reason :(/nI am also running into this issue. We are currently transitioning to a monorepo structure and the lack of any kind of organization for all the workflow files is becoming an issue. If Github can't provide at least something as simple as subfolders then I am very tempted to just return to using Gitlab which handles this really well./n@chrispat/nWe've been migrating all workflows for multiple languages to reusable workflows and composite actions (whichever is more appropriate). It would be amazing to organize things with a better folder structure, even though this would mean we have to go back again and update 300+ repos, since the path to the remote workflow files would have changed/nYeah would love to see this feature added/nPLEASE.. this feels like such an obvious miss or the GHA team was strongly under the assumption any given repo would have <5 workflows./nStill not working./nAdjacent topic, but folders for Secrets would also be appreciated.../ncreate generic workflows that are heavily parameterized so as to compensate for having multiple workflows for each variation. This will reduce the clutter./nNeed this feature. It would help us to organize or distinguish the workflows & templates better. Hope to get the resolution for the error soon - invalid value workflow reference: references to workflows must be rooted in .github/workflows/nAboslutely needed , migrating from GitLab to GitHub is leaving our mono repos with reusable code without any folder structure and a complete mess/nWorking on converting to a mono-repository for a large game and indeed, without this it is really disadvantageous to not be able to scan subfolders for a .github/ yaml file./n+1, in large monorepos a better way of organizing workflows is really necessary/n+1 for this feature! It would be very helpful for better organizing monorepo workflows./n+1 for this feature! It would be very helpful for better organizing monorepo workflows x2/n+1 Keep things organized!/n"
    },
    {
        "title": "Actions: support YAML anchors",
        "url": "https://github.com//orgs/community/discussions/4501",
        "upvotes": "362",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 201,
        "replies": 1,
        "comments": 5,
        "body": "Please add GitHub Actions YAML anchor support./nUpvoted!/nUpvoted./nThere's an issue with even more upvotes here./nUp/nWe want YAML Anchor Support for GitHub Actions\n+1/n"
    },
    {
        "title": "Organization-wide Environments and Environment Secrets",
        "url": "https://github.com//orgs/community/discussions/15379",
        "upvotes": "338",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 166,
        "replies": 12,
        "comments": 59,
        "body": "If you have a lot of repositories with microservices deploying to the same environments (e.g. the same Kubernetes clusters, say), it can be useful to have a set of secrets available to all repositories in an organization. Of course, we already have this with Organization Secrets. However, this breaks down when some of those secrets - still common to many repositories within the organization - need to be distinct for different environments./nConsidering how organization level secrets are indirectly available to all users with write access, environments are the only way to protect sensitive secrets from attacks originating inside the organization (eg. stolen credentials). Without organization-wide environments, protecting sensitive secrets across multiple repositories is a huge pain./nThis feature will really reduce our work a lot. Please try to implement this./nPotentially the biggest improvement to GitHub in 2023 will be this (if it happens).\nIt is an absolute pain attempting to generate and manage environments in each individual repository.\nThis feature is sorely lacking and a definite blocker to adoption on our part!!!/nThis feature will help us a lot! Due to this limitation, we've had to use organizational secrets per environment like K8S_SECRET_DEV and K8S_SECRET_PROD, and have replicated our workflows./nThis feature would help us to avoid a lot of duplication. I would also add that in our case we need the approval to be defined on these environments as well./n+1 from me here - my use case is an Organisation that has multiple repos that host Terrafrom for Azure deployments - using github Environments / secrets for Service Principals / subscription ids etc. We have to duplicate secrets across the repos / environments . Just spent about an hour troubleshooting a missing one - so thats how i ended up here :-)/nHere is one more concern: Imagine we have \"development\", \"staging\" and \"production\" environments/nIs there any official plan on implementing organization level environment?/n+1 on this. It would be really neat to be able to have org-level env secrets. It would reduce a lot of copypasta one has to do across org repos to create same environment settings. Any plans on making this available at all?/n+1 on this. Do we have any updates if its even considered on a roadmap?/nthis++/n+1/n+1/n+1/n+1/n+1\nThat would indeed remove a lot of administration and control when working with many repositories hosted in same servers..../n+1 it would really simplify lots of things/n+1. I was surprised that this functionality didn't exist when I went looking for it. Gitlab already has this I believe./n+1 How can this not be organization-wide?/nme too +1/nWe have considered not using Environments at all because they are not org-wide. It ends up being too much manual work updating them across repositories./nSince I first started watching this topic, I've had second thoughts. What we are asking for might be an anti-pattern./nme too +1./n+1/nOrganizational Environments could be configured via RuleSets and greatly simply GH org wide admin by centralizing which environments apply to which repos (i.e. using repo properties)/nThis is good idea to make those org wide. But imho they should first decouple environments from deployments so each job running with environment: name will not trigger deployment. Or at least an option to disable this \"feature\". There is multiple use cases where this is not desired and is really irritating./nOne simple way of implementing this feature would be to allow members to mark an organization secret as \"private\", and then manually select it for use in environments at the repository level (for each repository that needs it). It's the principle of reusability./nIt seems so intuitive that this would exist that I keep forgetting it doesn't./nOrg environments would be an amazing gift right now.../nthis would be a blessing/n"
    },
    {
        "title": "Is there a way to delete or hide old/renamed Workflows?",
        "url": "https://github.com//orgs/community/discussions/26256",
        "upvotes": "289",
        "tags": [
            "Actions"
        ],
        "rections": 421,
        "replies": 143,
        "comments": 129,
        "body": "I made a Workflow using the Node CI template and then later renamed it.\u00a0 Now my Workflow list has \u201cNode CI\u201d in it, but that doesnt even exist anymore.\u00a0 Is there some way for me to hide it?\u00a0 Or is it there forever?/nYou can\u2019t remove it yet, but it won\u2019t be there forever.\u00a0 You can\u2019t delete it yet but we\u2019ll have functionality to delete this in the future./nIts been 3 months since this post?\u00a0 Can I delete yet? \u00a0 Its annoying that a typo leaves an action in the workflow/nHi,/nAny updates on that ?/nI got all excited when I saw this was marked as \u201csolved/go to solution\u201d. Then I found the solution was to wait as it would be fixed sometime in the future!\u00a0We could close all our issues right now with the same message \ud83d\ude09/n@ethomson wrote:/nHi, with all due respect this doesn\u2019t exactly \u201csolve\u201d the problem, is there any update or ETA on this please? Thanks/nWe really need this feature\u2026 Wanna get rid of those old experimental workflows./nHi, any ETA on this?/nHas anyone figured a way to clean them?/nAlso looking forward to seeing this.\u00a0/n@jakakokosar wrote:/nHey Guys, i see that many have asked this me also was going to ask, but i found a work around.\nyou can simply go to your repo home_folder/.github/workflows, Then delete the workflow that you wish to remove and commit \ud83d\ude09/nThis is not working. I deleted the workflow but still actions has all history of workflow executions. Currently there is  no way to get rid of this./nI tried this myself, make sure you push to github repo after you delete files related to workflow./nYou can delete old workflows by deleting all workflow runs, and that in turn you can automate using CLI:/n\ud83d\udc4b Hey everyone - I'm a PM for Actions and I'm working on a set of changes that also include how/when deleted workflows show up in the list./nI'm not sure if this change came out today or earlier, but looks like a lot of my old, messy workflows have disappeared from the Actions tab on the repo I manage. \ud83e\udd73 This is more or less what mine looks like now:/nHi @ethomson, any updates regarding this issue ?\nThe only way to \"delete\" the workflow is to delete all the runs.\nIf we have many it's gonna be hard!/nJust a +1 to say I would like to see this issue resolved.  Thanks./nI've got a workaround./nCombining @dmitrym0 comment with the limit 500 in @maximbaz comment (because the default limit is smaller). Make sure you cd into the repo in question, and make sure you swap out stale-workflow.yml with the name of your actual deprecated workflow file. gh is the github cli./nI have a unique issue that is related. Our repo has no workflow runs of a now renamed (added .disabled to the end of the filename) workflow. Yet it still shows up in the list./nThe fact that this is a 5 year old issue is WILD \ud83d\udc80/nI have a unique issue that is related. Our repo has no workflow runs of a now renamed (added .disabled to the end of the filename) workflow. Yet it still shows up in the list./nI really want to delete old actions./nwould love to see this/nhttps://github.com/orgs/community/discussions/26256#discussioncomment-7295831/nI think you can do as follows./nHow is there not a proper solution for this yet/n"
    },
    {
        "title": "Using environment in github actions without creating Deployments",
        "url": "https://github.com//orgs/community/discussions/36919",
        "upvotes": "282",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 405,
        "replies": 17,
        "comments": 65,
        "body": "I have environment-specific secrets defined which I'd like to reference from my Action. I think this requires me to set an environment for the job. The problem is that it seems like as soon as I set an environment, there's no way for me to prevent an associated Deployment from being created, which I don't always want. Is there a way to access environment-specific secrets without having the job create a Deployment?/nwhat do you mean by accessing env variables? those are just there for your jobs to consume them, they are not triggering anything whatsoever, if you can share your yml would be nice/nHi there @connor-luna and welcome to our community \ud83d\ude04. Thanks so much for asking a great question!/nI would also love it if we could use Environments for setting up repeatable workflows without every Job that references an environment: in Actions triggering a \"Deployment\" message./nWe also find this frustrating. We run a number of environment-specific checks as part of pull request tests and they are shown in the UI as having deployed to environments where they have not truly been. It would be great to have the ability to distinguish \"prepare deployment\" or \"verify deployment\" or similar read-only operations from an actual \"deploy to environment\" update action./nSame frustration here. I need to access Environment secret for a Terraform Plan job, but of course nothing is being deployed at that stage./nSame issue here/nAnother thumbs up for this issue. It would be nice to get some feature that would let you specify if the workflow should create a \"deploy\" or not/nSame issue! I just want to have access to the variables per env./nsame issue, I have a workflow which deploys logic, and one which deploys infra using terraform - both use env secrets but now both look the same and cause \"deployments\" to be created.\nI want to be able to control it - ideally decide \"deployments\" are only created for one of them or at the very least control some label or text explaining what sort of deployment happened./nSame issue, for us we have a docker image hosted in ECR but only in our prod account. We want to use it as a service container in our PR workflow test job but we need to login to ECR and get the docker password and secret in prod. So we have a job before the tests job that uses the \"production\" environment to get secrets for logging in to ECR. We haven't deployed anything just need the outputs but now all our PR's have marks saying they were deployed to prod even though they haven't been. \ud83d\ude1e/nSame issue here, I'd like to decide when a successfully run action that references an environment creates or not a deployment. Mostly because I use environment over variables because they have approval./nsame problem, anyone have a workaround? it's super annoying to have a terraform plan always trigger a \"deployment\" when nothing is being deployed at all./nSame here. I'm doing a dry run (Terraform) deploy into the target environment as part of a PR but then says it was deployed. It seems like a missing piece of the puzzle./nSame issue./nWe have same issue here,\nTrying to create a workflow to build a front-end project with staging and production configurations in a matrix. there's no way to use the environment variables at the build time and prevent GitHub from assuming that it is deployed!\nProbably the easiest workaround is to hard-code the environment variables inside the matrix till GitHub resolves this issue/nSame issue here in our company, anyone have a workaround for now ?/nBeen following this issue for a while, please fix!!! I don't want more deployments on my repos \ud83d\ude22/nI also want this. I don't think just adding environment: \"name\" should cause it to be classified as a deployment. That should be a separate flag or at least allow us to opt-out./nAs a workaround, we run a job at the end of the workflow to delete the deployments created by it/n+1 - I should be able to access environment secrets without opting in to manual approvals./nAlso ran into this issue, currently some services running the same images are deployed in parallel:/nThis is the same request as another discussion from a year earlier: https://github.com/orgs/community/discussions/5463/nAlso looking for a fix/nwould love to see a fix for this. why should I need to make a \"deployment\" to access the environment secrets context? pretty silly imo/nIdk whose idea was to tightly couple env scoped vars and secrets with deployments. This is such useful feature and those automatic deployments make it almost unusable. How hard would it be to make something like this work:/nSame problem here. Makes using GH environment a real pain. I can't believe this issue has been around for years and yet no fix was introduced./nSame here. Would love to see deployment: false implemented/ndeployment: false is much needed.  Our team is evaluating GitLab over the enterprise subscription we've paid for, because of how poorly Github manages environments (repo vs org level envs, RBAC for envs, and deployment protections) that are all critical for enterprise software development./n+1 just so this issue gets more activity. deployment: false much needed./n+1/n"
    },
    {
        "title": "Can we suppress 'Run cancelled' notifications?",
        "url": "https://github.com//orgs/community/discussions/13015",
        "upvotes": "261",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 320,
        "replies": 14,
        "comments": 31,
        "body": "We would like to be able to suppress 'Run cancelled' notifications but still receive 'Run failed' notifications./nThanks for the feedback @alec-maxoptra - there's not at the moment, I'm afraid. I think that there's an opportunity for us to improve our notifications, and we'll take your feedback into account when we look at that work. I'll make sure that this is on the backlog./nThis would be especially interesting for repositories using semantic-release where you definitely want to avoid multiple runs or a release workflow in parallel.\nWe make sure to avoid conflict by using cancel-workflow-action but there is an unnecessary spam of canceled workflow notifications resulting out of this process./nJust to add, I'm also getting frustrated by this. It's generating a lot of notification false positives which is teaching me to ignore notifications :-//nIn our team, stale runs are always canceled. This results in a massive number of notifications. I would be very happy if this could be changed./nsame as \u261d\ufe0f, my inbox is constantly bombarded with these notifications. i have to manually select all and mark as done when that happens. it's cumbersome, and has led to me missing a notification among the noise at least a few times./nWe have some checkers that re-run when developers push new commits to the branch of the pr. It doesn't make sense for in-progress workflows to continue, instead, we cancel them and re-run the checkers for the latest changes./nthe feature is still desired, but if you use gmail, just create a filter to archive/delete the email to avoid notifications./nLegitimate canceling by explicit concurrency section in the action should not generate email notifications, or at least should be configurable./nIs this feature request under development? I see many developers with the same issue receiving bunch of cancelled workflow notifications in email.. pretty annoying!/nour use case is we're using graphite (go check it out, it's awesome) to support stacked PRs. it uses rebase to keep branches in sync, which means every time i update the stack with code from the main branch, it force pushes each branch in the stack./nI'd also love this, my CI is now set up to cancel runs on old commits when new commits are pushed, and this results in a lot of redundant emails./nThis is driving me crazy. The work flow being cancelled is NORMAL. Multiple Devs check in before build is finished. It Cancels the build because some code changed. Why do we need an alert for this? This is not an error./n+1/nit's driving me crazy as well. is there another channel where we can report this, or should we accept that this will likely never get picked up?/nWould also love a way to prevent emails for canceled work flows./nThis issue is pretty much making CI unusable in github for our projects. There is so little difference between a cancelled job and true failure that developers are tuning out of these emails and starting to ignore the results of CI as a result./nAnother one requesting this. Debouncing a build after multiple commits results on multiple \"Run cancelled\" notifications which serve no purpose./nI absolutely concur./nCanceled workflows should not send a failure email. It leads to a ton of false negatives, and ignoring possibly legitimate failure emails with github actions./n+1/n@thispaul me and at least almost 200 other people are frustrated by this for over 1.5 years now. i see you're a PM at github, could you update us on whether the team is aware of this issue? or point me to a person i can contact./nCancelled workflow \u2260 Failed workflow/nI agree on this being annoying and not useful in lots of cases, so having a way to disable it would be nice/nPlease consider prioritizing a fix for this./n+1/n+1, getting spammed with \"run cancelled\" emails because I pushed a change while tests are running is rather annoying./n+1/n+1/n+1/n"
    },
    {
        "title": "Properly show continue-on-error jobs/steps in PR UI",
        "url": "https://github.com//orgs/community/discussions/15452",
        "upvotes": "258",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 596,
        "replies": 23,
        "comments": 18,
        "body": "continue-on-error is a very useful part of GitHub Actions, but unfortunately it's reflected extremely poorly (= not at all) in the UI and specifically in the pull request UI.\nThat means it's near-useless or barely better than || true, which is not the desired feature.\nThe desired feature is to allow some jobs to fail, and indicate it on the PR UI in a sensible way, much like TravisCI did with allow-failures: true./nThis perhaps depends on perspective. I had problems to understand continue-on-error first of all (and why it is not the same as || true which I was looking for using allow-failure on Travis before), which - like in your report - was related to the differences between Github Actions and the display of failed jobs in the PR checks./nThis is indeed a common technique I used frequently on Travis CI and Appveyor.  Here are links directly to the documentation stating one clear use case that this is for:/nNot having a proper allow-failures (same semantics as Travis) wastes so much time and causes so much confusion in the UI. Please fix it GitHub. 100% on board with all of the OP statements./n(reposting here from 399 as requested by @pboling)/nI have the same problem... My slack action is failing, failing the whole pipeline, although the rest worked... So the PR is locked... At this point, it's hard to believe Github Management is way too far from the community... This feature is definitely a very important ask and would allow us to bypass situations like the one described above.../nPlus one for all of the above. I'm working on fixing flaky tests in our code that cause CI to fail, which means I'm running many, many tests and constantly checking if they succeeded or failed. We have a GitHub check for CI and another GitHub check to flag tests that failed once but succeeded on retry. The \"succeeded on retry\" check is optional. My work would be greatly facilitated by the optional check not causing the build to be marked a fail./nEchoing what others are saying here, our use-case is very similar and connected to https://github.com/actions/toolkit/issues/399#issuecomment-1260017446. allow-failures would enable this./nI agree this would be a nice to have. +1 the allow-failure/nallow-failure and continue-on-error are two different features which are not mutually exclusive and in fact can be combined to complement each other (see below). As these are common semantics in every other CI system on the planet, Github should implement both, and we should stop squabbling over \"whether we should only eat apples or only eat oranges.\"/nUpdate: The closed issue has been moved to the appropriate, relevant, repository, and is where backlinks should point, even though it remains closed.\nactions/runner#2347 (comment)/nRegardless of whether continue-on-error is changed to work like allow-failure, or whether allow-failure is introduced as a separate option and the two are kept distinct, ultimately, we need allow-failure in some form.  More specfically: An allowed failure is one whose failure does not cause a failure of the level it's contained in.  If one job fails, but it's an allowed failure, then that job should display red but the overall PR should display green.  Etc./nHey folks \ud83d\udc4b  I wrote a post about this on the now infamous closed issue on this topic a while ago where I was sharing a project that I created to bring back some semblance of the \"allow failures\" feature that we used heavily in the Ember community when Travis was the default CI provider./nSeeing a red X against a PR that has successfully passed CI for all shipping versions of the underlying runtime, but failed the nightly is requiring additional training of all project maintainers. I'm very surprised that GitHub closed issue actions/runner#2347 as \"Not planned\" with no notice of why this UX problem is considered acceptable./nHi all \ud83d\udc4b - I'm a PM for Actions and looking into this issue. I'm hoping to setup 5-10 conversations with folks to dig into the problem and use cases. If you're interested in chatting, please use this Google Form to send over your details. I'll close the form and edit my post once I get enough conversations lined up. Thanks and looking forward to chatting!/nAll I ever wanted is a new yellow icon to show when a job that is allowed to fail failed but does not necessarily block merging. \u274c is too much and \u2714\ufe0f is misleading./nAs a temporary workaround, if that can help anyone:/nThis is much needed. There is no way to deem workflow as \"skipped\" or \"neutral\" when one of the jobs fails but it is not so important./n+1 for this feature/n"
    },
    {
        "title": "workflow_dispatch max inputs from 10 to 25",
        "url": "https://github.com//orgs/community/discussions/8774",
        "upvotes": "236",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 251,
        "replies": 44,
        "comments": 52,
        "body": "The workflow_dispatch has a soft limit of 10 input parameters./nHi @igorcosta,/n@igorcosta I am also running into issues with this.\n@chrispat Although the UI seems accept >10 inputs, the workflow immediately fails with\nyou may only define up to 10 `inputs` for a `workflow_dispatch` event error\n/nIt would be great if the limit of workflow dispatch inputs was increased or if a multichoice input type was introduced. I wanted to make it so a user could choose multiple services (we have way more than 10) to release to a chosen environment, but this limitation makes it impossible without some wacky workarounds. As mentioned by savanna-g, UI seems to already work fine with more than 10 inputs, so I hope it is not too hard to implement/nSame way as the other people on the discuss. We need to use more than 10 of different inputs, now using choices, and there is a problem that if the maximum that the worflow_dispatch accepts is only 10. You know if somebody are working on this?/nThis is a marketing strategy I guess. They don't want to compete with interface providers./nDoes anyone know a workaround for defining multiple env vars in one field and parsing them? here is what I mean/nThe \"workaround\" that I have implemented, in case it helps, is to use a repository_dispatch trigger instead of workflow_dispatch.  This event allows you to use freeform json in the client_payload field of the body./nI've also just used a JSON field, but I didn't switch to repository dispatch as was mentioned in the previous answer./nAnother legitimate use of dispatch_workflow inputs, to run an IaC pipeline against a pre-selected group of infrastructure building blocks. Limiting the number of inputs means that we have to combine some of those blocks and hence waste time executing unnecessary code, not to mention the time wasted on development, of course, just to work around a limitation we never anticipated./nAny news on this? I'm needing more than 10 inputs in a workflow, and using repository_dispatch won't solve my problem ://nAn alternative to having more than 10 input options, is implementing a multichoice input type. That way, you can use one input to select a number of options, instead of having a bunch of yes/no choices for each of those options./nSuggestion / up-vote from my side:/nI would like to request a review on this one. I really need  more than 10 parameters in my workflow_dispatch. Right now in order to reduce my parameter count I had to combine certain related parameters separating the values with a colon. For example software and version parameters are now a single software:version parameter; and a snapshot and uid parameters are now a single snapshot:uid parameter. The problem is then I need to break those in my code./nAs everyone mentioned, we also need way more than 10.\nA multiple choice dropdown would be the best option in my opinion. Added bonus if it has a search option that instead of scrolling one by one, you can search for and add selections.\nConsider my vote as 10, for all of my team :)/nAn idea. Allow adding freehand key value pairs with predefined list of keys (the inputs defined in the workflow manifests would serve as key names dictionary). Even better - allow specifying which keys are static (always appear) in the form and which dynamic (user clicks \"add input\" in the bottom of the inputs form to open a new single input entry form with key field suggesting names or being a dropdown) . Perhaps \"required\" option could be used to control that. The \"static\"/required inputs can then be limited if there's need for that. But make it tunable (on organization level?)/nHere's an idea for a solution, for anyone who hasn't yet found one suiting their needs (since it doesn't seem like github are going to fix this):\ncreate a webpage on github pages, have all of the setup there, and simply pass the consolidated setup to the github action via an api call./nI personally use enviornments for simmilar effect. An enviornment can have many variables which you can use as inputs and then in the actual workflow you can have a dropdown to choose an enviornment. Not perfect but it does work for my usecase and probably some of yours as well/nRan into this 10 input limit today, for a workflow we want to call via GH API. What a great design decision \ud83d\udc4d  This limit doesn't appear to be documented either./nThe contains expression worked for my case. I must confess that the UX was terrible :(/nBumping. People want more inputs \ud83e\udd79/nwell I agree this is bad limitation how we can use this UI./n+1 10 is not enough :|/nBeen following this thread for a while now to see if this limitation would be fixed as it causes problems for us. Currently using contains to check a string for certain sub strings but this is horrible and not really scalable as everyone has said. Would be good to understand if there are plans to do something about this!/nGuys, this is so over.../nHi \ud83d\udc4b\ud83c\udffb I've created a terminal tools the manage GitHub Actions more easy.\nAlso this tool parse json input automatically and you can trigger your workflow more easy&fast.\nGAMA : https://github.com/termkit/gama/nGuys this is ridiculous, it's 2024 and companies pay for this product. This functionality exists at least in Jenkins and your own ADO Pipelines product.\nThe fact that I can't have more than 10 input parameters for a manually triggered job is incredible. How can we build our systems off of this in a frictionless way?\nPlease fix ASAP/nso there I am telling bosses we can migrate all of our ADO pipelines (and repo's) to GH Actions, and boom, ran into this issue./nSo this thread is open from 2 years and half and I can't believe that GitHub Actions still have this huge limit. This product is used and paid by thousand of companies and reusable workflow should be the focus of any actions implementation. The limit of 10 parameters sounds frankly no-sense, sounds like such a simple feature to implements and a lot of clients would benefit./nFound some workaround on this issue and it offers a way to dynamically pass all template parameters to a GitHub Action without manually specifying each parameter in the workflow./nIs. This. For real?\nLike actually?/n"
    },
    {
        "title": "Github workflow_dispatch input dynamic values",
        "url": "https://github.com//orgs/community/discussions/12029",
        "upvotes": "233",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 236,
        "replies": 24,
        "comments": 83,
        "body": "Can we have a feature in the GitHub actions to populate the workflow_dispatch input values dynamically, maybe using some API response or using other GitHub workflow outputs?/nThat's a neat idea that I hadn't considered.  We'll put this on the backlog.  Thanks for the feedback, @Suchit8./nIs there a feature request for this?/nThis (or something like it) is really important to support dynamic environments. It's getting pretty common to spin up environments for a single branch or testing of a release. Esp with microservices it can become a lot of work to update N number of workflow dispatch input choices./nIt also would be very useful to be able to fill out the options of the dropdown based on the tags of some other repository./nthis feature is very needed, in our use case, we just want to have a list of option which is the file name listed from the root, for example make the output of ls -l to be input options for a GHA run/nHello,\nI would say we should have release version as one of dynamic choice input types. That way we can have a button for release deployment and we can select release number from drop-down list./nIn the meantime, has anyone tried to update the workflow file (its a yaml after all) from another event, committing it to the repo, so when end-user want to use the workflow_dispatch the values are in there./nIs there any update on the feature request?/nThis feature would be super useful for me as well!/n+1/n+1/n+1/n+1/n+1 (missing this feature, is the only feature I miss after migrate from Jenkins to Github action, will be nice to be added)/n+1/n+1/n+1/n+1/n+1/n+1/n+1/n+1/n+1/nHello, any update on this request to set dynamic values for workflow_dispatch? cc @ethomson/nStarted learning GHA and workflows just a few hours ago, and now ended up here. Either I'm missing something, or this is a desperately needed feature!/nAny update on this feature request would be really helpful. Been looking at this from 2 years \ud83d\ude42.\nIf we are able to run script in choice param, would make worflows alot simpler/nThis isn't the most elegant option, but a decent workaround for this would be to have the workflow validate the input, and print the list of valid options on error./n+1/n+1/nAny updates on the issue? It appears to be growing in importance for the community's needs.\nAny insights or workarounds will be helpful./n"
    },
    {
        "title": "workflow_dispach to have dynamic inputs parameters",
        "url": "https://github.com//orgs/community/discussions/11795",
        "upvotes": "228",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 233,
        "replies": 42,
        "comments": 127,
        "body": "Thank you for introducing the workflow_dispatch for manual jobs./nYes, GitHub action inputs really need this! Almost crucial for any CICD platform to avoid errors from operators who perform manual jobs on a frequent basis. Please get this feature in ASAP!/nThis is a neat idea.  Thanks for the feedback!  We'll put this on the backlog./n+1 on this. Will add huge benefits/n+1/n+1/nI'd love a dynamic input, let me run some scripts to build a list.\nFor example let me run a script to build a choice parameter that lets me pick a version I want to deploy/nHi, is there any update on this because I need to implement it now in my current requirement or any workarounds for how to pass a variable as inputs would be very helpful./n+1/n+1/n+1/n+1/n+1/nPlus One for this. In my companies work we add deployment environments and want to be able to allow the person running the action to select the environment to deploy to. Right now that means modifying every workflow to add the additional environment to the workflow_dispatch inputs./nPlus one on this./n+1/n+1/n+1/nThis question is discussed from 2022, but there is no progress until now. I would like to share my workaround approach. Since my company's projects are all private repos in the GitHub Enterprise, there are few people who can use GitHub Actions, so I developed a Chrome extension to solve this problem and use the extension's scripts to handle dynamic options. Do not set type: choice inputs in the yaml and the workflow will not check the value of the input./n+1/n+1 \ud83d\ude4f/n+1/n+1/n+1/n+1/n+1/n+1/n+1/n+1/n+1/n"
    },
    {
        "title": "Better log separation for composite actions",
        "url": "https://github.com//orgs/community/discussions/21276",
        "upvotes": "216",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 224,
        "replies": 1,
        "comments": 29,
        "body": "See actions/runner#1311./nThis is really important. Currently logs of composite actions looks like mess. Why no update on this yet?/nThis is my biggest annoyance with composite actions atm. I am more than happy for them not to even be subspaced, but each step could be right at the top level just like regular steps. After all it is a \"composite\" of steps./nBumping this as well, agree with the rest of the folks/nWe would also greatly benefit from this/nThis could make things a lot nicer. Upvoting!!/nWe would love to have this/nBumping, this would be so helpful/n+1/n+1/n+1/n+1/n+1/nThis is a must-have. Right now, I'm forced to do some awkward stuff with multiple jobs (despite the fact it could all be in one job) in order to try to make the \"build\" steps visually distinct from the \"test\" steps./n+1/nI moved one of my job steps to composite action, to solve another github actions limitation (to be able to skip jobs and still run dependent ones without needing to spam jobs with always() conditions), but now run into this issue, where composite steps are cramped into single step, which is really a mess./nComposite actions are super useful, but the way the logs are currently structured does not help, specially when it gets stuck in some nested step and you don't know anymore where it got stuck. So I +1 this./n+1/n+1/n+1\nI wanted to measure the runtime of each step using DataDog integration, but currently it's impossible to do so because all the steps in composite action are showed as a single run./n+1/n+1/n+1/n+1/n+1/n+1/n+1/n+1/n+1 still waiting for this/nDamn! It's been nearly 2 years for this and still no response./n"
    },
    {
        "title": "Concurrency Cancel Pending",
        "url": "https://github.com//orgs/community/discussions/5435",
        "upvotes": "212",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 409,
        "replies": 44,
        "comments": 23,
        "body": "Any previously pending job or workflow in the concurrency group will be canceled./nWe have a concurrency set for an label/unlabel event. If 4 labels are added at once, two out of four actions are being cancelled.\nI have tried to set cancel-in-progress: false but it does not help./nI think I'm having a similar problem.\nI switched to this kind of condition:/nIt seems that updating labels on action that uses pull_request.types: [labeled] updates jobs that are in the queue.\nStill unsure how to debug Github events./nPlease add cancel-pending:  false\nWe need this badly, since we're running workflow to create new tags for software bundle, and it's really hard to implement without concurrent run limit for workflow, or at least repo./nI'm running into similar issues at a job concurrency level when trying to control how many runners are handling some platform-specific integration tests, so as not to rate-limit the API that they're talking to. A way to avoid canceling other pending jobs (and, ideally, a way to specify number of concurrent jobs--I can do two concurrent sets of tests without having things have problems) would really help out./nAll/nYeah, just cancelling concurrent jobs screws up the idea of PR check. Pending and waiting should be the default not to talk about the option to configure it./nThank you for all of the feedback./nIt would make sense to include some sort of concurrency option to queue a workflow/job/step (without cancelling it)./nI needed this functionality so I made a quick-and-dirty spin lock mutex. It's working pretty well for me so far: https://github.com/ben-z/gh-action-mutex/nYeah, this would be a great addition, we could use this to coordinate the deployments of the services based on merges to the repo./nAny updates on this? We also need this for an auto-merge job that has concurrency issues when several jobs try to merge at the same time. Having a lock allowing only one job at a time but not cancelling pending jobs would solve this./nLack of cancel-pending: false is a only blocker keeping us from using concurrency. We want all deployment PRs to be queued, not cancelled.\nThey should go in order. Currently we rely on https://github.com/softprops/turnstyle but is not being maintained.../nAnother vote for cancel-pending: false here. I have func test jobs that rely on a separate shared server and cannot be run concurrently without stepping on each others' toes on that target server. But two different branches that cannot run func tests concurrently should still both run func tests./nAlmost the 2 year anniversary. We need this feature too. Can someone please prioritize this? Something tells me it wouldn't take that much time to complete./nPerhaps we need to open a new ticket for this, since this ticket seems to be answered - maybe no one at github is paying attention to answered tickets?/nWould be great if someone can prioritize this./nHi guys, our use case is that we need a passive queue mechanism, two levels of concurrency instead of just one. Our workflow for status checks should cancel pending tasks from the same group 1 (pull request), but keep pending tasks from a different group 2 (repository). Essentially, the workflow should never run in parallel, but should always be queued if it comes from a different pull request. Not being able to specify more groups would be fine as long as we can at least disable cancelling pending tasks at all. This is what we had in Jenkins CI. I find it hard to believe that this is such a rare use case unsolved for years./nHi,\nThis is needed for our usecase as well. We are using Github CI in our organisation for to plan/apply terraform templates.\nWe group the concurrency based on terraform working directory. We don't want to cancel the pending actions and want all the pending actions from the same directory to go sequentially.\nIt would be great to have this feature./nYet another \ud83d\udc4d from me, very similar problem: We need a proper mutex behaviour in order to ensure sequential runs. It's important so that we ensure consistency of the concurrent merges over time, but also so that we don't lose traceability of what merge caused what action to change status./nUnfortunately stumbled across this issue as well, so created a simple GitHub Action to rerun cancelled jobs - https://github.com/marketplace/actions/rerun-workflows/ney github team , please, could you help us? we really need the feature\ncancel-pending: false\nbecause of every workflow is important to us, due we are working with testings and we need to make a lot of process before continue with the next one which is a new version of software that we need to apply later.\ndo you have some news about it?/nGitHub is nothing but pain but nothing can be done to stop execs from buying it. Someday I will work at a place that uses gitlab and I will be at peace./n"
    },
    {
        "title": "[REQUEST] Workflows seen in Actions UI separated by folder structure",
        "url": "https://github.com//orgs/community/discussions/11831",
        "upvotes": "210",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 178,
        "replies": 30,
        "comments": 23,
        "body": "Currently in the Actions UI it just lists all the workflows that are in the .github/workflows directory. This is manageable until you have too many unique workflows (30+) in one repository./nThanks @keithlai124 - I agree that things start getting long when you have a lot of workflows.  This is something that we'll improve, although I do not have a definite date for this./nChiming in here, would like to see this as well. Or perhaps via grouping mechanism giving by workflow metadata in workflow files?/nMaybe a tag based system through the yaml?/nHi Folks, Is there any update on this issue?/nHello,/n+1/n+1/nManaging 120 workflows in a single repo makes a hell of an entertainment./n+1/n+1/n+1/n+1/nHi everyone \ud83d\udc4b/n+1/n+1/n+1/n+1/n+1/nIm really interested in this feature being added, our team is working on a monorepo with several teams and would be nice to have structured view / grouping of workflows/n+1/n+1/n+1/nI'm genuinely keen on having this feature added. Our team is collaborating on a monorepo with several other teams, and it would be immensely beneficial to have a structured view or organized grouping of workflows./n"
    },
    {
        "title": "Feature Request (Github Actions): Dynamic Workflow Run Name",
        "url": "https://github.com//orgs/community/discussions/11396",
        "upvotes": "202",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 259,
        "replies": 11,
        "comments": 17,
        "body": "It would be nice to be able to add meaningful runtime data to the name ie via something similar to how a job can be named dynamically./nThanks for the feedback @mpmarven-ms - I agree with you that it would be nice to be able to configure display names.  We'll take a look at adding this support./nThis is especially crucial for workflow runs triggered by workflow_dispatch events, since currently in such workflows every run of a given workflow is completely indistinguishable from one another in the \"runs\" list./nThis would really help my team.\nOur current solution is an in-house browser extension parsing the info we wish to display, and editing Github's HTML to show it while browsing the \"Actions\" section/nI would suggest dynamic folders instead./nLGTM .My team need to review what action have been done so we should add dynamic Workflow Run Name to review that/nThis is especially crucial for workflow runs triggered by workflow_dispatch events, since currently in such workflows every run of a given workflow is completely indistinguishable from one another in the \"runs\" list./nPossibly a different suggestion... add an optional title body parameter. Then just update libraries to support this./nThat would be a great feature.\nWhenever I take a look at workflow runs, they all look same except small ID run difference which doesn't make any sense for our use case. I would highly appreciate if we can attach user defined texts at run time to the workflow name or description.\nI mean by description, the red text in the pic:\n/nHi All - Just wanted to let everyone know that this feature is now live./nThank you to each and everyone for making this happen , superb feature and helping in multiple ways/nI noticed this was missing from schemastore so I've submitted a PR to update the Github Workflow JSON schema: SchemaStore/schemastore#2503/nIs there a way to filter workflows by name using run-name feature? as far as I can see its not possible since it will still get the workflow name by default.\nIt was nice to have this feature since for example I can have 100 runs on an workflow triggered from other repos and I want to sort a specific values in \"filter workflow runs\"/nThis is a great feature but we use reusable workflows a lot and from my tests it does not seem to be possible to set the run-name from within the reusable workflow. Are there any plans to support this?/nThanks for implementing this feature! It's important for our developers experience! :-)/nI'm having issues using this on an enterprise repo. Are there plans to implement this for enterprise?/nHey there folks!!! Is there a way to use the job names as the run-names dynamically in a workflow file having multiple jobs?/n"
    },
    {
        "title": "Stop rounding up individual jobs to the nearest minute for billing",
        "url": "https://github.com//orgs/community/discussions/8726",
        "upvotes": "178",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 63,
        "replies": 6,
        "comments": 29,
        "body": "A good well structured deployment script in Github Actions can involve many quick jobs. In our case we are aproaching 16 (typical execution time of 4-6 seconds), it's a bit unreasonable to be paying for 16 minutes per job for a total of just over 1 minute of CPU time./nHi @splitice, I understand where you're coming from - certainly the current setup for GitHub Actions workflows is optimized for longer-running jobs.  But I'm not sure that multiple jobs is more \"correct\" unless you actually need a separate virtual machine for each step./n@ethomson I can't share the workflow of the job that inspired this however I can share s screenshot of a similar one. It's a CD job for an In Development application (and it's already at 12 jobs - expected to be over 30 when complete)./nI really appreciate your detailed feedback.  This is really useful to understand for our planning./nI am having the same issue. I created a matrix job in a pipeline that packages umbrella helm charts (around 90). Each matrix takes roughly 30 seconds but I'll be changing this to a script because this matrix approach is using too many minutes./nI might understand that Github actions billable time was rounded to the minute 3 years ago when the service was still young, but 3 years later I just don't understand why Github does not charge a fair price based on real usage./nI've just experienced a very similar thing \u2014 Now moving into 2023 \ud83e\udd26\u200d\u2642\ufe0f/nCame across this thread while trying to figure out how 11s resulted in a 54x charge of 10 minutes.  Not sure if it's related to rounding or if it's a bug that overcharges for reruns or unmet conditions:/nWe hit this issue fairly hard, e.g./nWe hit the same issue. We are evaluating different solutions, and this issue does not help using concurrency. Because instead of just building something, and then running multiple job with the result of the build, we will have to put everything in the same job to reduce our costs, and this will double the time of the whole pipeline (1min vs 2min)./nHow 'un'funny: just splitted up my workflow in a pipeline with sub jobs (github docu also says its a good way to reuse workflows) and now i'm discovering this specific issue./nStarted on use of matrix stragegy to reuse jobs, but with this in mind, is a NO-GO!\n/nYeah this rounding-up billing model is really anti-customer. Do better./n5 months later and still overbilling/nI set up a simple workflow to check stale issues and PRs and it runs for 4 seconds. I'm billed for the full minute. Should I hide this check in some other workflow instead?/nThis is frustrating because by splitting up jobs to be more efficient and take less overall time, I'm actually using more billable minutes?/nCan someone representing GitHub chime in here? Is this something that will be addressed? This is a deciding factor for me in selecting a CI/CD product./nUp!\nThis issue is still unresolved and definitely needs attention. I run the cron_job which takes about 12 to 13 seconds and I billed for 1 minute each time.\nSo, I run this cron_job for a 100 times and was charged for a 100 minutes instead of 20 minutes, which is x5.\nCommon GitHub Actions team, it is almost 2024, stop rounding it, charge your customer by seconds, I'm not even asking for a milliseconds./nWe are also using more monolithic jobs because we are trying to optimize for costs instead of optimising for visibility and split of concerns./nhow this is still a thing in 2024 is beyond me./nAWS bills every customer on per-second basis. I am fairly certain that it is possible for GitHub to follow the same policy (and be profitable and maintain customer trust)./nSeems like Github will do nothing as long as people swallow the pill and pay. I'm looking into CircleCI and other competition/nAmazing that we've made it to 2024 and this discussion is still open.\nBoth Azure and AWS bill their linux nodes by the second and yet good old GitHub is billing us up to 100x for job in a workflow.\nMatrix builds are a real money maker.\nIf runners are indeed so expensive to spin up that they need to bill for that (I doubt it) then be up front and add some fixed \"start up time\" rather than arbitrarily making a 10s job pay 50s \"startup tax\" and 50s jobs pay 10s \"startup tax\"./nAny update from anyone at github?/nI have a dozen jobs that are just over 1 min , and rounding it up to 2mins basically 2x the costs for them..\n/nThe docs say./nLet's also take note that aside from overbilling customers with inaccurate billable minutes, GitHub is also applying minutes multiplier to Windows and MacOS Docker machines./nI just came across this, and really surprised this still hasn't been addressed in any way/nYep, we just got set up using this system and got billed a whole bunch of minutes we didn't use, for processes that took just a few seconds each. Looks like we won't be expanding on this system until this is addressed./n"
    },
    {
        "title": "Hide Jobs in Actions UI when If is false",
        "url": "https://github.com//orgs/community/discussions/18001",
        "upvotes": "173",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 105,
        "replies": 5,
        "comments": 23,
        "body": "At time of writing this when you have a multi-stage workflow defined it will show every single job and set of steps defined in all associated workflows and composite actions. Having the ability to hide a job in the UI if it will not be ran would be a great feature./nThis is really desirable!!/nThe default behavior should be that skipped jobs are hidden. If someone wants to see the skipped jobs, let them optionally enable that./nWhenever this is implemented, Please make it optional./nThe default behaviour should be rather that skipped jobs are shown. It would be less of a breaking change to introduce a new job option hide./nAny update on this? I'd still very much like to hide skipped actions on PR's in the UI./nBump! This would be great!/nBump! Also adding a use-case for this feature. I am using \"proxy workflows\" as a workaround for a lack of dynamic \"uses\" when triggering reusable workflows (choosing which to execute). I am using a solution similar to this suggestion./nMaybe an easier/less invasive option would be to extend the jobs.needs context with something like:/nThis problem is significantly worse when using Matrices and/or reusable workflows. In the below image, we had one reusable workflow that can take one of three journeys down the remainder of the workflow logic. The other three paths (and their sub-paths) are shown in the UI and often cause confusion.\n/nWe also make heavy use of shared workflows with switches to turn workflow features on and off. I'd love to see this feature added./nI would like to +1. In my case I have a reusable workflow inside a matrix, and one of the job of the reusable workflow should run only in some cases, after other jobs in the reusable workflow. A job-level setting would be great to hide those that don't run./n+1. Definitely a needed enhancement to GitHub Actions UI. At least have a UI option to hide skipped jobs./n+1 it would be great the have the option!/n+1 Bumping up, would love to see this feature!/n+1/n+1/n+1/n+1/n+1/n+1/n+2/n+1/nThis would make our CI results much easier to manage./n"
    },
    {
        "title": "Trigger workflow only on pull request MERGE",
        "url": "https://github.com//orgs/community/discussions/26724",
        "upvotes": "155",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 463,
        "replies": 23,
        "comments": 25,
        "body": "I saw many posts about people asking if there is a way to trigger the workflow only on MERGE, which to me seems the most useful. However I did not see any answer, so I would like to find a solution./nsame question/nThere\u2019s no way to specify that a workflow should be triggered when a pull request is merged. However, because a merged pull request always results in a push, you can use the push event to accomplish your goal./nFor the event on.pull_request.closed , it is designed that whenever the PR is closed the workflow will be triggered. And currently, there is not a specialized event type for PR merged, such as on.pull_request.merged./nEven though I still would prefer a merge option, I think this makes sense. Thanks/nI use this which triggers on merge:/nIt\u2019s work for me/nThis can not work as expected. If the PR is closed without merging, the action will still run./nWhen I say \u201cthis\u201d I mean:/nI think this is the best solution\nI changed to only use\nif: github.event.pull_request.merged == true since I already filtered on pull requests in the on: part/nHey folks, I wrote a little blog post + showcase repo that explain how to execute a certain job or step only if a PR has been merged and not just closed. Hope that helps \ud83d\ude42/nThis solution with the restriction to directly push commits to master solves the problem./nThis is exactly what I was looking for. Thanks, Jen!/nWhat if the workflow requires inputs before running? After PR merge, how is one supposed to get the inputs?/nI prefer this solution. Most obvious/nThe documentation shows exactly that in this example: Events that trigger workflows - GitHub Docs/nHere\u2019s what our team is doing:/nA merge technically encompasses a commit \u201cpush\u201d, targeting a specific branch (i.e., main). If you don\u2019t target a branch, the workflow would trigger with any, including main. It\u2019s like if you were to merge a feature branch into main locally and then push main to remote; all done on the remote in this case. This is exactly what the workflow team was thinking as well. This makes complete sense./nI have the same concern as @minherz where I'd like to run integration tests and screenshot tests only before merge because they are very expensive if triggered on every PR update. It's too late to run if the test runs after they are merged to master./nMaybe put another way, it would be great to have pull request merges work as transactions, with a mechanism to have failing workflows cause the transaction to rollback. Besides expensive tests, this could also be used to validate successful deploys. (The deployment process would have to be carefully designed to roll itself back.)/nSince I posted my comment, I realize GitHub is about to release a new feature called merge queue. Looks like we will get a new event \"merge_group\" to trigger a set of tests before the PR is merged. I haven't tried it since the beta test has ended. Can someone help me confirm whether my assumption is correct?/nmadness. I just want it./n@say8425 have you already tried this? https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#running-your-pull_request_target-workflow-when-a-pull-request-merges/nI have the following:/nOne way that works for me is:/nJust want to add my 5 cents:\nin my case I wanted to build and run my tests on all branches but connect to dicker-hub and build&push image only when it's main/n"
    },
    {
        "title": "Allow reusable workflows to be at arbitrary file locations",
        "url": "https://github.com//orgs/community/discussions/10773",
        "upvotes": "154",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 218,
        "replies": 33,
        "comments": 8,
        "body": "After seeing https://github.blog/changelog/2022-01-25-github-actions-reusable-workflows-can-be-referenced-locally/, I was very excited to run jobs like:/nFollow up question for you.  You are using this example:/n\ud83d\udc4d/nWe're trying to create an organizational level repo to hold all our reused workflow components across the company, and this restriction is making organization of these extremely difficult. We have to put every single reusable workflow in the same folder, with no nesting or organization beyond how they are named?/nYeah, this seems like a pretty arbitrary restriction to not allow subdirectories for organizational purposes./nIs there any status update on this? This issue is nearing 2 years old now./nThis would be incredibly helpful - not sure why this restriction exists but it would really help manage and organise lots of re-usable jobs to not end up with tons of workflows at the same level of the directory/nPlease fix this./n"
    },
    {
        "title": "Triggering by other repository",
        "url": "https://github.com//orgs/community/discussions/26323",
        "upvotes": "147",
        "tags": [],
        "rections": 227,
        "replies": 24,
        "comments": 23,
        "body": "Is it possible to run a github action on a push to a 2nd repository?/nTriggers are per-repository, _however\u00a0_you could send a \u201crepository dispatch\u201d event to your Application repository.\u00a0 This is a custom event type that has no explicit meaning within GitHub, that you can use for your own purposes./nThanks. I\u2019ve accepted it as a sollution./nI don\u2019t agree that this is a \u201codd\u201d usecase./nIs it possible to go the other way./nThis POST command seems to be out of date - see https://docs.github.com/en/rest/reference/actions#create-a-workflow-dispatch-event. I got it working instead with this in the application workflow:/nThis is pretty important for our CI across an SDK which is split into various modules across different repos.  It\u2019s something that\u2019s supported in Jenkins.  Hopefully this will be functionality that arrives at some point./nHow can I use it for two repositories on an organization?/nYou can do something like this nowadays:/nAs far as I understand, this still uses the default repo-scoped GITHUB_TOKEN so you need to pass your own token if you want to access a different repository: GitHub - actions/github-script: Write workflows scripting the GitHub API in JavaScript/nAlso worth noting that the documentation link to the right area is https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#repository_dispatch/nA complete use case/nHello/nAppreciate you taking the time to inform us.  Definitely takes a lot of trial and error./nI had a lot of back end forth and this is what worked for me:/nThis is all a very interesting discussion.  I am pleased that I am able to start a workflow in another repository in our org successfully with:/nMy org has created https://github.com/marketplace/webhook-actions to allow for dispatching across repositories without the use of PATs. Currently we can only offer a free plan until we reach 100 installations./nso i came up with a horrible way to do this. set up a webhook in discord to post to a private channel when the repo has the desired trigger. then have a bot watch the channel for messages and when there's a message it will trigger your repo. yes i know this is horrible/nIt's also possible to use the GitHub CLI to send a workflow_dispatch event and then wait for the run to complete:/nThis is how I got the repository_dispatch (not workflow_dispatch) approach mentioned in the answer to work.\nWorkflow in my-org/target-repo:/nHow can I apply this to a pair of repositories within an organization?/nI'm not too hopeful, but does anyone know if there's any update on a standard way for a consumer repo to monitor for a version update on a producer repo, without the producer taking some action (creating a dispatch event)? My main issues with this are:/nAlong with the trigger is it possible to pass a value from repo to another?? Eg: Pass docker image tag to be passed from one to another repo/nNot exactly a solution to the requested, but there is always the option to schedule the running of a workflow in your Application repo to check for changes in the Library repo, and when it finds changes, perform a build!/n"
    },
    {
        "title": "Allowing github-actions[bot] to push to protected branch",
        "url": "https://github.com//orgs/community/discussions/25305",
        "upvotes": "145",
        "tags": [
            "Actions"
        ],
        "rections": 473,
        "replies": 68,
        "comments": 36,
        "body": "Hello,/nIf we enabled GitHub Actions to push to a protected branch then any collaborator in your repo could push any code to any branch they wanted simply by creating a branch and coding the workflow to push to to some other branch.\u00a0 Using the REST api to merge the PR is the right flow and overtime hopefully there will be actions that make that easier to implement.\u00a0\u00a0/nThanks!/nI found a partial solution to this, it allows you to have protected branches that require 1 approval and a green CI. See\u00a0https://github.com/ridedott/dependabot-auto-merge-action./nThe same thing applies for other bots. I don\u2019t understand why you don\u2019t allow the CodeOwner feature to prevent updating workflows, and then allow the github action bot to push to the same branch that triggered it./nThis is kind of not a solution to the problem, it\u2019s not necessarily true that any collaborator could do what you say, why should the workflow have the same permissions as an Action?\u00a0 The collaborator would also have to be able to control the specific Action and what it does, not the whole runner.\u00a0 Consider the following extremely common scenario:/nI agree with this. @chrispat 's answer completely overlooks this common workflow and it would be great if there was a way to allow this to happen by allowing the GitHub token to have more fine-grained permissions./n@chrispat I have created a token with every scope and I still can\u2019t publish from a GitHub action. Everything works fine locally using this token. What could possibly be going wrong?/nhi\u2026 did you figure out why this happens? I have the same issue./nbtw, I found a solution by reading the documentation of:\n/nPersonal Access Tokens are an anti-pattern here. When that user moves teams or leaves the company the actions will begin to fail./nIs there still no option here that doesn\u2019t require the anti-pattern of creating a bot user just to work around Github limitations?/n@chrispat Could you please explain us what could go wrong with the workflow described by @mtesch-um, I sum-up: PR reviews enforced including for administrators?\nYou throw up your answer but avoid answering to someone who got a real point here. What do we do to use Github with reviews including for administrators + automation?\nAs the others, I\u2019m genuinely asking because we have a real use case that is explained and you don\u2019t explain your view actually./n@chrispat Now that this feature has merged, all we need is that GitHub Actions job runner could be selected for this Allow bypassing required pull requests | GitHub Changelog/nThis still wouldn\u2019t be secure as the GitHub Actions user isn\u2019t branch specific.  So adding it to this list would mean that anyone could push from any branch using a workflow and bypass all branch protection rules./nWell at present, users are inserting personal access tokens to do what the GITHUB_TOKEN secret should. Even making it so that ONLY on the main branch the  token can override protected branches would be a huge step forward./nThis is still a problem./nA colleague I discussed this with noticed the feature shown in this screenshot:/nOur case is pretty straightforward and this has been quite a problem:/nMaybe I am just doing things wrong. I have a dev branch where all PRs get merged onto. Once that is tested and approved I make a PR from dev to main and do a Rebase and merge so the commits get copied over./nHey, really 5 years for this feature?\nIt's a basic feature when you need to release library or something./nTo anyone who need this we just had a contributor add a plugin to our automated release too auto that makes this really easy and I'm sure it could be copied for other's needs./n/nThere seems to be a possible solution https://github.blog/changelog/2022-08-18-bypass-branch-protections-with-a-new-permission//nFor anyone struggling with this I wanted to share my solution using a Personal Access Token (PAT) that I just got working with a popular library from NPM called release-it./nAdding my \u27951\ufe0f\u20e3 to this - the most secure solution definitely seems like a \"allow actions to bypass rules but only for the calling branch\". That would improve security over the PR or PAT approaches./nAre there any new workarounds currently on how to bypass branch protection with a gha bot. I have a separate account for a bot which uses a PAT and I want the bot to be able to commit to protected branches but I do not want users to abuse this by creating an action which uses the bot to commit to the same protected branches./nThis workaround has worked for me, where i wanted to bypass branch protection rules to commit a new version in pom.xml to version upgrade as part of CI:\nhttps://gist.github.com/kartikv11/b565a9c1b9499f6096c380b9c577d762/nWhile I know using PATs is a security risk, I came up with a solution that worked for an open source project that I contribute to where we have a need to auto bump versions on both repo PRs AND forked PRs when they merge to the main branch. Historically using a PAT with one workflow run would fail, as it runs in the context of the forked PR and does not have access to the repo secrets./nIn my company we came across the same issue and found a solution which works pretty good and does not require adding a PAT:/nMy use case is like this. After someone merge PR to main branch, I want github actions to add/update some repo files and push those to main branch./n"
    },
    {
        "title": "Allow specifying workflow run when creating a checkrun from a GitHub workflow",
        "url": "https://github.com//orgs/community/discussions/14891",
        "upvotes": "1288",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 5,
        "replies": 2,
        "comments": 9,
        "body": "There is a super old issue that affects manually created check runs, see: https://github.community/t/github-actions-status-checks-created-on-incorrect-check-suite-id/16685, https://github.community/t/specify-check-suite-when-creating-a-checkrun/118380/nThis issue was reported in Oct. 2019 and we're still waiting for a fix as of May 2022.\nhttps://github.community/t/github-actions-status-checks-created-on-incorrect-check-suite-id/16685\nhttps://github.community/t/specify-check-suite-when-creating-a-checkrun/118380\nhttps://github.community/t/associate-a-check-run-with-a-workflow/122540/nAny word on this? When a developer views a workflow and does not see the checks that should be associated with it, it slows them down when they have to hunt for the results. Any way we can get this prioritized? Is there a tracking ticket?/nIt would be helpful if you could provide some scenarios that you are trying to accomplish by creating your own check_runs.  With the job summaries feature and directly creating annotations on the current job via the issue workflow command, I don't have any good additional ones in mind./nThis issue is particularly prevelant when using workflow_dispatch.\nWhen manually running a workflow, where the report is published as a check run annotation, the report gets associated with ANY existing workflow run. So if you have 10 workflow runs (completed or incomplete), the report could be published to ANY of them. This is a huge flaw in the current API./nAlso running into this issue, still no updates on this?/nI'm also hitting this issue. Do you have any updates or possible workarounds? Thanks/n@chrispat our use case:/n@yury-s\nHello, did you solve this somehow?/n\ud83d\udc4b/n"
    },
    {
        "title": "Add a way (command or step) to early-exit the job and set check conclusion",
        "url": "https://github.com//orgs/community/discussions/82744",
        "upvotes": "1078",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 123,
        "replies": 0,
        "comments": 4,
        "body": "Product Feedback/nCurrently, https://github.com/actions/toolkit/tree/main/packages/core#exit-codes says:/nThis is something that has come for me a lot when working on workflows, would REALLY love to see it implemented/nIf you're looking for a solution, at least to cancel:/nIt is a must to avoid repetitive if conditions on all the following steps and improve readability!/n"
    },
    {
        "title": "Using concurrency in workflows shouldn't cancel previously pending workflows",
        "url": "https://github.com//orgs/community/discussions/41518",
        "upvotes": "551",
        "tags": [
            "Actions"
        ],
        "rections": 109,
        "replies": 13,
        "comments": 34,
        "body": "Better discussion:/n(Seems like this discussion is missing a few labels, but I'm not sure what to do to add them.)/nSee also: actions/runner#1523, actions/runner#2227 (folks from GH saying not their problem), https://github.com/orgs/community/discussions/5435 (folks from GH saying they won't implement, a year ago), https://github.com/orgs/community/discussions/33142, https://github.com/orgs/community/discussions/12835, https://github.com/orgs/community/discussions/33948, https://github.com/orgs/community/discussions/32376. Related: https://github.com/orgs/community/discussions/31040, https://github.com/orgs/community/discussions/31544. Plus lots of others, plus others discussing the need for configurable concurrency limits (e.g. limit to 2 concurrent jobs)./n+1 - 'concurrency' implementation lacks a few important features.\nUnfortunately, I don't know how we can raise an issue about that.\nVitaly\n#46014\nhttps://www.linkedin.com/posts/vkarasik_cicd-jenkins-githubactions-activity-7026518468577366017-X0tt/nAgreed, this is a very important lack. I find it very surprising that GitHub's pipeline lacks the ability to manage queues/nMy use case: I've got expensive e2e tests that I only want to run one master copy of at a time to leave headroom for all the PRs that might need the resources. I want to run on every master commit so we can easily bisect when they break. We have multiple commits per hour during working hours./nHow come pending jobs with concurrency are being cancelled? most of us will want all of them to await running and not be cancelled by new triggers./nSame here. We need the option\ncancel-pending: false/n+1 need a waitting list/nMature CICD solutions (Azure Devops, CircleCI) have this solution, see here for Devops implementation: https://learn.microsoft.com/en-us/azure/devops/release-notes/2021/sprint-190-update/nAny updates on this one?/n+1 to having cancel-pending: false/nDoes anyone have a clever workaround to not having support for cancel-pending: false?/nAgree. Much needed. would be great!/nAbsolutely, implementing concurrency in workflows can enhance efficiency and streamline processes, but it's crucial to ensure that pending workflows aren't inadvertently canceled. Proper management and coordination of concurrent tasks can prevent disruptions, allowing for a more seamless and productive workflow environment. Balancing concurrency with careful oversight ensures that all tasks are executed effectively without compromising existing processes./nI'm shook. This is not expected behavior from concurrency at all. Who in the right mind thought it was a good idea to remove queued items from the queue.. \ud83d\ude44\nAll we want is a basic FIFO queue. How is it even useful in its current state?/nFor anyone looking for a workaround, check out https://github.com/marketplace/actions/action-turnstyle/none workaround is to limit the workflow to only run on a single runner. This way, runner will limit the number of concurrent runs./n+1 \"cancel-pending: false\"/n+1 \"cancel-pending:false\"/n+1 \"cancel-pending:false\"/nI proposed a feature request here\nhttps://github.com/orgs/community/discussions/12835\nPlease upvote it/nEy Github team, this is an important Lack , we really need this due requirements to work one workflow at once but without cancel , just enqueue.\ndo you have some information about feature.\n+1 \"cancel-pending:false\"/nThe behavior of concurrency groups is very surprising. This is a much needed feature./n+1/n+1/n+1/n"
    },
    {
        "title": "Support organizing workflows in directories",
        "url": "https://github.com//orgs/community/discussions/15935",
        "upvotes": "485",
        "tags": [
            "Actions",
            "UI/UX",
            "ProductFeedback"
        ],
        "rections": 87,
        "replies": 0,
        "comments": 13,
        "body": "As it currently stands, all workflows have to be in the .github/workflows directory.\nWe currently have around 30 workflows, and that number increases as time goes.\nWe also have specific workflows for specific platforms (Win/Mac/Linux etc.) and as we support more platforms, the number of workflows multiplies./nReally interested on this \ud83d\udcaf/nAlso interested in this. Currently have about 12 files in our workflows dir and we haven't even finished migrating the remaining (bulk) of our CI config off of CircleCI. Probably will end up with like 40-50 yaml files in this flat directory in the end./nHi! Is there any plan to have this feature implemented? Really interested on it!\n@worace  we have being prefixed the names of the workflows by category, so we can organized them and be easier to find what is dispatch, reusable, schedule jobs, etc. But would be nice if we can organize them in folders./nYeah, this would be really helpful. Bigger monorepos quickly gets cluttered :)/nWe also need this feature implemented./nWould love to have this/nGreat suggestion/n+1 to this. Looks like I'm going to have to have long messy \"..yml\" filenames and \"/\" workflow names for now.../nDefinitely!/ni require this/nThis would be great - we have 45 currently./n+1 this would be extremely helpful!/nIt's shocking that the request has not received a response in almost two years! It would be better if you had provided clarification on whether the issue is planned for the future, or if it is not a priority and won't be addressed anytime soon./n"
    },
    {
        "title": "Support for organization-level default timeout setting for GitHub Actions",
        "url": "https://github.com//orgs/community/discussions/14834",
        "upvotes": "477",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 94,
        "replies": 2,
        "comments": 10,
        "body": "When using GitHub Actions, it would be nice if we can set timeouts at the organization level to prevent someone in the organization from accidentally setting up a workflow that runs for a long time./nWhen running an organization, a rookie engineer may implement an workflow job that usually takes 10 minutes but one day, some bad change make it stuck for 6 hours. This feature is needed by an org admin./nEven though it is not a solution, and just a (maybe) workaround to cover part of the functionality of having a default GitHub Actions timeout time, what I did so far is create a variable at the organization level, and then refer to it in all the jobs. At least in this way I can have a default global timeout, and then if I want to do exceptions per project or repository, you can create further variables at the organization or repository level./nI was unpleasantly surprised by one job running 6h on a dependabot PR during the weekend because the initial Ruby install didn't finish. Normal job run is under 10 minutes. So this can be a problem even if no changes are made to the action./na workflow in my org was just discovered to have been running for last 4 months.\nwasn't even able to cancel the run, had to delete the run itself./nJust had two jobs run for over an hour each. Fortunately I was paying attention, but really how is there no default timeout? (Let alone the default settings requested here which makes a bunch of sense)./nI will be very grateful for introducing such functionality. From the perspective of an administrator of a very large organization (thousands of repositories), it would be extremely useful./nthis is a very needed functionality/nIt will be great to have a functionality like this./nI use GitHub classroom for a DevOps class. We have students making their own workflows for projects, including their own yaml configs. I ask them to put limits on each job, but all it takes is one to forget and get something stuck forever. A global limit would be a huge upgrade for our class to not burn massive $$$ when students just start running a workflow over and over when each one is stuck so we're then burning massive minutes for no reason./nRecently I ran into the same problem of workflow getting stuck for a very long time. Ultimately, I had to use force-cancel api to cancel it. No other options worked for me. A global timeout at repository level should be good fail-safe to have./n"
    },
    {
        "title": "Array input type support in reusable workflows",
        "url": "https://github.com//orgs/community/discussions/11692",
        "upvotes": "415",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 326,
        "replies": 13,
        "comments": 12,
        "body": "Is there any plan to support arrays for reusable workflow? I mean this - https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onworkflow_callinputsinput_idtype/nHi @HavenDV - we don't have any immediately plans here.  Can you tell me a little more about how you envision using arrays?  I'd love to understand your use case a little bit better./nAnother good usecase is self hosted runners + reusable workflows. I want to pass the \"run-on\" to the reusable workflow and in case of self-hosted I have to pass at least 2 items. Not having a list type makes this task a bit tricky./nanother use case we found while configuring cypress was the matrix parameter for on how many instances this is supposed to run\nhttps://github.com/cypress-io/github-action#parallel/nIn my case, I need comma-separated values dynamically from the Manual triggering workflow. So here is my solution/nI have an dumb but solvable solution case/nHi @ethomson\nPassing an array to the reusable workflow matrix is my use case.\nFor that, thanks @Teakowa for your tip!/nI was looking for this in the docs. Guess it's still not an option, so I'm either going to have to run the called workflow n times from the caller workflow or use this fromJson approach./nMy usecase is a bit different I have a custom action which will delete the current folder after the jobs runs, this is because we are using a persistent instance as a runner. I would love to be able to add an input that will be an array of directories, that array will be defined by the workflow where I'm calling this action from and used inside the action to delete the desired folders./nToday, I have an Atlas Operator re-useable workflow that takes in a handful of inputs./n@ethomson It has been a year and a half since the ticket was created, and the community has provided incredibly valuable feedback. We're eager to know if there have been any developments in this regard, or if there are any plans to extend support for list-type (perhaps even dictionary-type) inputs./nHi. Any update on this? This discussion has plenty of good use cases, and the workarounds are all pretty clunky. Would be great to get this feature properly supported./n+1 for array as an input. My use case is also passing multiple args to docker build as mentioned above. There are workarounds but they are errorprone and hacky./n"
    },
    {
        "title": "Feature request: Require (only) one specific job in matrix to finish for other dependent job",
        "url": "https://github.com//orgs/community/discussions/42335",
        "upvotes": "362",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 16,
        "replies": 0,
        "comments": 14,
        "body": "Product Feedback/nI've been missing this for a long time now. My use-case is a bit more complicated though - I have multiple matrix jobs and I'd like the dependent jobs started as soon as their dependency from another matrix finishes. TLDR: it would be great if we could use the matrix syntax with its brevity and flexibility and yet still be able to start subsequent jobs as soon as their dependency is done building, thus decreasing the overall time to feedback for the developer as well as the total CI runtime (depends on use case)/nWe also have a similar use case where our workflow times would be sped up by 2-3 times if this was implemented. To me this is an obvious feature to add when you are dealing with matrices in more advanced workflows./nThis feature is a must - this increases the performance\nIt would be great, if this is added..!/nI can do this in Jenkins./nI agree that this feature is a must-have!/nI also need this feature!/nI also need this feature/nI need this feature too./nI also need this feature!!!/n+1/nI am also in need of this feature./nI'm Spartacus./nLord have mercy please just upvote, thumbs up, and subscribe to the discussion instead of spamming 50 people just to write \"pLuS oNe MeE tOo I wOuLd LiKe ThIs FeAtUrE\" for the 30th time./nFYI The workflow could be rewritten into one workflow and one reusable workflow without relying on missing features.\nJust in case you end up here and don't want to wait another year for an official answer./n"
    },
    {
        "title": "Protected environments don't work when using tags for deployment",
        "url": "https://github.com//orgs/community/discussions/62991",
        "upvotes": "338",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 127,
        "replies": 56,
        "comments": 51,
        "body": "Bug/nWe have the same problem. It worked until some days ago but suddenly it's failing. It seems that tags are no longer part of branch protection rules?/nWe also are experiencing this issue. All our production deploys started failing unexpectedly with branch protection issues. Previously, we were able to limit these by using a tag pattern, now we can't even use protection on \"main\" and deploy from a tag on main./nWe noticed the regression started around the time rulesets came out of beta:\nhttps://github.blog/changelog/2023-08-02-github-actions-required-workflows-will-move-to-repository-rules/\nhttps://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/managing-rulesets/about-rulesets/nSame problem in multiple repositories. Our usual flow is to run a workflow with the ref set to a tag. The tag's name must match a pattern which we'd defined using branch protection rules. This worked as recently as two days ago, but began failing for us yesterday. This is a major disruption to our workflow and without having received any sort of notification of this change I have to assume it's a regression. To continue with deployments for now we've simply removed our branch protection rules... not great!/n\ud83d\udc4d causing us grief too/nAs @jan-xyz pointed out this seems to be on purpose according to their blog post as obviously tags are no branches. However I have the feeling they're missing the fact that Releases are based on Tags and not on Branches. The missing of \"protected tags\" when it comes to environment protection seems to be completly ignoring the fact that a Release in Github doesn't actually have a branch./nI don't understand, what is the workflow Github expects us to use with this change? Are we supposed to not be able to use protected environments with Actions at all?/nPublicly commenting to agree with the others here. We use protected environments and automate releases using tags./nWe are also broken due to this.  We will now need to remove standard protection rules from environments in all of our repositories.  We were already working around a limitation in GitHub Actions where there is no option to specify an input parameter that can be a \"tag\" type and allow selecting a tag version.  So the workflow_dispatch trigger where you can select a specific tag was the best workaround we had come up with.  Feels like a warning with some notice or even monitoring how many folks this would break before introducing a breaking change would have been prudent./nSame problem here, all our production deployments are at halt since there is no other alternative to this./nAdding Selected branches with v* filter worked since we have started using github, now one of the repos has broken and I got a reply from support this is going to break further due to https://github.blog/changelog/2023-08-10-actions-runs-triggered-from-tags-or-forks-with-the-same-name-as-a-protected-branch-will-now-be-blocked//nIf tagging is not/(was never?) the expected way to handle release workflows, then why is the recommendation here like this? https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages#publishing-packages-to-the-npm-registry/nHow does github continue to to screw over everyone with these decisions./nWhat is even the point of releases anymore/nOur production workflow is also affected, and by that I mean completely bricked unless we remove all protections, by this poorly communicated and implemented change./nAlso having a problem with this. Can we get some help with this issue? Anyone get any sort of news / response from support?/nI agree, it's a big inconvenience!/nAlso affected this. Please address this issue./n[removed by moderator] do either of you have connections to someone at Github who can respond?/nme as well/nI want to add one more comment to this discussion.  As far as I can tell, the change to only support branch names in the environment protection rules forces teams to deploy to environments from branches.  We are using versioned deployable artifacts, which I see as a safer more mature way to manage deployments.  To me this change by GitHub seems to force folks to use a less mature deployment pattern (or forgo environment protection rules).  I hope the GitHub dev team is looking at ways to support this safer more mature approach./nAlright a bit more clarify on when this is gonna resolve... I lack some emojis though to express my deep sadness./nUnclear why GitHub wouldn't link to this themselves, but they posted a public response yesterday including a roadmap for addressing the issue discussed here:/nThanks for all the patience on this folks. \ud83d\ude4f\ud83c\udffc\nHappy to share that GitHub team is now prioritising a few enhancements around GitHub Actions - Protection rules to enable admins to secure their deployment rollouts to their protected environments./nThis issue has been resolved today./n\ud83d\udc4b I'm here from the GitHub Engineering team.  We've been following this thread and we understand this change meant you couldn't ship your code to production.  That's something we take seriously.  I wanted to explain our reasoning with this change and share what we've done to try to make it better./nJust want to point out that the environments feature doesn't work particularly well with the schedule function since it limits you to running an action only on the default branch./nThis was working for a few weeks but now GitHub have broken it AGAIN. I deployed a GitHub release with tag protection rules set to v* fine yesterday afternoon. This morning another release is failing with:/n"
    },
    {
        "title": "Use working-directory for entire job",
        "url": "https://github.com//orgs/community/discussions/25742",
        "upvotes": "289",
        "tags": [
            "Actions"
        ],
        "rections": 138,
        "replies": 14,
        "comments": 20,
        "body": "Is it possible to specify a working-directory for an entire job? e.g. the equivilent of specifying the same one on every step?/nWhen you use jobs.<job_id>.steps.run , using the working-directory keyword, you can specify the working directory of where to run the command. You need to add work-directory keyword to all jobs.<job_id>.steps.run./nIts a workaround, but a lot of reptition code and not error prone!/nYes this is not a great solution since you cannot use/nIs there still no way to set a working directory that applies to all the steps in a job?/n@nodesocket I am afraid that I have to say no. What\u2019s your scenario which need to run all steps in a specific path? Let me see whether there\u2019s a work around for you.\u00a0/nHey\u00a0@yanjingzhu\u00a0,/nHi\u00a0@sharkyze\u00a0,\u00a0/n\u00a0@nodesocket\u00a0\u00a0Doesn\u2019t this get it done:\u00a0https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_iddefaultsrun/n@masahigo that worked perfectly. Must have missed that./nTake a look at: https://dev.to/shofol/run-your-github-actions-jobs-from-a-specific-directory-1i9e/nworks for me./nConsider a trivial case. One Repo has multiple projects each in their own sub-folder. The commands require that the project folder be the current folder\u2026  Now create workflow/actions so that everything happens for a given project./nThat\u2019s for all jobs, not all tasks in a given job./nHave you found a way to use/nYou can set working directory as a default for all jobs, default for all steps in a job, or on a per job basis. See the third example here. Does this help you, or did I misunderstand what you are trying to do?/n/nI wish there was a working-dir: inherit! Something like:/nI've upvoted things here to try to increase visibility, but I'd like to elaborate our use case just in case that helps the github team. Similarly to others, we have a monorepo workflows containing all the re-usable internal workflows our organization consumes (things like rust-ci, scala-ci, deploy-docker, etc) that our other repos point to and make use of. They pass inputs to tweak the behaviour of the workflow they're using./nPlease Response #1/nPlease Response #2/n"
    },
    {
        "title": "Feature Request: Automatically switch to Github runner if self hosted runner is not available",
        "url": "https://github.com//orgs/community/discussions/20019",
        "upvotes": "282",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 100,
        "replies": 9,
        "comments": 17,
        "body": "Describe the enhancement\nAdd support in Github action which will pick Github runner if self hosted runner is not available automatically.\ne.g. Setup single self hosted runner. If it is available then pipeline should run using self hosted runner and if it is not then pipeline should use Github Runner and complete its job./nI was looking for something like this as well../n@CoreCypator Hey can you please tell us how to give priority in the list above?\nRouting precedence of self hosted runner see this list as a combination of labels./nThere could be a fallback-runs-on parameter that looks the same as the runs-on property, but runs-on will be tried first and if no runners are online then the fallback-runs-on runners would be tried. Then the 60 minute timeout could kick in after that?/nI second this! In my case, I want this feature because my self-hosted runner may be offline (for maintenance or whatever reasons), and it would be really nice if these queued CI jobs could automatically switch to GitHub runners after some time./nHey guys ... so.. has this been picked up yet or considered?/nDid you ever try to assign your self-hosted runner to GitHub hosted runner labels like ubuntu-latest, macos-latest and windows-latest?/nFor us, the important point of such a feature would be that it wouldn't switch to a Github runner if the self-hosted runners are merely busy. Only if they are not online at all./nWhile I'd love to have this, there is something that repository owners can do while they wait for something better:\nhttps://github.com/commercialhaskell/stack/blob/8fd916a3941243ca3ac559390e5ea84af5aef037/.github/workflows/integration-tests.yml#L150-L181/nI've had some success using this pattern.../nHello ! Any news on this ? :)/nHi!\nAny update on this thread?/nThe enhancement proposes the addition of automatic support in GitHub Actions to utilize a GitHub runner if a self-hosted runner is unavailable. Specifically, it suggests setting up a scenario where a single self-hosted runner is configured. If this runner is accessible, the pipeline will utilize it; however, if the self-hosted runner is not available, the pipeline will seamlessly switch to using a GitHub runner to complete its tasks. This approach ensures smooth workflow execution even in cases where the preferred self-hosted runner is not accessible./nAnswer from a github staff member would be nice!/nAny news on this?/nDynamically Selecting GitHub Action Runners Based on Availability  \ud83d\ude80/nWhat about the other way arround? Switching to a self-hosted runner if the spending limit has been reached? Would this work the same way?/nThis is relevant also for me. What about if runner selection could be even more generic, something like;/n"
    },
    {
        "title": "Github action stuck at queue",
        "url": "https://github.com//orgs/community/discussions/26693",
        "upvotes": "261",
        "tags": [
            "Actions"
        ],
        "rections": 32,
        "replies": 67,
        "comments": 70,
        "body": "I have a workflow that stuck at Queue state for a long time. I can\u2019t even cancel the flow. Re-commit also did not help with this problem.\u00a0 /nSame here./nSame here. :-//nSame here, though I have seen builds working in public repos, mine is private, not sure if that makes a difference.\u00a0 Failed build (broken yml) is somehow failed and queued for the last 13 hours and the build after it is just pending and not starting./nI saw the same problem. I reached out to GitHub, and it\u2019s a known issue they are working on./nsame here \ud83d\ude22/nNow my action has been working perfectly. But the 2 builds that stuck can\u2019t be canceled or deleted.\u00a0\n/nDo you have a link to track the issue?/nHi,\u00a0/nAny news , anyone ?/nSame here./nI\u2019m seeing similar issues. Looks like github actions is seeing degraded performance right now. Hopefully it will clear up as this gets fixed./nAlso encountering this issue, builds ultimately file to some kind of timeout. Copypasting all the error messages I\u2019ve received here so googlers find the thread:/nI\u2019m seeing the exact same issue right now,/nSame here, all builds stuck and CI failed with\u00a0/nMy builds are also stuck in the queue. But fails after 15mins or so saying\u00a0/nHi, I have the same issue with stack queued deployments,\ncould you help me, please?/nHi everyone,/nI'm getting the same issue with ubuntu-latest/nI'm getting the same issue with self-hosted\n/nThe symptoms described in this issue can occur if your runner image is no longer supported. This happened to my project, which has been using the recently-deprecated macos-10 image. If you are having this issue, verify that the runner image your action is using is one of the supported versions (e.g. ubuntu-latest or macos-11). If the runner image you use does not appear, try updating to one of the versions listed./nWe are using GitHub enterprise and facing the same issue. I have used runners: windows-latest and ubuntu-latest. Neither of them worked. Build is stuck for more than 2 days in the Queued state./nI had copied a static.yml file with this chunk of code in it, which was blocking concurrent jobs.  Removing it unblocked things./nActions how now been stuck for 40 minutes./nA workflow build has been in progress for over 40 hours./nSo far stuck for 2 hours...\n/ni'm using a self runner and i encountered the same error, any ideas how it can be fixed ?/nResponse #1/nstuck for 2weeks:/nCurrently stuck waiting for a macos runner for over an hour/n"
    },
    {
        "title": "Steps in parallel?",
        "url": "https://github.com//orgs/community/discussions/26291",
        "upvotes": "258",
        "tags": [],
        "rections": 361,
        "replies": 10,
        "comments": 10,
        "body": "Is it possible to run given steps in parallel?/nNot at this moment. Only jobs can run in parallel, but steps always run sequentially./nHi, is this still the case that the steps within the job cannot run in parallel./nIf your steps are shell commands can you run them as a background task using the \u2018&\u2019 at the end of the command line.\u00a0 You won\u2019t be told when they finish.\u00a0 I also don\u2019t know if the workflow run will know to wait for the job to finish before it kills the instance./nAs @amezick mentioned it is indeed possible via background tasks. And you can wait for them!/nOr you can use GNU Parallel!/nI am looking forward seeing steps to be runnable in parallel. so that the setup steps can run once (installing dependencies, setting up database etc) but then everything else can be run in parallel/nI just create a multitask rake task:/ncan show the detail of it, thanks/nyes to parallel steps!/nPlease vote for supporting parallel steps here: #14484/n"
    },
    {
        "title": "Alternative to YAML for defining workflows",
        "url": "https://github.com//orgs/community/discussions/15904",
        "upvotes": "236",
        "tags": [
            "Enhancement",
            "Actions",
            "ProductFeedback"
        ],
        "rections": 151,
        "replies": 7,
        "comments": 3,
        "body": "Currently the only way of defining a workflow is using YAML. It has its drawbacks: lack of typing, no way to extract a common piece of logic, no way to programatically generate a workflow, indent-sensitivity, no auto-complete regarding e.g. actions' inputs, and more. While it works fine with simple workflows, it becomes unmaintainable with more complex ones./nYes please!/nFriendly ping - dear GitHub, is it something you would be interested to introduce?/n+1/n"
    },
    {
        "title": "Provide GitHub-hosted runners in other regions",
        "url": "https://github.com//orgs/community/discussions/11727",
        "upvotes": "233",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 40,
        "replies": 5,
        "comments": 10,
        "body": "Right now GitHub-hosted runners are located in the US only./nYes, I definitely agree that we need this feature ASAP./nThanks for the feedback - I can understand your desire to select a region for your runners.  We have this on our backlog, but we don't have any immediate plans for this./nAny ETA about this feature ? It's a must-have ! :)/n@aramfe fwiw, running self-hosted runners on ECS/Fargate as a service for the past 6months or so has been more or less completely maintenance free. The runner agent self-updates by default and the container's init script auto-registers on startup, which allows me to scale the runner instances up and down (I use an EventBridge scheduled task to scale up to 10 runners during business hours and back down to 1 off hours). I also chucked an API call in to deregister any offline runners into the init script, automating the cleanup within the same process. You can't run any Actions that rely on Docker, but for E2E and browser tests (and pretty much most things), that's not been a problem./nThis has already been requested several times in the past:/nAny updates? Would also like the ability to have github workflow actions running from australian servers./nAny updates on this please? (request for Australian region). Thanks./nAny updates on this? Some websites ban US IP addresses and then all RESTful requests return HTTP 451 error, need this feature ASAP/nAny update on this?\nI have a few github actions that stopped working since the API they were using is now banning US Ips/n"
    },
    {
        "title": "How to get just the tag name?",
        "url": "https://github.com//orgs/community/discussions/26686",
        "upvotes": "228",
        "tags": [
            "Actions"
        ],
        "rections": 160,
        "replies": 6,
        "comments": 22,
        "body": "I trigger my workflow using/nYou can use paramter expansion:/nNothing indicates that GitHub Actions use bash to evaluate their variables. Are you quite that this is supposed to work?/nYou could use actions/github-script/nHave you tested this? This produced an empty value for me for some reason./nThis is how I\u2019m currently doing it:/nNote that tags can contain a / character in them.\u00a0 For completeness, I\u2019d actually recommend explicitly removing the refs/tags/ instead of splitting on the / as a delimeter.\u00a0 For example:/nThanks. Could you add that as a general context/environment variable? It seems to me to be a very common use case and this step of truncating the string is just really annoying IMO./nAt the moment we\u2019re basically populating the data from the webhook.\u00a0 If we start adding additional data beyond that then this seems like a good candidate.\u00a0 Thanks for the feedback!/nI prefer this syntax:/nMy approach is setting three vars:/nThis is awefull and annoying, I been wasting my time and breaking my head over this for hours. Gitlab has a dead simple straight forward to the point/n@ethomson how would you do for a Windows runner ?/nI\u2019m not very familiar with PowerShell, so what I\u2019d do is just run it in bash on Windows.\u00a0 You can do this by setting shell: bash for that run step./n> Note that tags can contain a / character in them./nI use this for windows/nWith Windows ( runs-on: windows-latest ) it would be/nAny idea how to get the tag name to the artifact file name? I have been trying to use this steps.tag.output.result to the artifact filename but its returing null./nAny update on that? I\u2019m strugglin because I want to publish artifacts from the build but for some reason they have to be unique. Okay, I can use tag, but there is no variable for it. And I cannot use suggested workarounds becuase i need to use tag in matrix, before all the jobs are run./nThis accepted solution doesn\u2019t seem to work on windows-latest; the version always comes off empty./nSince this page shows up surprisingly high in Google search , here is the 2022 answer in \"How to get a tag name in GitHub Actions\"/nI use ${{ github.ref_name }} or $GITHUB_REF_NAME or ${{env.GITHUB_REF_NAME}} currently./nThis is May 8 2023, i can confirm ${{github.ref_name}} can be used on linux, macOS and windows-2022 for git tag./n"
    },
    {
        "title": "Run actions on Pull Requests with merge conflicts",
        "url": "https://github.com//orgs/community/discussions/26304",
        "upvotes": "216",
        "tags": [],
        "rections": 153,
        "replies": 3,
        "comments": 42,
        "body": "We have a suite of actions which allows us to build and deploy mobile apps archives from pull requests, which we use as a part of our release process and planned to use for feature development./nThank you for reaching out! It\u2019s a limitation that workflow is not triggered for \u2018pull_request\u2019 event if conflicts exist./n@weide-zhou wrote:/nHow is this Solved? The the question is specificly asking how to trigger an action for a conflict on a pull_request and the solution does not provide any hint on how to do this./nWhat exactly is the suggested course of action when a PR has merge conflicts with the master branch of a repo? Actions don\u2019t run at all, and using Github\u2019s merge tool causes the master branch to be merged into the PR branch. This is, IMO, super messy and not ideal./nHi @adrianjost @sebr74 @JGJP,/n@weide-zhou/n@weide-zhou/nHi @JGJP,/nThis is clearly a bad design. Actions aren\u2019t necessarily related to code. Having conflicts shouldn\u2019t be a blocker. My actions deploy the code elsewhere, and having conflicts is not an issue. Sometimes, those conflicts will never be fixed because we\u2019re working from a v1 to v2 and use the PR as a diff tool, but don\u2019t meant to perform an actual merge in the end./nI\u2019ve created a new shiny bot that resolves git conflicts (on lock files)  automatically and pushes fixed branch back.\nUnfortunately I found out that action is not triggered if PR contains conflicts \ud83d\ude26/nI also think that workflow should be triggered anyway.\nLet it fail on checkout or any other step, but at least there will be some kind of visibility.\nAlso, in this case users can control whether they want such workflows to fail, by switching to head_ref commit instead of merge commit in checkout step./nWasted 2-3 hours on this issue. It would never occur to me that this might be the case./nDoes anyone know a workaround for this?/nThe pull_request_target does not solve this, since it runs against the base commit in the base repo (the PR target), not on the HEAD of the PR branch./nThat\u2019s true, but I believe you can get a ref to the head from the pull request object and checkout to it. This at least solves the problem of pull_request events not running when there are conflicts/n\ud83e\udd26\u200d\u2642\ufe0f https://stackoverflow.com/questions/67501652/github-workflow-event-trigger-synchronize-not-working/nThis is a bug. An engineer at Github put an arbitrary condition if has merge conflict then skip in the code that triggers actions. This is a false assumption and should be fixed./nWe never had the issue before (or at least we never realized we had it \ud83d\ude33), but starting around July 31st 2023, we started to experience it. I can't see what we changed in our code that could have resulted in this behavior starting to manifest itself. Was there a change on GitHub side that solved the issue for a while, followed by a regression? \ud83e\udd14/nWe are running into this issue and it's causing a bit of dev cycle waste in our teams. We explicitly build feature branch workflows off of the pr base and not a merge commit, so it's confusing why the workflow simply doesn't run just because main had some updates that conflict. I considered switching our workflows to pull_request_target, but in addition to the caveats above it means that PRs won't be able to test their own changes to the workflow./nRan into this in sharkdp/bat#2755. Actions won't run because of changelog merge conflict (which is yet another longstanding issue that GitHub refuses to address)./nI've also been hit by this annoyance. As someone said before, it is wrong to assume that just because there are conflicts, there should not be automation.../nSame issue here, really annoying./nA gitflow model we employ is severely hindered by this limitation./n+1, it would help a lot./n+1 from me/nBy the way, this not only affects pull_request and pull_request_target but also pull_request_review. So for example, if you have a workflow that does something when a person approves a pull request, then this workflow does not start at all if the pull request has a merge conflict at the time the review is submitted./n+1 from me, on two fronts: this behavior is not only unexpected by many as evidenced by this discussion thread, but it's also not documented anywhere and left for one to find out just after designing a system that would depend on this./nJust wasted one hour due to this behavior. Even if you don't want to allow workflows to run if there are merge conflicts, please at least put an error explaining why the workflow is not starting so we don't waste time trying to debug our workflows./n+ 1, it should be implemented as a rule which allows/disallows running the pipeline when we have conflicts, pretty frustrated that I have to fix 20+ conflicts on the temporary branch which was created only for pipe fixing.../n"
    },
    {
        "title": "How do I specify job dependency running in another workflow?",
        "url": "https://github.com//orgs/community/discussions/26632",
        "upvotes": "212",
        "tags": [],
        "rections": 15,
        "replies": 2,
        "comments": 15,
        "body": "I\u2019ve this workflow:/nYou cant./nWill this be a feature that will be added in the future?/nI think it should be supported!/nI would love to have such a feature. Perhaps it is simple (for GitHub) to implement, by adding another \u201con\u201d event trigger?/nThis solution would cause a problem if you are using matrix. It will run for every matrix item basically./nWhen will this be supported?/nI have try this code,/nSame here, I\u2019m facing the same problem. On every master push I need to test different JDK versions and then I publish a package snapshot, but i don\u2019t know how to solve it./nInstead of creating a new workflow, you might just create a dependent job. See the documentation for jobs.<job_id>.needs./nYes, you can put it all into different jobs in one workflow, but breaking up your large files into logically separated smaller files is a pretty universal programming best practice, and that\u2019s extra true when you have a lot of different things branching off from one spot (like your tests passing or whatever). If they want to define a workflow as all of those branches together, that\u2019s fine, but that means we need to be able to split out jobs into different files. Otherwise, we\u2019re forced to either write code in some scripting language that builds into the yaml code for our workflow or create some sort of funky trigger event, both of which are incredibly hacky./nThis is possible using the GitHub Workflow runs API. Assuming Testing workflow fails if the testing step fails, in the Deploy workflow, you get the conclusion of the latest Testing workflow run using some cURL and jq foo, and then exit if the output is not success. See this project, where publish depends on ci./nI am also interested in this as well. Workflow depencencies is a must to allow engineers breakdown their pipelines logically in separate files instead of having to maintain huge files.\nI thought I didn\u2019t like GitLab\u2019s approach but they are miles ahead!/ncould be possible with workflow_run\u2026/nSurprised this isn\u2019t supported. It would be nice to have multiple workflows nicely separated (one for builds, one for tests, one for deployments) and have some depend on others. It\u2019s possible now using all jobs in a single workflow but its a little messier imo./nHmmm\u2026 so.\nYou go from \u201cbuild\u201d workflow to \u201cAPI\u201d to \u201cstatus var\u201d to \u201ccheck, if you can publish\u201d to \u201cpublish\u201d.\nThis is a really clever workaround for a missing feature!/n"
    },
    {
        "title": "Make locally defined composite actions always accessible for local runs",
        "url": "https://github.com//orgs/community/discussions/11771",
        "upvotes": "210",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "I really like the concept of composite actions, but there is a fundamental problem with composite actions and templates which are supposed to be used in the same repository. Let's look how it is currently done, to re-use composite actions, which are located in the very same repository./nhere's my solution using sparse-checkout:/n"
    },
    {
        "title": "GitHub-hosted arm64 runners",
        "url": "https://github.com//orgs/community/discussions/19197",
        "upvotes": "202",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 181,
        "replies": 23,
        "comments": 15,
        "body": "Many devs have migrated to M1 laptops and there's a growing movement of migrating servers to arm64 linux. It would be great if there were official arm64 runners. Custom runners is not a great solution for something that is rapidly becoming the default case./nIt's worth noting that most competitors like for example CircleCI already support this. Heck, even Travis supports this./nThe Github Actions home page makes it look like ARM is supported as a 1st class feature, when it clearly isn't./nTravis CI has supported the Arm64 for some time, I think worth to try:\nhttps://docs.travis-ci.com/user/multi-cpu-architectures/nYou can try this https://github.com/docker/setup-qemu-action in the meantime.\nWon't be very efficient and may not work for everything, but you should be able to build arm docker image for example./nAlmost every cloud provider, including Azure, has arm64 servers now. But building arm64 container images on Github still requires QEMU which is so slow, it is close to being unusable. A ~2 minute amd64 build can take 30+ minutes on arm64. Native arm64 runners would be great, as more people are switching to arm64 servers and Github is lagging behind here./nIs it possible to update this discussion's title to be \"Github-hosted arm64 runners\"? I think that's what most people are asking for (since it's been possible to run self-hosted arm64 runners for a good while now). cc @Qard/nArm-based hosted runners are coming to GitHub Actions!\n[...]\nThese runners will be entering private beta in January 2024./njust private beta? i guess still need wait until middle of 2024 to use/nHi, does anyone have a date or any news on this feature ?/nReally want this ASAP/njust private beta? i guess still need wait until middle of 2024 to use/nI think this can be closed now? \ud83e\udd14/nHey! Yes ARM is currently in private beta while we work on ensuring we have an image that provides a good set of tools and we get our capacity all sorted :) it will be nearer the end of this year that we get our new default labels supporting ARM - but we are working on it actively <3/nI'm personally looking for linux ARM64 runners, so macOS runners don't do much for me at the moment./nHow can someone get included in the private beta?  I could use an ARM64 Ubuntu runner today./n"
    },
    {
        "title": "Is it possible to manually force an action workflow to be re-run?",
        "url": "https://github.com//orgs/community/discussions/25726",
        "upvotes": "178",
        "tags": [],
        "rections": 5,
        "replies": 3,
        "comments": 18,
        "body": "I pushed changes to my codebase, triggering a workflow to start.\u00a0 It fails.\u00a0 I\u2019d like to have it try again without pushing new code./nNo, re-running a GitHub Action is not currently supported. I\u2019ll pass along the request, but can\u2019t give an ETA on when they might implement such a feature./nManually rerunning an action is really needed. In addition I also would like to manually run a specific workflow; i.e. I would like to test a scheduled workflow before its scheduled run./n+1 for this. Sometimes there are errors (e.g. due to temporary upstream outages) when things run on a schedule, and being able to just click a button to re-run would be ideal./n+1, manually restarting a workflow is currently the feature I miss the most./n+1\nIMO, this is really a must feature for any CI service./nHi all, I\u2019m not entirely sure if this is appropriate or not to self promote here, but my buddy and I built an extremely basic MVP for handling this exact situation, because we wanted this feature as well:/nIts very hard to survive without this. Please, remove the condition to show the \u201crerun checks\u201d only when the workflow failed./nJust fleshing out my workflow and got a lot of/nIt is very much required./nIs there any update on this feature request./nYes, this would actualy be helpful! Simply remove the condition of failed.\nI found this blog post which creates a workaround for manually triggering the workflow through a curl request using the API:/nCould you please add me and my group to this feature request?/nSolution that works for me: To re-run a successful commit, push that commit onto a new branch or add a new tag./nI second to remove the conditional re-run. In the meantime I have added a Github Action for a manual rerun that I trigger from Postman. It is a quick setup and works great. I have the steps outlined here\u00a0https://medium.com/@christinavhastenrath/how-to-run-github-actions-manually-afebbe77d325\u00a0/nNo, re-running a GitHub Action is not currently supported/n+1/n+1/nThere is a re-run button:/n"
    },
    {
        "title": "Github Actions (new) Pulling from private docker repositories",
        "url": "https://github.com//orgs/community/discussions/25731",
        "upvotes": "173",
        "tags": [
            "Actions"
        ],
        "rections": 20,
        "replies": 3,
        "comments": 21,
        "body": "Hi All,/nGitHub Actions currently only supports public Docker images. I can\u2019t give an ETA or even promise if using Docker images from private repositories will become available, but I\u2019ll pass along your feedback to the developer team./nThis is something available on Azure Pipelines as a service connection.\u00a0/n@lee-dohm might you be able to comment on whether this is under consideration at all? This is a show stopper for us, as we need to use images in our private AWS ECR repos.\u00a0/nAdding the ability to use private docker registeries for Job, Service and Step containers is something we do plan to do. \u00a0However, I don\u2019t have an exact timeline right now./nI solved this by having a step in my workflow that authenticates and pulls the docker image and then using a internal repo action (which doesn\u2019t pull the image on startup) for using the private image. Not ideal but works until github adds support:/nIt looks like the actions/gcloud repo was archived - what should be used to replace that now?/nI also need this for private repos on both AWS ECR and Docker Hub./nThe strange issue here is, the docker:// images will be pulled right after initiating the runner, without executing the previous steps. Hence, we can\u2019t login to the private repository.\u00a0 Even if we mark the login as a separate job, the order of jobs is not respectes./nThis is particularly annoying because even \u201cpublic\u201d Github Packages repos require auth.\u00a0 So effectively we can\u2019t use Github on Github./nDoes the same apply for GitHub registry hosted docker images under a private repository?\nI\u2019d image it could inherit the permissions from the repository it\u2019s running the workflow in? \u2014 I believe that\u2019s how it currently works on GitLab./nMy main concern is that the Visual Studio build tools eula requires me to make the docker image with my configuration private. I am willing to make it public but i\u2019m not allowed to do that. So either Visual Studio build tools should allow being hosted on public dockers or github should allow private containers for this usecase. I find that Visual Studio is rarely configured correctly for my usecase (cutting edge c++), as usually only .NET things are taken into account./nIf you\u2019re using AWS ECR, and have self-hosted github runner, you can consider docker-credential-ecr-login (aka, the Docker credentials plugin)\n/nAnyone know the status of this?/nAlso writing here to manifest that I consider this an essential feature, and I\u2019d like to know what\u2019s the status with this request. Can we expect this to be supported anytime soon?/nThe last semi-official update from @chrispat was a little over a year ago. Are any updates available?/nShipped today for job and service containers./nsuch timing! great job, and thanks to all who made it happen @chrispat (including you)./nIs this only for pulling from GH registry? if I need to pull from GCR, it doesn\u2019t look like that\u2019s supported yet, unless i\u2019m missing something./nAny chance for AWS ECR support?/nsame issue here :(/n@chrispat, any timeline on when we will be able to pull from a private registry within a step? In my case, I need to pull from a private GHCR for a single step./n"
    },
    {
        "title": "Method/ability to share secrets across multiple repositories in an Organization",
        "url": "https://github.com//orgs/community/discussions/26971",
        "upvotes": "155",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 18,
        "body": "Hello! This is one part question, but (I think) more a feature request./nOrganization wide secrets could definitely be useful. We\u2019ve talked about this internally a few times./n+1. We have multiple repositories that consumer AWS and our internal package provider api keys and currently that would mean having our Our Cloud Engineering team manually copy secrets into multiple repositories. The ability to share secrets on an Org level and/or the ability to set secrets through an API would be super helpful./nOrganization-wide secrets for GitHub Actions would be a hard requirement for my organization (and I imagine a large number of others) to consider moving our Jenkins CI pipelines to GitHub Actions./n+1 this would be very helpful. Having to recreate the same secrets (such as AWS access key/secret) across all of our repositories would definitely be a bit of a headache to maintain./nAny status update on this? AppVeyor already supports this./nThanks everyone. Yes, we\u2019ll build this. No timeline to share yet./nEven just exposing secret creation at the api level would at least allow a way to manage secrets across many repos. Our org has nearly 100 repos and I\u2019m dreading trying to maintain common secrets across them - or worse worry over secret rotation in a sane way./nYes. We\u2019re working on it. \ud83d\udc4d/nIs there an ETA?/nOr maybe just letting us know how long it will take? 5 years? 2 years? 1 month? 3 months?/nAt my Company,\u00a0\nwe are deciding which vcs platform to use and the CI/CD plays a huge role in this./nHi,\u00a0@mscoutermarsh Do you have anything to share now? Especially that you\u2019ve released an API for secrets? While we can theoretically build it, we\u2019re still leaning on a built-in solution by Github./nHi\u00a0@thisguychris,/nSorry, I missed this notification./nJust adding my own +1 on this. It\u2019s been a few months, is there a more narrow ETA on this? If not, no worries. Just an eager user here :slight_smile:/nI saw there is that feature, that\u2019s great!/nOrganization level secrets are now available./nThank you! This is great. \ud83c\udf89/n"
    },
    {
        "title": "Self-hosted runners specific to repository?",
        "url": "https://github.com//orgs/community/discussions/26484",
        "upvotes": "154",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 9,
        "body": "Can self-hosted runners be shared across organization repositories and do we have to create one per repository? It will also be useful to document how to run config.sh in non-interactive mode or automatic provisioning. Thanks/nHi\u00a0@spasam, currently they are per repository. We\u2019ll be working on enabling them for organizations in the future./nFor an example on how to do it hands-off (noninteractive):/nThis is something that we\u2019d very much like as well, likely can\u2019t use github actions + self-hosted runner until then./nAny progress on this? We just moved across fom GitLab and found ourselves in an impossible situation to share self-hosted runners. This has a high impact on our work and if not resolved soon will have to roll-back./nAgreed that this limitation makes self-hosted runners basically unusable for our needs./nIt can be done, add multiple runner services on your machine for now./nIt\u2019s actively under development. I don\u2019t have a date yet that I can share. Getting it released as soon as we can./nHello,/nOrganization level runners are now available./n"
    },
    {
        "title": "Github Apps to add secrets",
        "url": "https://github.com//orgs/community/discussions/25270",
        "upvotes": "147",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 16,
        "body": "Can Github Apps API add secrets to repos to be used in Github Actions? It doesn\u2019t appear to be listed but would be tremendously helpful.\u00a0/nNo, it isn\u2019t currently possible to add secrets using either the REST or GraphQL API. I can\u2019t make any promises as to when or if it will be added, but I\u2019ll pass along the feedback to the team./n+1 on this. We want to be able to update the secret with short-TTL temporary credentials to limit exposure due to unintended disclosure. The ability to automatically update / rotate secrets is a must./n+1 for this. We require this capability to automate secret rotation.\u00a0/nSame here, having an API that allows us to add secrets would be really key for us./nWe definitely need this, without this we cannot use Github Actions (we have workflows that we MUST dynamically generate the secrets and upload to Github, we cannot do this operation manually through UI). Is there a timeline or workaround?/nAny update on this? Pretty surprising the API doesn\u2019t have endpoints for this./nHi all,/nThank you @mscoutermarsh!/nThanks! That will be really useful for us./nany update on this?/n+1.\u00a0/nSoon :)./nUpdate: this is now available :slight_smile:/nWe have written a tool to track secrets usage and provide a way for centralized rotation:\u00a0https://github.com/webfactory/secret-spreader/nAwesome work!/nI couldn\u2019t find this feature in Github GraphQL API. Does this feature available in GraphQL API too ?/n"
    },
    {
        "title": "Sharing a variable between jobs",
        "url": "https://github.com//orgs/community/discussions/26313",
        "upvotes": "1288",
        "tags": [],
        "rections": 133,
        "replies": 10,
        "comments": 20,
        "body": "I have a common task that I need to perform for all job \u201cvariants\u201d in a matrixed build. My idea was to use a separate job for that but I\u2019m unsure how to pass a build output between two jobs./nAs jobs run in different runners, those runners are in different machines.\u00a0Each job runs in a fresh instance of the virtual environment specified by runs-on. It is not possible to share environment variables between machines.\u00a0 We don\u2019t support to share variables between jobs.\u00a0\nAs you metioned artifacts, we would suggest you use it . You can write the version into a file , upload it as artifact in one job and then download the artifacts in the other job , read the file content.\u00a0/nI hadn\u2019t thought of writing the variable to a file but I guess that could work. Thanks for clarifying that it\u2019s not possible to share information any other way. I do think this could be a feature worth adding at some point. Writing to a file seems like overkill for a single variable. Thanks again.\u00a0/nHow to explain therefore that we can define environment variables at a global level as follows (thanks):/nHi distinctlab,\u00a0/nThanks for the tip. I found Github documentation provides how to share data between jobs.\u00a0/n\u00a0Thanks for your feedback. One of the current imits of github actions is to be able to declare from a job a global (workflow)\nvariable that can be shared with other jobs.\nI\u2019m talking about sharing variables not data (artifacts).\nDownloasd/upload artifacts actions is not practical to meet this need./nYeah, you are right. Github Actions could not declare a global env in one job and use it in other jobs in a workflow. I would recommend you to share your idea in the Feedback form for GitHub Actions./nIn the same way it\u2019s possible to share variables between steps, it should be possible to share variables between jobs as well. Since a job can declare its dependence on another job, the dependee could easily have its ouput variables persisted and exposed to dependent jobs through an expansions of the existing\u00a0steps.<step_id>.outputs.<output_name> syntax with jobs.<job_id>.steps.<step_id>.outputs.<output_name>. Example below:/nThe new jobs.<jobs_id>.outputs syntax should support this./nThanks for heads up, @bradymholt, this is extremely helpful./nProbably way too late, but I use this extension to share variables between jobs./nEDIT 2022/10/n@ dimisjim response should be the solution. Please change it just in case someone doesn\u2019t scroll down enough!/n@MostefaKamalLala I flagged the current solution and got the staff to change the solution. \ud83d\udc4ft2:/nAgreed, it\u2019s a shame there is not a more flexible solution for sharing data between jobs, as even the parameters option has so many limitations (ran in to another one today)/nI tried similar but not working for me./n      git_commit_count: ${{needs.build.outputs.buildNumber}}/nUnfortunately, using output is deprecated. It's being replaced by Environment Files. However, it doesn't look like it supports sharing env between jobs. Only sharing env between steps is supported right now. So it seems like we're back to square one again./nDoes this work in a matrix job? If I have a matrix the steps are the same, but run with different configurations. How does that appear if the output is \"flat\"?/nI couldn't get this to work if the job that you want to output is ran with uses.  Does anyone know if outputs are supported if the job that\nperforms the output is declared with uses property?/n"
    },
    {
        "title": "Allow actions to set \"neutral\" conclusion",
        "url": "https://github.com//orgs/community/discussions/9875",
        "upvotes": "1078",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 96,
        "replies": 4,
        "comments": 5,
        "body": "Today, it seems there is no good or easy way to conclude a Github Action as anything other than a success or failure. However, the Checks API supports other conclusions that can be useful for an Action./nOur project would benefit from having this feature as well. I arrived here via isaacs/github#1465 which describes the same need./nThanks, @jalaziz - I agree that this would be useful.  I'm sorry that we haven't gotten to this yet (it actually touches a lot of different pieces in the platform) but this is on our backlog to improve in the future.  Thanks again./nThe absence of this feature has wasted hours of my time while supporting community ruby gems, like oauth and oauth2, that have ostensibly more important things I could work on, than futzing with Github Actions./nEDIT: It looks like this is actually supported already?/n@eregon has created another Feedback Discussion that is more explicitly targeted to the ask for an allow_failure:\n#15452/n"
    },
    {
        "title": "Show branch when using workflow_dispatch",
        "url": "https://github.com//orgs/community/discussions/15690",
        "upvotes": "551",
        "tags": [
            "Enhancement",
            "Actions",
            "ProductFeedback"
        ],
        "rections": 79,
        "replies": 20,
        "comments": 8,
        "body": "Currently, when you trigger a workflow manually using on workflow_dispatch, the workflow doesn't tell you which branch it was run on, while on push and on pull_request runs do. It would be nice if on workflow_dispatch showed the branch just like those other event triggers. What's interesting is that the branch is known since I can filter by branch, it's just not shown on the list./nI really think that would be great/n+1 really hard to figure out which branch was used/nEven more, some actions from market use the target branch name for it's work but, as manual dispatches, even though they ask u which branch to target, does not provide that info on the event (or the way other triggers do) makes some actions fail or be less worthy,./nA partial solution would be leverage run-name introduced almost a year ago: https://github.blog/changelog/2022-09-26-github-actions-dynamic-names-for-workflow-runs//nThis is still not implemented, any updates on this?/nFor our case the lack of the branch associated with manually triggered workflow causes another issue. When a PR is opened by dependabot, that in turn doesn't have access to secrets, auto-triggered workflows fail. We thought manual trigger is solution for re-running workflows against branch created by dependabot. This is possible. However, these runs, as they have no association with the specific branch, are not being attached to the specific PRs. The only solution in such case is the make fake commit on dependabot branch to re-trigger automatic workflows. Really annoying./n\ud83d\udc4b Hi everyone. Branch names should now show up on workflow runs triggered via workflow_dispatch!/n"
    },
    {
        "title": "Set the default shell for a composite action",
        "url": "https://github.com//orgs/community/discussions/46670",
        "upvotes": "485",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 11,
        "replies": 2,
        "comments": 1,
        "body": "Product Feedback/nI think this is a duplicate of https://github.com/orgs/community/discussions/46670/n"
    },
    {
        "title": "Add 'password' input type for manual workflows",
        "url": "https://github.com//orgs/community/discussions/12764",
        "upvotes": "477",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 42,
        "replies": 1,
        "comments": 21,
        "body": "The input types for manual workflows are great so far:/nAppreciate the feedback @TaffarelJr - this is good feedback. There are some details that we'll definitely want to think through because - as you note - these are your secrets. \ud83d\ude01 But your use case makes sense./nHas there been any updates for this? I am interested in this as well./nHi @ethomson/nI could be wrong, but I think it's more secure keeping some secrets on my offline password manager. That's why I would rather type passwords each time I need to manually trigger a workflow./nBump/nBump/nBump/nBump/nThis is just what I need, a password input type./nThis is exactly what I am looking for/nI would love that/nOver a year... and nothing new?/nBump/nWhile the comments might help, you might also want to upvote the author's post so it gets more attention./nbump/nbump/nbump/nbump/nbump/nbump/n"
    },
    {
        "title": "Allow required checks to pass/skip, not fail, when using path filtering",
        "url": "https://github.com//orgs/community/discussions/44490",
        "upvotes": "415",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 21,
        "replies": 3,
        "comments": 3,
        "body": "Product Feedback/nAnother approach might be to allow similar path filtering on the required tests./nWe're seeing the same issue in our monorepo. We have over 20 services and libraries, each with their own workflows, and a collection of reusable workflows (for tests, Docker builds, deployments)./nAlso ran into this issue today +1 for a feature/fix from Github to address this issue./n"
    },
    {
        "title": "Github Action Build Caching",
        "url": "https://github.com//orgs/community/discussions/25971",
        "upvotes": "362",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 16,
        "body": "Hi, Does anyone know why Actions are built at runtime on every execution without caching? I am observing prolonged build time because of this. Thank you!/nGitHub Actions are extremely flexible to allow you to model whatever kind of build semantics you need. On the other hand, this means that there is a large amount of complexity to contend with. Let me start by making sure I understand what problem you\u2019re describing./nHi\u00a0@lee-dohm\u00a0,/ndoes a solution for the problem exist? as the answer does not really seem to fix the issue?/n@lee-dohmthe docker image steps in my actions don\u2019t seem to be cached. @wei said that this started happening with the transition to yml workflows./nSame problem here, it does not cache the layers at all, every push is a new build from start\u00a0/nAlso ran into this, my builds reguarly take 6 minutes now because the container image is built from scratch (caching used to work when Actions was in early preview)/nThis is really NOT a solution. The solution is to support Docker build cache (layer caching)./nThere is a new way of doing this.\u00a0https://github.com/actions/cache/nYeah, I was also checking the same repo. They have built caching for generic store. Not for Docker Layer Caching./nHow to use cahing on Ruby Gems?/n+1/nFor solve to this probelm, this action is proper to solve this problem. It cache the layers on registry./nThe way actions building works during a workflow run for actions taken from the Github Actions Marketplace seems completely bizarre to me. I mean, when you add a step that uses a marketplace action (at a specific version), the workflow automatically adds an initial step on execution to build that action, from scratch, re-running the Docker compile step every time I build. The vast majority of time spent in my workflows is for building actions from the Marketplace. To me this is completely unexpected behavior and wastes a ton of time. The whole point of the Marketplace is to allow people to reuse actions, so why do we have to build those actions from scratch every single time, with no caching?/nWhile trying to workaround the PR Secrets (https://github.community/t5/GitHub-Actions/Make-secrets-available-to-builds-of-forks/td-p/30678) problem, had the bright idea of cacheing the credentials in a container.\u00a0 Just a guess, but cacheing can never be enabled because of the security implications discussed in the linked community.\u00a0 Really wish someone would just call this out and close these types of things as \u2018By Design\u2019./nif you\u2019re not too hung up on GitHub hosted runners, you can think about a self hosted runner. Then you have control over your runner\u2019s cache./nCould you please point out how to use the caching with the self hosted runner? Specifically with docker./n"
    },
    {
        "title": "How to trigger an action on push or pull request but not both?",
        "url": "https://github.com//orgs/community/discussions/26276",
        "upvotes": "338",
        "tags": [],
        "rections": 56,
        "replies": 9,
        "comments": 16,
        "body": "I would like my workflow to be triggered by either a push or a pull-request, but if it a push to a pull-request only trigger one rather than two workflows./nI\u2019m afraid that you cannot do this directly.\u00a0 However, you can trigger only on pushes to master, or pull requests to master.\u00a0 This will prevent builds from happening twice when somebody opens a pull request against master and then pushes updates to their branch.\u00a0 For example:/nI found this while searching and thought some people might find my solution helpfull as well.\u00a0 I have a workflow that has a \u2018build\u2019 job and a \u2018deploy\u2019 job.\u00a0 I want to build pull request and deploy merges to master.\u00a0 Here is my workflow setup:/nThanks for sharing that solution. I have a follow up question. Is it possible to run actions on branches which have not been pull requested, but don\u2019t run the push on the PR than./nWill this still run builds when the branch for a pull request is updated? That is, I understand the action will run when a pull request is first created for a branch. But if the action is only run for pushes to master, then does that mean it will not run for pushes which update a branch used in a pull request?/nThe provided code does not work for me, I get/nI published https://github.com/marketplace/actions/skip-duplicate-actions to solve this problem.\nYou can give it a try if this is still an issue./nSolution:/nIt does prevent additional runs caused by pull_request synchronize later as you push to the feature branch indeed. But doesn\u2019t it still cause two workflow runs initially? (pull_request opened and push to feature branch)/nThis is a very important issue as you may use some automatization for merging\u2026 if you have N checks, created PR as repo owner creates 2N check compare to forked PR creates only N checks\u2026\nWith limiting push/PR to master you miss all development/testing in branches even as repo owner \ud83d\ude15/nThis works for me! Thanks @piersy!/n@marcosfelt Did it really?/nI deleted this post because it contained incorrect information, the solution I provided did not work and I receive confirmation from one other person that it was not working for them./nI have found a work around to this:/nYea, I also have that problem./nWe\u2019ve solved the same problem with this minimal configuration:/nI had the same issue and it was solved by using main instead of master./n"
    },
    {
        "title": "github workflow - input type choice with multi-select option",
        "url": "https://github.com//orgs/community/discussions/34298",
        "upvotes": "289",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 41,
        "replies": 1,
        "comments": 4,
        "body": "Hi,/nAs per my knowledge this is not yet implemented/nNo that is indeed not implemented. There is an issue that has gotten some traction but no one created a product feedback linked to it so I'll be doing it hoping that people who participated in this issue and thumb'ed it up will upvote here too:\nactions/runner#2076/nSee also https://github.com/orgs/community/discussions/8774, a (very active) discussion about how the limit of 10 workflow inputs is making job configuration difficult. Some users suggest multi-select options as an excellent workaround. There seems to be a lot of desire for this feature./nplease I need this for my family/n"
    },
    {
        "title": "Keeping status checks up to date would be easier if the required status checks could be a wildcard",
        "url": "https://github.com//orgs/community/discussions/12377",
        "upvotes": "282",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 53,
        "replies": 10,
        "comments": 1,
        "body": "Keeping status checks up to date would be easier if the required status checks could be a wildcard./nThanks @leighmcculloch - I can see how this would be useful indeed. I'll make sure that this is on the backlog./n"
    },
    {
        "title": "Add 'lowercase' and other string manipulation functions",
        "url": "https://github.com//orgs/community/discussions/10553",
        "upvotes": "261",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 89,
        "replies": 8,
        "comments": 7,
        "body": "Please add more GitHub Actions expression functions for manipulating strings.  Specifically, a lowercase function would be very beneficial, but generally, there is no way to set environment variables across the entire workflow if they require even basic manipulation (such as converting to lowercase)./nThat's true; I don't want to add too many functions to the syntax, but there are a few that would be very useful, including case changing.  I appreciate your feedback, and we'll put it on the backlog./nThere are workarounds if anyone is interested:\nhttps://github.com/ASzc/change-string-case-action\nhttps://github.community/t/additional-function-s-lowercase-uppercase/140632/2/nAnother motivational example: conan-io/conan#11705./nIt's not that problematic when you need to change letter cases in shell, because shells usually has built-in feature for that (and I believe it shows how frequent we need changing letter cases).  However, when you need to change letter cases before put it in input parameters of actions, it gets us in trouble./nAnother thing I ran into lately, which could probably be argued against:/nGood lord. Ran into the same thing trying to use the native github actions repository variables. There's just no decent way without having this as part of the language./nIn my case my predecessor settled on mixed case organization name (github.com/MyOrganization rather than github.com/myorganization). The organization name is just too useful not to use for e.g. docker image repository names, but certain operations failed (or looked odd) when not using lower case./n"
    },
    {
        "title": "Hide/Group jobs in the status checks list",
        "url": "https://github.com//orgs/community/discussions/26246",
        "upvotes": "258",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 93,
        "replies": 6,
        "comments": 24,
        "body": "Hi, we have cypress tests running end-to-end tests in parallel and it can be quite a lengthy list. Is there a way to hide these jobs or group them so the PR status check list doesn\u2019t get too populated?\n/nNot that I can think of. Each job is going to show up as a check on the PR. You can click the \u201cHide All Checks\u201d link to collapse it down, but that is about the best I can think of./nThanks so much for your quick response!\nJust curious: would this be something that could be easily supported? I imagine a lot of projects may have several jobs triggered per PR./nI\u2019m not sure how easily supported it would be, but my bigger question is why would you not want to see all the checks that apply to your PR? Are you asking to just have that area collapsed by default?  Or for something else?/nwhy would you not want to see all the checks that apply to your PR?/nThis is good feedback.  I\u2019ll post it internally and maybe it will bubble up to the backlog./nhi @mickeygousset , are you able to post any update here please? thank you!/nAdding on that an option to group or even hide status checks for a given job would be extremely useful. We also run our Cypress end-to-end tests in parallel, so that they\u2019re split across 8 machines:/nThis is definitely something Github should look into it./nWe have 80 parallel machines running, so showing each one in the github checks makes it very hard to use./n@mickeygousset any plans to add this feature? We are also facing the same issue when we run the e2e cypress tests in parallel./nWould be great to see this implemented./nHere's a quick & dirty bookmarklet to toggle successful or skipped checks in the list:/nWe really need this. Any developer/team that readily takes advantage of GitHub Actions will encounter this problem eventually. The need for it is only going to grow./nhttps://github.com/EnricoMi/publish-unit-test-result-action#support-fork-repositories-and-dependabot-branches requires to upload the event file, of course this is nothing we want/need to show to the user and is just confusing. So a simple flag on the job\nshow_status: true/false would be fine./nWe're also interested in something, preferably, grouping.../nSame situation here! Many workflows trigger a couple of jobs and currently it is a mess to look at them at the status check report/nSame here: we have a job generating the matrix for the subsequent jobs.\nNothing tragic, but surely hiding the first job would be nice./nsame here, when using things like https://github.com/marketplace/actions/changed-files you don't really care about showing the results of this job in your Checks/nI'd also like a way to do this. I have a shared step in some workflows that just builds some values for use in later steps, so it isn't really a \"check\" on the PR. If one could set something like is_check: false or similar it would be handy./nAt the very least for matrix strategies this should be an option, since they are the same job, 2024 and still waiting for this \ud83e\udd72./nSame problem for my team \u2014 cypress run across a matrix job leaves us with 200+ checks in the PR. Would love to have an option to consolidate all the jobs from a workflow into a single check on the PR/nSame issue here. Some jobs can be just utils jobs, so showing their result as an extra check is redundant./nSame issue. I agree that the basic use case is to ensure that jobs which run a matrix strategy should only display a single check in the checklist UI. You already have a component for it in showing the progress of a task list for an issue. This circle progress indicator would be perfect./n"
    },
    {
        "title": "[Feature Request] Build args support in Docker container actions",
        "url": "https://github.com//orgs/community/discussions/25241",
        "upvotes": "236",
        "tags": [],
        "rections": 7,
        "replies": 2,
        "comments": 21,
        "body": "Unless I missed it, it does not seem possible today to specify Docker build arguments (i.e. arguments passed when building an action\u2019s container./nHello\u00a0@yoannchaudet,\u00a0Thank you for your feedback! We\u2019re always working to improve GitHub and the GitHub Community Forum, and we consider every suggestion we receive. I\u2019ve logged your feature request in our internal feature request list. Though I can\u2019t guarantee anything or share a timeline for this, I can tell you that it\u2019s been shared with the appropriate teams for consideration.Once again, thank you for your input!Greatly appreciatedMChevy422/nYes, PLEASE! This is a blocker for something I want to do in an action, and it\u2019s tough to\u00a0 find a non-hacky feeling solution./nHi\u00a0@mchevy422,/nSpecifically, I\u2019d like to see the build arg to have access to the git commit of the source repo, for example/nA work around until the feature is implemented is that we use the docker image that creates the action as handrails to create the image that we really want with all the arguments we need.\nBasically what we have to do is create a docker image in the entrypoint.sh and run it./nA work around until the feature is implemented is that we use the docker image that creates the action as handrails to create the image that we really want with all the arguments we need.\nBasically what we have to do is create a docker image in the entrypoint.sh and run it./nThis is needed./nI would like to see this as well. In my actions firebase-actions a common request is to allow you to run the emulator, as select the node version (as functions requires a very specific version). For the emulator I would like to avoid including the JDK unless absolutely needed as it will increase build times quite a bit. I need the build-args to allow me to provide them the ability to flag for emulation (install the JDK) and set the version of node they would like the container to use./nI\u2019d like to see this feature as well. My current solution is using composite./nThanks for the suggestion from @javierzolotarchuk/nthanks for this nice workaround. it solved my issue though a github actions solution would not require the intermediate container (as you know) and would be much cleaner. things people should be aware of:/ni originally tried to solve this with a slightly different approach, using/nAlso ran into this today, the workarounds don\u2019t work for my use case so we are stuck unfortunately./nRan into this issue today. Was wondering how to actually pass ARG in my docker container. Any updates on this ?/nThis would be really helpful, especially if it also allows passing --cache-to and --cache-from arguments./nI tried manually mapping directories and it doesn\u2019t work.\nI can\u2019t pass data from the intermediate container to the second one.\nMapped volumes aren\u2019t visible and any data I write in new volumes just disapear as soon as the second contianer finishes.\nAny idea?/nHey, any update on the feature request? Would love to see it. I have the exact same use case as mentioned by op. I want to install a dependency inside Dockerfile which needs to have dynamic version (i.e version to be picked up by env)./nThis looks to me more like a bug than a feature request./nAny update on this? This is much needed!/nUp/nWould love to see this feature./n"
    },
    {
        "title": "Log lines for an active step are inaccessible",
        "url": "https://github.com//orgs/community/discussions/44250",
        "upvotes": "233",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 11,
        "replies": 0,
        "comments": 5,
        "body": "Bug/nBumping this topic.\nHopefully someone will pick this up.../n+1/nResponse from Github engineering last month here:\nactions/runner#886 (comment)/nRelated discussion: #35363/nPotentially related documentation issue: github/docs#25041/n"
    },
    {
        "title": "Add job_id into github.context",
        "url": "https://github.com//orgs/community/discussions/8945",
        "upvotes": "228",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 84,
        "replies": 12,
        "comments": 13,
        "body": "Hi,/nThanks for the feedback.  We should add this, indeed.  I'll talk to the team about this in the new year./nDo you happen to have any news on this topic?\nNot having the job id makes it impossible to use the jobs list for anything. Especially if you are running inside a matrix or someone has named their job differently./nThis would be a very good to have feature. When there is an existing action that uses the GitHub API, you know there is a need for it. Having it in the context, and especially as an environment variable (so that automation can use it too, without having to pass it as a jinja template variable), would be a godsend! \ud83d\ude4f\ud83c\udffb/nChiming in from 2023, we really need this. The job I am trying to get the ID for is a matrix job with a stringified JSON object as its value so the name is truncated making the workaround practically useless./nI'm embarrassed to share this, but I know people are struggling./nOur use case for requiring a job Id is as follows:/nIs github.job the fix for this?/nWe could really use the jobid in the github context so on a matrix job so we can provide a html_url to a workflow status dashboard.../nSo, it's one of the plenty cases, where GH actions aren't fixing their fundamental issues./nWe are experimenting with reusable workflows, and it's just the last border before the deepest inconsistency hell. The logs are\nlogs_33.zip, the run is https://github.com/Felixoid/actions-experiments/actions/runs/6774723377, the there's the tree/nIt's almost 2024 and still no movement on this?\nWe require the job name in order to check if the current job run has changed from a failure to a success. Unfortunately, the only available environment variable (and context variable) is the yaml key for the job, but this causes issues if the job has been given a name. In that case all the API calls use the name, which isn't available anywhere else!/nIt's now 2024 and GitHub is still adding job ID in context. We need a way to distinguish one job from another, especially when using matrix. This should not be a difficult thing either, the job ID is already in the URL./nThe impact of this is ultimately an inability to link to logs from a test reporting system. This is critical for our evals setup where debuggable events within the job need to link back to the full job for logs, so I think this could mean we have to switch away from GitHub Actions./n"
    },
    {
        "title": "Concurrency Cancel Pending",
        "url": "https://github.com//orgs/community/discussions/63136",
        "upvotes": "216",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 49,
        "replies": 13,
        "comments": 10,
        "body": "Product Feedback/nYes, this will be an amazing feature to add! For monorepos especially useful!/n+1./nHi guys, our use case is that we need a passive queue mechanism, two levels of concurrency instead of just one. Our workflow for status checks should cancel pending tasks from the same group 1 (pull request), but keep pending tasks from a different group 2 (repository). Essentially, the workflow should never run in parallel, but should always be queued if it comes from a different pull request. Not being able to specify more groups would be fine as long as we can at least disable cancelling pending tasks at all. This is what we had in Jenkins CI. I find it hard to believe that this is such a rare use case unsolved for years./nConsidering they have merge queues on PRs (for public or Enterprise users \ud83d\udc40) they probably won't implement this/nAny previously pending job or workflow in the concurrency group will be canceled./nThe action skip-duplicate-actions could be a solution. However, the PR for support of merge_group (fkirc/skip-duplicate-actions#329) still needs some work. Maybe someone here can help?/nYet another \ud83d\udc4d from me, very similar problem: We need a proper mutex behaviour in order to ensure sequential runs. It's important so that we ensure consistency of the concurrent merges over time, but also so that we don't lose traceability of what merge caused what action to change status./nI think, one needs to think thoroughly about concurrency and workflows./nYes please! This is so aggravating. Concurrency control should not kill off running jobs!/nMerge queues don't solve this. Merging and actions are two different things. Not every build is a merge. For example I run tests against a production resource at regular intervals. The tests cannot be run from multiple sources simultaneously. They need to be run one-by-one.\nThe functional tests might also run because I merged code. I want both run, but not be cancelled cancelled ever./n"
    },
    {
        "title": "Is there a way to delete or hide old/renamed Workflows? (Reviving #26256)",
        "url": "https://github.com//orgs/community/discussions/40350",
        "upvotes": "212",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 55,
        "replies": 12,
        "comments": 11,
        "body": "Product Feedback/n+ 1/n/nI chimed in on the original thread but adding my support here as well. Deleting or hiding unused/obsolete workflows would be a huge help for my org./nThis is a critical feature missing from github actions, if a new dev starts work on a repo, how will they know which job to run!?/nThis feature is a much needed one/nYep the ability to delete or archive is needed.../nThis is so silly plus it makes there documentation incorrect... which is kind of infuriating. https://docs.github.com/en/actions/managing-workflow-runs/deleting-a-workflow-run/nfestive +1/nApparently if you delete all the runs for a given workflow, the workflow will then disappear from the list as well. You can delete it manually from the UI or this is the script that I used to clear all runs for a given workflow. Hope it helps!/nHere a PowerShell version/nInstead of adding this to UI or API they added an example script in docs /n"
    },
    {
        "title": "How to run GitHub  Actions Workflow only for new tags",
        "url": "https://github.com//orgs/community/discussions/25302",
        "upvotes": "210",
        "tags": [],
        "rections": 17,
        "replies": 1,
        "comments": 19,
        "body": "Hello./n+1/nWhen I try to use on:\u00a0I get a syntax error, e.g./nAh so GitHub have changed the syntax to YML, I\u2019ve used their migration tool to get it \u201cworking\u201d. Well, for me this means that using the syntax above means that for every tag push, I get a failed build and a message saying\u00a0No event triggers defined in on./nHmmm, that\u2019s super weird, somehow I got it working with the exact code from\u00a0@provok\u00a0./nPerhaps its because \u201ccreate\u201d also triggers when a branch is created, so it will run the filter on the first commit, then not until you actually create and push a new tag./nIt seems now that I cant even run workflows for tags:/nNone of this is working./nIn your second example, you need to quote the asterisk, that\u2019s a YAML syntax requirement.\u00a0 This should work:/nDoes the same apply to branches as well? Because this doesn\u2019t work for me:/nIt does apply to branches, but if your branch might include / then you need to match on that too (for as many levels as you may have - */*, */*/*, */*/*/* etc.) e.g.:/nThe proposed solutuon doesnt seem to work for me./nThe proposed solution doesn\u2019t seem to work for me too \ud83d\ude15 .\u00a0/nI am sorry. It is indeed working for me. Thank you\u00a0/n@artalat Use two asterisks, that\u2019ll match sub-paths:/nHi\u00a0@ethomson this solution appears to trigger when pushing to a new branch./nwhere this needs to be updated./nThe assembly by the tag does not work, then ci starts when creating the branch/nHi\u00a0@ethomson\u00a0/nIs there a way to run the workflow only when tags are created in upstream repository? I can not seeing anything in that regard in the docs./n"
    },
    {
        "title": "Cache a Docker image built in workflow",
        "url": "https://github.com//orgs/community/discussions/24999",
        "upvotes": "202",
        "tags": [],
        "rections": 0,
        "replies": 1,
        "comments": 13,
        "body": "We\u2019re currently building a Docker image every workflow run. This takes 10-15 minutes. It\u2019s faster to fetch the same image from Docker hub, but nicer to only be dependent on the Dockerfile in the repo. Is there any way to speed up subsequent builds by doing some kind of Docker build caching?/nWe\u2019re adding caching.\u00a0 It will arrive by mid-November./nFor those who found this Subject looking for a way to use cache in Workflows, you can use this action that does just what\u00a0@nergnezor mentioned: fetches the layers from a Registry and use (multiple) \u2013cache-from to hint docker where to look for cache./nUsing buildx and ghaction-docker-buildx does not require to set cache or to push to registry:/n@ethomson Given\u00a0https://github.com/actions/cache is on, does it apply to the original question? (Caching docker layers)/nAlso looking for an answer to this; it is mid-November/nIt\u2019s already mid of Feb 2020, any update on this?/nHow is it cached then?/nHey everyone, I found a solution that works pretty well. Unfortunately doesn\u2019t FULLY cache, so you have to do some data transfer but seems to get the job done./nIts mid-May 2020. This still doesn\u2019t exist and no news has been shared about when it might./n@ethomson Hi, im wondering if maybe theres an update on this yet? Built in docker layer caching would be great/nSee https://github.com/crazy-max/ghaction-docker-buildx#leverage-buildx-cache/nTry this action I created./nHow exactly to use it with Docker layers? Should I configure a step to cache/restore the dir  /var/lib/docker/overlay2? I prefer a general solution, without custom actions. Thanks./n"
    },
    {
        "title": "Feature request: Add input type file to upload files to workflow runs.",
        "url": "https://github.com//orgs/community/discussions/49612",
        "upvotes": "178",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 68,
        "replies": 0,
        "comments": 0,
        "body": "Product Feedback/n"
    },
    {
        "title": "GitHub Actions | Listing workflows cancelled by concurrency settings as failed could be misleading",
        "url": "https://github.com//orgs/community/discussions/8336",
        "upvotes": "173",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 85,
        "replies": 0,
        "comments": 17,
        "body": "Hi!/nI'd like this as well. Something like an optional property treat-cancellation-as with values success and failure (default) under concurrency and jobs.<job_id>.concurrency would be great./nThanks @GabrielCousin - I can see how this could be confusing.  I'll take a look at how we can improve this./nWe're seeing the same issue after adding concurrency to our CI.\nIt would be great if we could treat this as not being an error./nI'm seeing this as well, it would be great if it could be improved./nWe're seeing this too. I think that if workflows are designed around this feature, then the designer is probably acknowledging that cancellation is an acceptable state, hence should not necessarily be treated as failure. It would be great to see a configurable option to dictate whether cancellation yields a failure state or is ignored./nOne option would be to have another option than the cancel-in-progress like:/nThis also causes badges in the repo to list the build as failing, e.g. in PRQL, after a PR was merged while a previous workflow was running on main:/nExperiencing this same problem, anyone have a workaround?/nAny news on that? Because of this, most of the builds in our CI are now red and the team is getting used to the fact that red CI is normal and usual./nAs above we have the same problem.  Multiple Teams deploying and we have PreProd and Prod environments that require approval,  We then have these set to \"cancel-in-progress: true\".  This is deliberate as without that pending deployments will just eventually timeout.  We only want the latest deployment to be going into Prod and PreProd so the cancel-in-progress true achieves this beautifullly./n+1/n+1/nHopefully someone at GitHub is looking at this as the Developer Experience is annoying with all thoses \u274c's, making the team used to see those as an \"expected outcome\", and makes other things very confusing, like notifications on our main branch when something fails \u2014as those are not actual failures, but gets reported as one\u2014./n+1/nI use this name for group/nStill no solution for this? We are a big open source repo and are also running into this problem./nI'm frustrated by this, too. There is no obvious way how to change how the check-summary is evaluated (e.g. not getting \"Some checks were not successful\" and the red cross in the summary view.\nThis needs to be either an explicit per-repo configuration option (treat_canceled_as_success) or an option within the jobs\nFor me the issue arises due to having a two jobs in the pipeline for pushes on feature-branches and updates to PRs which don't need to be performed both in case there is a PR./n"
    },
    {
        "title": "[Bug] Reusable workflow for pull requests giving parse error",
        "url": "https://github.com//orgs/community/discussions/10679",
        "upvotes": "155",
        "tags": [
            "\ud83d\ude80Shipped",
            "Actions",
            "ProductFeedback"
        ],
        "rections": 96,
        "replies": 23,
        "comments": 30,
        "body": "Reusable workflows when triggered are failing with this parse error/n@tarunwadhwa13  may be something for actions/runner?/nI have experienced the same issue when I've used a relative path for calling my reusable workflow (i.e. ./.github/workflows/reusable_workflow.yml in combination with the pull_request_review event. And the bug is most likely related to that the pull_request event uses a simulated merge commit as ref (https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#pull_request_review). And as an example of that it works perfectly fine using a relative path in combination with the issue_comment event (which uses the HEAD commit from the default branch as ref)./nI am also facing this problem. Is there any timeline for a fix?/nOthers are facing this problem as well: https://github.community/t/ref-head-in-reusable-workflows/203690/64/nWe are also facing this problem. Is input available from GitHub team?/nSame problem with pull_request ,\nbut is fine with push./nI am also facing this problem./nHi everyone - thanks for reporting this, the engineering team is investigating./nHave just decided to try reusable workflows for the first time in my life and they are unfortunately broken. Is it a regression or they never worked for PRs? Hope there will be automated tests to track the regression of this issue again whet it will be fixed./nWe are facing the same issue on our pipelines on pull_request/nHi all, apologies for the inconvenience caused. We have rolled out the fix now./nInvalid workflow file: .github/workflows/dev.yaml#L14\nerror parsing called workflow \"./.github/workflows/create-image-and-release-to-env.yaml@\": workflow was not found. See https://docs.github.com/actions/learn-github-actions/reusing-workflows#access-to-reusable-workflows for more information./nI'm getting an error where it is requesting \"required key: runs-on\" for jobs that are calling re-usable workflows./nI'm getting similar Missing required key 'steps'/nSame issue again./nThis is also happening again to us again on a push to the main branch:/nWe are issuing the same problem right now/nI've been getting the error parsing called workflow repeatedly for 2 days now. It comes and goes.\nI'm referencing a local workflow (private repo) with the uses: ./.github/workflows/myresusable.yml reference./nHi there!/nHello Community,/nAnd now :/nHi guys! I have a similar error on the pull request opened event.\nMy reusable workflow:/nGot the same issue with on workflow_call, but why it should be related to event/trigger - it is static analysis issue./nactual response:\n{ \"configs\": [ \"dispatch\" ], \"versions\": [] } /nThis issue also occurs if the dispatch has no change than that which was already deployed. FYI./nI have the same problem. I tried also to make a step to checkout the repo so it will be able to find the files. But seems not to be working./nThis issue is not resolved! At least not resolved for pull_request_review triggers. Please fix it/nSame error here with workflow_call!/nI have the same error on push  events whereas the pull_request event seems fine for me!/n"
    },
    {
        "title": "Feature Request: Branch filter for the create event",
        "url": "https://github.com//orgs/community/discussions/54860",
        "upvotes": "154",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 7,
        "body": "Actions Feature Request/nThis would be a great feature. We have the same issue./nI also recommend this filter; if possible \ud83d\ude80 \ud83d\udce6/nWaiting for this since years. For release branching this is a must have. Rather sooner than later please./nThis would be very helpful. Using a workaround currently/nThat would be awesome !/nSeems like such an obvious feature when you have the same thing on pushing a change.\nAlternatively, pushing a new branch could also trigger the \"push\" action./nMy guess is that you could use a reusable workflow to limit the events in the view you care about, as I suggested to another person who was concerned about that:\n#101695 (reply in thread)/n"
    },
    {
        "title": "Option to hide deployment history from pull request conversation tab",
        "url": "https://github.com//orgs/community/discussions/58018",
        "upvotes": "147",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 63,
        "replies": 0,
        "comments": 9,
        "body": "Product Feedback/nYes please!/nThis would be very useful. The PR's UI is very cluttered especially when there are multiple commits/nWould love to have this feature/nThis would be great - maybe an option to toggle \"show/hide all\" would suffice./nThis can't be a problem only to few developer. Scrolling takes more time than reviewing the PR -.-/nPLEASE ADD THIS SUPPRESSION FLAG reviews are endless scrolls now and comments get lost./nPLEASE add this, it's driving me insane, i hate the PR interface/nI filter out the deployment events with this uBlock Origin rule:/nHi!/n"
    },
    {
        "title": "Whitelist Github Workflow",
        "url": "https://github.com//orgs/community/discussions/26719",
        "upvotes": "145",
        "tags": [],
        "rections": 17,
        "replies": 1,
        "comments": 27,
        "body": "Hey,/nI ran this in my github actions container/nHi\u00a0@delvison, I work on the Actions product and unfortunately we don\u2019t support stable IP addresses for Actions today (so there isn\u2019t a set of addresses I can give you to allow). I\u2019ve noted your feedback and we\u2019ll incorporate it into our future plans for Actions./nHi there @mcolyer ,/nHi\u00a0@mcolyer,/nIt\u2019s kind of important if using Actions to perform privileged operations against external systems e.g. provisioning infra to AWS with Terraform/nI know this thread is old. But for anybody coming from Google, here\u2019s the documentation on this.\u00a0https://help.github.com/en/github/automating-your-workflow-with-github-actions/virtual-environments-for-github-actions#ip-addresses-of-runners-on-github-hosted-machines/nHi\u00a0@mcolyer, is there an understanding when this functionality will be implemented?/nYou can download a list of IPs to whitelist from here:\u00a0https://www.microsoft.com/en-us/download/details.aspx?id=56519/nHello!/nWhat about using a VPN?\u00a0 I also was not interested in whitelisting the entirety of Azure and I noticed this package https://github.com/marketplace/actions/connect-vpn/nLooks like this is a direct link:/nHello,/nUnfortunatelly \u201cFile or directory not found\u201d/nThese are the\u00a0IP addresses of GitHub-hosted runners./nIs there plans to narrow the range of available IPs to just a subset of \u201call of azure in these 5 regions\u201d ? This would help reduce security risks for those attempting to whitelist github hosted actions runners./nJust adding support here - whitelisting such a huge block AzureCloud IPs is a blocker for some of us!/nWe can only agree with what has been said. We want to use GitHub Actions as a standalone CI/CD tool to deploy websites. However, many hosts restrict access to their servers via an IP allow list and refuse to allow all IP ranges from Azure due to (legitimate) security concerns./nBump. Being able to rely on a whitelist that isn\u2019t 100+ records long and dynamically updating would be really nice./nI agree with the last comments. So I would like to know if something has changed about this subject since the last github updates ?\nIf we get an enterprise github account is there a way to get an acceptable range of whitelist to authorize our server to accept github actions requests ?/nWatching. Use case is running database migration script before deploying to Azure in a GitHub action workflow. Difficult to whitelist all possible IPs./nthe ability to limit outgoing IP addresses to a specific CIDR block for a set of github actions is a must-have for any enterprise use of Github Actions where compliance with security policies is required or advisable./nAs an interim solution I dynamically add and remove the IP from the server whitelist (this assumes theres an API which allows for this, eg. AWS)/non further reflection I suppose this is only an issue for the publicly hosted runners, which perhaps makes sense./nWould love an environment variable for the gh-runner's external IP-address. https://api.ipify.org has been failing allot lately. Maybe because allot of gh-action users are sending a requests to them \ud83d\ude09 ./nBased on @kyle-revio approach, I've created a Github Action that does exactly what he posted above. It just makes the workflows look a bit nicer and less cluttered./nI just hit a weird problem where an azure ip was missing from the list 172.183.50.157. It's like there's a typo here:-/nIt would be really great if someone could talk to aws and get them to create a managed prefix list of ips for 3rd parties like cloudflare and github runners rather than people managing their own/n"
    },
    {
        "title": "How to reuse a whole workflow?",
        "url": "https://github.com//orgs/community/discussions/26766",
        "upvotes": "1288",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 19,
        "body": "Hello everybody,/nHey! If you are a little fuzzy on what a GitHub action is and how it\u2019s used, check out this link:\u00a0https://help.github.com/en/actions/getting-started-with-github-actions/about-github-actions#about-github-actions/nFrom the docs: \u201cYou can write individual tasks, called actions, and combine them to create a custom workflow\u201d/nWhy is this thread marked as solved? It\u2019s not solved by any means, reusing a workflow doesn\u2019t seem to be possible in any way \u2013 I have copy & pasted my configuration to about 15 projects and each time I want to make a change, I currently have to do it in 15 repositories \u2026 \u2639\ufe0f/nWhy is this thread marked as solved? It\u2019s not solved by any means, reusing a workflow doesn\u2019t seem to be possible in any way \u2013 I have copy & pasted my configuration to about 15 projects and each time I want to make a change, I currently have to do it in 15 repositories \u2026/nI\u2019m wondering if anything is on the roadmap for this, it is a long requested feature. We would love to get rid of Jenkins as it has its flaws, but as we rely on Jenkins shared libraries we cannot migrate to GitHub Actions until a similar feature is introduced. We simply need a way to define a pipeline/workflow for building a certain project type, which can be used by many repositories, and without having to change all these repositories when we need to fix something in the workflow./nStruggling with the same issue. We have over 50 repo\u2019s and I have some very simple workflows to just label, approve and merge PR\u2019s which need to be applied to all. These unfortunately cannot be put into a single workflow since they act on different events./nIsn\u2019t it possible to have these workflows in a submodule, include that at say /submodules/workflows/ and the have symlinks / hardlinks at /.github/workflow.yml -> pointing at /submodules/workflows/workflow.yml\nthis way it should be possible to \u201cselect\u201d which workflows to really use in the sepcific repo and even use different branches on different repos./nThe lack of built in support for this problem led me to create a CLI tool that wraps existing templating engines (ytt or Jsonnet) to manage workflows more effectively. In case it\u2019s of interest: https://github.com/jbrunton/gflows/nIt looks like it is intended to be an enterprise feature: github/roadmap#98\nWhich is a shame, because small teams that also have multiple projects with the same workflow would still have to resort to all kinds of workarounds./nThat issue also has the \u201ccloud\u201d label which I thought meant that the feature would also be available on github.com as well as in GitHub Enterprise?/n@agarthetiger I am under the impression that this all means that it is available under the enterprise subscription on github.com, not just the on-premise one. We currently have a Team subscription at work with 20 developers, so that would be a big price increase if we would want to re-use workflows efficiently in the future\u2026/nJust wanting to follow up on this and ask if anything has changed\u2026?/nI am also looking for a similar feature. Also, do we have anything similar to Jenkins Shared Library?/nyep add me to the list, i also want this!, seems a fairly obvious thing to want, i currently have 60 repo\u2019s copying the same workflow file 60 times is not fun, i will of course automate the copying in some manner but this should be easy enough for github to include a mechanism to do this, its just a waste of time of time and disk space./n+1 this issue. I have a set of repos that I\u2019d like to all share the same universal workflow./n+1, this is truly important. I want my npm packages to have the same publish workflow. Setting it for all of them isn\u2019t impossible but it isn\u2019t that maintainable to change them all when needed./nWorkflow templates may be of interest to some of you. I haven\u2019t tested them out yet, so I am not sure whether that addresses your needs or not./nWorkflow templates involve a one-time copy from another repo. What I think a lot of people are asking for is essentially the ability to include workflows from some shared repo, so there is only one place to update workflows. Gitlab supports this using syntax like this:/nIt seems that in addition to the workflow templates there is also going to be (it\u2019s in the roadmap) an ability to define a workflow on organization or enterprise level github/roadmap#52/n"
    },
    {
        "title": "Set-output Truncates Multiline Strings",
        "url": "https://github.com//orgs/community/discussions/26288",
        "upvotes": "1078",
        "tags": [
            "Actions"
        ],
        "rections": 60,
        "replies": 10,
        "comments": 20,
        "body": "Hi,/nI have reported your question to the appropriate engineering team for further evaluation. The team will review the feedback and notify me about the next steps. I will update here in time. Thank you for your understanding./nI got response from the team.\u00a0/nSorry, I just noticed your reply!/nIt took me an hour to realize that multi-line strings were the issue for me, and then a few more hours to find this solution./nThanks so much posting this. I came across the same issue and found this rather obscure solution, after a lot of trial and error./n@andreasplesch\u00a0 Thank you for your further investigation. I would recommand you to create an issue in the action toolkit repo\u00a0. You could ask for adding an example for set-env and set-output with multiline values in this document.\u00a0/nThanks. Good to know that there is more in depth documentation available in the toolkit repo. I think a link from the main help page at https://help.github.com/en/actions to this documentation could be helpful./nEscaping of special characters already happened for javascript actions but does not for bash scripts. There is a plan to update documentation./nI have bumped into this exact issue, and found another solution: we can use jq to do the conversion into a valid JSON string for us, and then use fromJSON to unpack it again./nI also have an issue where I would like to output a list of paths and other data only if the action processes multiple files (to push them to nuget.org or any nuget feeds)./nHere is yet another potential work-around./nThanks a lot for sharing, this unblocked me :slight_smile:/nFor completeness, I want to point out that you can also use an environment variable via environment files for multiline text: Workflow commands for GitHub Actions - GitHub Docs/nHas this been fixed? I built a function to work around this, and now it displays the escape sequences./nHere\u2019s my multi-line output solution which requires no changing of the data, however you do have to write it to a text file first./nNote: You can change the output variable name by using core.setOutput as well./nFor any lost souls in the future: If you\u2019re setting output in a Docker container (like if your action is a .NET binary), not in the action YML, by just printing ::set-output name=whatever::whatever, all you need to do to fix this is replace any \\n you have with %0A/nAlso for anyone in the future with this issue, I JSON-encoded the content I needed to put into GITHUB_ENV like so:/nWow, I had this problem for a year and I couldn't solve it. I believed this one the problem with slack action that wasn't supporting multiline comments. Now I have finally found this thread and found a solution for a problem in my script that existed more than a year/nFor future reference:\nWith GitHub's new GITHUB_OUTPUT file, multiline outputs don't need to be escaped anymore. They simply need to use a delimiter:/n"
    },
    {
        "title": "Reusable Workflow Depth Limit",
        "url": "https://github.com//orgs/community/discussions/8488",
        "upvotes": "551",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 51,
        "replies": 16,
        "comments": 17,
        "body": "The depth limit of 2 is too low. For my use case, I'd need at least 3:/nDepending on what level of reused you need you could consider composite actions as well./nWould love to see this limit increased. Even to 3 would make the possibility for configuration greatly improved./nGithub actions is just so disappointing when it comes to re-usability. Look at CircleCI, Github should take notes./nI have to say, this difference between Reusable Workflows and Composites along with the strict 2-level depth limit on reusable workflows adds needless complexity to some pretty basic CI tasks. https://github.blog/2022-02-10-using-reusable-workflows-github-actions/ shows the difference between the two. I fully recognise there should be some depth limit to reusable workflows, but if the limit is 2 then I'd have to question the true use case of this functionality./nI'd also like to see nested reusable workflows as an option. The alternative of composable actions is wholly inadequate for being able to have DRY and composable YAML workflows (no secrets, seen as a single step, only a single job)./nIs this depth limit configurable in GHE, or is the 2 hardcoded?/nPlease address this limitation. Composite actions are not a good alternative for many of the use cases outlined here./nJust want to add to the consensus here, this would be incredibly useful/nYou can now nest up to 4 levels of reusable workflows\nhttps://github.blog/changelog/2022-08-22-github-actions-improvements-to-reusable-workflows//nAm trying to nest levels with reusable workflow but it fails? What am I doing wrong? Can GitHub action really handle nested workflows? Can someone pls clear this out./n3/4 levels is not enough, IMO. It's still very limiting. I've already run into this while writing my very first set of workflows!/nWould also like to request this be increased. It honestly seems that this is an unnecessary artificial limitation (or one borne of a suboptimal implementation). Our workflows is not terribly complex -- I'm just trying to reuse some logic between workflows in a monorepo -- but I've hit even the raised limit several times and had to introduce additional complexity to work around it./nThe depth limit is a pain if you are promoting DRYness. The reusability is very much limited in GitHub Actions.\nHow can we tackle a scenario of this sort?\ncaller.yml ->  ci-reuse.yml  (Some reusable workflow org wide)\nInside ci-reuse.yml its using matrix strategy for another reusable workflow called platform.yml\nand for each platform there is multiple flavors being built such Debug, Release, etc which is again a matrix calling flavors.yml/nUnfortunately, just like you guys, I am in the same boat :-(! GH, are there any plans to increase the minimum depth Limit to > 5?/nSame issue here. Need a limit increase please./nLimit increase please. It's 3 not 4, in fact./nPlease increase the limit/n"
    },
    {
        "title": "Caching on self-hosted runners",
        "url": "https://github.com//orgs/community/discussions/18549",
        "upvotes": "485",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 51,
        "replies": 11,
        "comments": 5,
        "body": "So two main issues here./nThis is super-important for teams running self-hosted runners; especially ephemeral workloads. We run a cluster of self-hosted runners on ECS Fargate, and would prefer a cache that can either be mounted as a volume for the containers or on S3, whichever is flexible in terms of implementation and/or cost./nHow do we raise visibility on this issue?  It's a really big miss from a product standpoint IMO.  I am definitely seeing what the OP sees in #2 which is the cache is so slow at times that it stalls / times out my jobs.  At this point I am disabling caching in order to get consistent (reliable) behavior which is a travesty./n@deeno35 based on the storage pricing model, the storage and egress costs are marked up quite a bit so the lack of local caching is actually part of the product imo. I'm concerned that Github will actually not be motivated to solve this problem for that reason. Is writing a custom action with more flexible caching options possible?/nI'm using https://github.com/everpcpc/actions-cache as a solution to store cache from EC2 runners to S3 and it works fine, although a gateway endpoint is needed in the VPC to ensure there are no egress costs. Works fine for me./nWe encountered an issue with custom cache actions not working when other actions (like setup/node) use the default actions/cache. Our solution was to ensure our custom cache is compatible with the default, eliminating the need to alter our workflow files. If anyone needs it, here you go: https://github.com/falcondev-oss/github-actions-cache-server./n"
    },
    {
        "title": "Enabling Github Environments on the workflow level",
        "url": "https://github.com//orgs/community/discussions/14417",
        "upvotes": "477",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 25,
        "replies": 11,
        "comments": 9,
        "body": "It seems as if I am only able to enable github environments on the Job level. I want to deploy my environment once and have my entire workflow run under that environment./n@michhyun1 Could you provide some additional information on your scenario?  From what I see it feels like you are using environments with approvals and secrets to support a scenario that we have not thought about, but I am not 100% sure exactly what that is./nI am also finding this frustrating... because I need to protect the deployment environments with reviews and when the workflow is consisting of different jobs that need access to the environment secrets, the workflow requires multiple approvals to get it to proceed, which is a waste of time./nThis is such a tedious issue I've just had to rewrite a non-trivial 450 line workflow into a single job to minimize it to one approval for the workflow since each approval takes at least 3 clicks per job otherwise and wastes time waiting for approvals at each job/stage too./nHello. Any news on that? Its the end of 2023 and I also have the same problem. I consider one workflow with multiple jobs as deployment and it would be nice to assign environment on workflow level./nHello GitHub, can you please find time and check this functionality in GitLab(it's your competitors). Hope you get inspiration. Thanks!/nIt's very strange that something like this wasn't done from the beginning. At the moment it's the only thing stopping me from using Environments./nAny update on this? This causes frustration for our external contributors./nI have the same issue. It's incredible this isn't at the top of Github's TODO list./nWould love to see this functionality./n"
    },
    {
        "title": "[Feature Request] Copy an environment",
        "url": "https://github.com//orgs/community/discussions/44834",
        "upvotes": "415",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 10,
        "body": "Product Feedback/nwe have 15 secrets.... in 4 environments... as a manual job via a suboptimal web interface (you know what I mean)\nthis is not only tedious but risky!/nWe have around 50 secrets and variables, and it is tedious to manually enter them. What am I doing wrong? \ud83d\ude22/nwe too have 25+ secrets and it is painful tasks to recreate them manually with different environment like dev,test,preprod and prod. Though it is one time activity, but cloning environment feature will really be a big help./nAbout to take on the task of replicating several environments and it is daunting. Being able to replicate var/secret names in an env template would be really valuable./nthis is an ongoing issue with secure environments. safety and security requirements versus automation.\nso far I have only seen tedious manual labour to copy environments.\nThe challenge is to find a solution which satisfies higher security requirements.\nAnd the person responsible is likely not to do the manual labor but has to trust a foreign system.\nI am curious what the future will provide in this area of conflicting interest......../nHi!/nSame Problem With Env's creating. If we can clone them it will be very helpful./nyes, this is a necessary feature/nCopy option in UI would be great. As a workaround I try to manage my env secrets and variables using Terraform. There is a github provider available and you can create some reusable module that can be parametrized. Then you reuse this module multiple times with different environment parameters. The terraform apply will create \"clones\" of vars/secrets in different github environments./nSame problem, ability to rename and/or copy environments would be very useful!/n"
    },
    {
        "title": "How to set and access a Workflow variable?",
        "url": "https://github.com//orgs/community/discussions/25295",
        "upvotes": "362",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 5,
        "replies": 2,
        "comments": 22,
        "body": "Hi,/nI guess you don\u2019t need the env prefix,\u00a0 just use the var name {{ pluginId }}/nCurrently, we have no ways to call environment variables on job level, ideally the syntax ${{ env.VAR_NAME }} should work but just has not been implemented yet. It\u2019s being tracked internally, but I don\u2019t have any timeline to share yet. On step level, ${{ env.VAR_NAME }} is working fine./nHi\u00a0@rigobcastro,/nHi @brightran,/nYeah, we can define environment variables at workflow level, job level and step level.\nAnd ideally, the workflow level environment variables can be used at all jobs and steps in the workflow, the job level environment variables can only be used at all steps in the current job, and the step level environment variables can only be used at current step./nHow can we know when this is available? We want to re-use a global scope variable in more than 5 jobs./nUse a secret?/nThree months have passed and it still seems a problem. Proper scoping and cascading of env vars for the workflow definiton seems to me like a pretty important feature./nHi,/n+1\u00a0/nAny updates on this? This is a crucial feature./nI\u2019m not sure if its a recent thing, but the functionality works fine for me. Global env which is usable in steps./nThe problem states that the workflow env var is not available at job level configuration./nThe problem clearly states the workflow env is not usable at the job level. Step level references are fine, but job-level references break (as demonstrated in the example)./nProbably simplest workaround right now:/nAny updates on this? my usecase is creating a firebase.config.js file via echo ${{SOME_SECRET_CONTENT}}/nI would also like to see this implemented. I\u2019m setting a couple of env vars on the workflow level and then I\u2019m trying to use them on the job-level\u2019s if-statement;/n@brightran: any update on on.*.paths getting support for env variables?/n+1, this feature is essential/nIs it still on the table to enable this feature?/nThis is a basic and essential feature, is it on the roadmap?/nAlmost three years later and it still doesn't work. I love using Azure Pipelines with a paint job./n"
    },
    {
        "title": "Allow workflow_run to wait for all workflows it depends on",
        "url": "https://github.com//orgs/community/discussions/16059",
        "upvotes": "338",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 63,
        "replies": 3,
        "comments": 3,
        "body": "Hello!\nI've been using Github Actions in my personal projects with great success, so kudos for the awesome tool \ud83d\ude4c/nJust to complete my example above, this is the way to achieve an equivalent flow today, which I must say results in much more code:/nThis conceptual inconsistency is annoying./nTry out this publicly accessible \"wait for workflows\" action from Chainlink that waits either for all workflows or only for the specified ones and then run your job./n"
    },
    {
        "title": "Reusable Workflows from private organization repository",
        "url": "https://github.com//orgs/community/discussions/16838",
        "upvotes": "289",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 60,
        "replies": 19,
        "comments": 6,
        "body": "Hello Team,/nI contacted GitHub Enterprise support about this a few months ago and was told it's on the roadmap./nI am also looking for this feature. I am curious if there is something difficult about implementing it. We use GitHub enterprise and GitHub Actions for our CI/CD.\nWe have many microservices stored in separate repos, and want to share the common workflows related to testing and deployment in one repo and use them in our other repos. However we cannot make the workflow public for security reasons./n@gazandic I know that this answer doesn't fit your needs perfectly, but it could be a good solution./nThis is now possible on GitHub.com:\nhttps://docs.github.com/en/actions/creating-actions/sharing-actions-and-workflows-from-your-private-repository/nit would be good if private workflow could be reusable also in public repositories within the same organization. in this way, we won't have to expose the logic of the workflow, but we could still use the workflow./n"
    },
    {
        "title": "GITHUB_TOKEN does not have permissions to read other private repos in the same organization",
        "url": "https://github.com//orgs/community/discussions/46566",
        "upvotes": "282",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 56,
        "replies": 6,
        "comments": 13,
        "body": "Product Feedback/nI also second this, it would be nice if we can define in the permissions configuration section which other repos that belongs to the same organization the GITHUB_TOKEN has access to./n+1 from me as well. My use case are:/n+1 looks like there is no option other than defining a an organization level secret as a token./nIt would be nice to have a setting that is all private action runners can access all packages in this org.\nThis would remove the need for PAT as a secret and also make dependabot updates MUCH simpler as there would be no need to add tokens to that world too/nI have just been able to solve the problem in our repo. There is an option in the package settings to give certain repositories within the same organization access from the Github Actions.  https://github.com/orgs/XXorgaXX/packages/npm/XXrepoXX/settings./nIt appears that the GITHUB_TOKEN secret that is available in Github Actions environments does not have the ability to be configured to read private repositories within the same organization. The only workaround right now is to create permissive PATs that allow this. It seems strange that a PAT is required to read a repository, but not a private package in the github package repository./nSame issue when i try to access terraform modules inside an action, terraform init can't access private repos in the same organization./nYes pls!/n+1/n+1!/n+1/n+1, we run a git clone of another repo within the same org as part of one of our workflows and this would be way better than using a user-tied PAT/nHave the same issue. Tried with another org and it works good. Magic/n"
    },
    {
        "title": "Run a GitHub action on pull_request for PR opened from a forked repo",
        "url": "https://github.com//orgs/community/discussions/25012",
        "upvotes": "261",
        "tags": [],
        "rections": 0,
        "replies": 2,
        "comments": 19,
        "body": "If I create a workflow with an action that runs on pull_request, when a pull request is opened on that repo from a forked repo, the action is not triggered./nHi\u00a0@pvdlg, that\u2019s intentional and likely to remain the case./nHi,/nhttps://developer.github.com/actions/creating-workflows/workflow-configuration-options/#pull-request-events-for-forked-repositories/nHas there been a change in this policy? I created a test account (@huynguyendev) that is not in the beta. I then opened up a PR to TextureGroup/Texture (which is in the beta) from my forked repo. The commit changes Texture\u2019s worflow file to run on pull_request and voila, the workflow is started for my PR!/nHi\u00a0@appleton\u00a0,/nactions are in fact executed, but it happens against the _fork_/nFor the recent update for GitHub Actions we have made a lot of changes to how workflows are run./nSo how does the mitigation work in this case?/nI tried this with two accounts that both have Actions enabled:/nSecret variables aren\u2019t available on PR by default./nSame problem./nHi\u00a0@larshp, are you able to configure the workflow so that unit tests + linting results is shown on the PR when the PR is coming from the forked repo ? \u2026\u00a0/nCan someone elaborate on whether the marked solution is the current behaviour or the future intended behaviour?/nHi,/nWe use local action runners. Does this mean, that every person who has a fork of that repository has to set his own local action runner?/nSame confusion here!/nSee\u00a0https://github.com/nyurik/auto_pr_comments_from_forks \u2013 a workaround for this limitation.\u00a0 Essentially it\u2019s a cron job that frequently checks for recent runs, and posts an artifact content that run has created./nIt has been several months and this problem still persists, evidently. Any news on whether this feature will be working for private repos soon?/nThis is how I am creating comments on PRs from forks this using the new pull_request_target event released by GitHub in August 2020:\n/n"
    },
    {
        "title": "Feature request: Display the exact date/time of each action in the list of worflow runs",
        "url": "https://github.com//orgs/community/discussions/58663",
        "upvotes": "258",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 60,
        "replies": 10,
        "comments": 12,
        "body": "Product Feedback/n\ud83d\udc4d The current display is fine most of the time; but we use a LOT of actions, and not being able to see exact timestamps in the UI makes it fairly difficult to do forensics when things go wrong./nThis would be GREAT./nThis is shocking in its absence. The UI happily shows you far less useful, yet presumably similarly sourced information like \"4 days ago\", but appears designed specifically to not show you an actual date and time./n+1 to this request. I'm an Engineering Manager with about 50 devs at the company. We use Github actions for all our deployments and CI/CD. Having an entire month's worth of actions grouped into \"last month\" is very hard to work with. It's even worse that when you click on the action it still shows you \"last month\" instead of the date and time it was run./nSimple chrome extension that solves the issue: https://github.com/jan0991/github-actions-full-datetime/n+1 - I was just trying to figure out which release caused issues in production, and having the exact build time to compare against my logs would make my job a lot easier./nHOVER the mouse on the \"x days/months/years ago\" and you have it/nThe hover isn't working for me [Chrome Version 120.0.6099.234 (Official Build) (arm64)]. I can see a \"datetime\" and a \"title\" attribute that have the information, but nothing happens when I hover and when I activate hover in Developer Tools on any of the elements, nothing happens,/nThe hover is a little annoying to do when you have a lot actions to go over./nAny update on this this would be really nice to have/nWe need exact timestamps for post-mortems. Please add a mouseover or something that gives us the exact time and timezone. The existing \"Manually triggered last week\" stuff isn't good enough to help us track and debug errors./nAs others have said, you can see this on hover, however it would be nice to be able to see it quicker and easier for skimming through pages of runs\nI don't see why this can't be an option in your personal settings the same as timezone and (not sure github has this but other apps do) whether you want to see times in 24 or 12 hour clock/n"
    },
    {
        "title": "Expressions should have a conditional operator or function",
        "url": "https://github.com//orgs/community/discussions/75928",
        "upvotes": "236",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 34,
        "replies": 1,
        "comments": 3,
        "body": "Product Feedback/nIn addition, the solution should support non-trivial use cases, Which breaks down into:/nThere seems to be a way because there is \"ternary like\" operator in Github actions https://docs.github.com/en/actions/learn-github-actions/expressions#example . One thing to watch for is that \"true value\" (one after &&) need to be \"truthy\" to work as expected/nThis is well known, but considered a poor solution due to the side effects. A real ternary operator is needed./n"
    },
    {
        "title": "Feature Request: Composite Action default shell to reduce redundant mandatory shell settings on every composite step",
        "url": "https://github.com//orgs/community/discussions/18597",
        "upvotes": "233",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "Currently you have to specify shell: bash or similar for every single step in a Composite Action./n100% agree with this suggestion. Currently, We have to specify shell: <shell> on every step where run: <command> is specified./n"
    },
    {
        "title": "GitHub Actions Workflows - deployment approval timeouts",
        "url": "https://github.com//orgs/community/discussions/5673",
        "upvotes": "228",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 1,
        "comments": 3,
        "body": "When using GitHub Actions Workflows with deployment approvals, I'm looking for the ability to time-out a workflow if no one approves it within a specified period of time./nThis is especially important because unapproved deployments can backlog and prevent new ones from being able to run/nThe ability to configure a timeout for deployments awaiting approval would be hugely beneficial. I work on a team that typically deploys in the range of 10-20 a day from Monday to Friday across a range of services and the number of Github Action Workflows awaiting approval can be significant./n+1/n"
    },
    {
        "title": "Ability to restart individual failed GitHub Actions jobs while workflow is still running",
        "url": "https://github.com//orgs/community/discussions/73156",
        "upvotes": "216",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 52,
        "replies": 4,
        "comments": 2,
        "body": "Product Feedback/n@janpio Thanks for splitting this off into its own discussion!/nWe should have the ability to:/n"
    },
    {
        "title": "Support setting job timeout-minutes globally for a workflow",
        "url": "https://github.com//orgs/community/discussions/10690",
        "upvotes": "212",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 7,
        "replies": 1,
        "comments": 6,
        "body": "Describe the enhancement\nAs part of the default attribute it would be great if you could set the timeout-minutes attribute so you don't need to set a timeout in every job. This will apply to each job independently. You can then override this default global level at the job or step level if those steps or jobs need a different timeout./nHi @toast-gear, this is useful feedback.  I've added this to the backlog.  Thanks!/nIf the timeout applies to jobs then it should be at the root level:/nExtrapolating on this idea, would it be possible to set a default timeout policy for i.e. GitHub Enterprise runners' timeout?/n"
    },
    {
        "title": "Feature Request: Auto-incrementing counter functionality",
        "url": "https://github.com//orgs/community/discussions/64533",
        "upvotes": "210",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 1,
        "replies": 0,
        "comments": 5,
        "body": "Product Feedback/nThis is one of the major roadblocks stopping me to shift from Azure DevOps to GitHub/nThis is also a major block to us migrating from SVN to Git. We have to use the SVN release number to check that this version of our code is allowed to be used with older releases being blocked. The app version number needs to be both sequential and to uniquely identify the check-in so it can be used to retrieve the source./nIs this functionality still missing?  Have any of you found a way to accomplish this in Github Actions?/n@deadlydog\nhttps://stackoverflow.com/questions/54310050/how-to-version-build-artifacts-using-github-actions\nIt seems you can use a couple of counters if it is \"close enough\" to an incrementing version number you want./nThanks @latobibor , I had found that Stack Overflow answer before posting my feature request, and did mention the counters it covers in my original post. One of the primary use cases that I want covered is to be able to implement semantic versioning without tags, which you cannot do with the counters available today since you cannot reset them to zero or set the seed value they should start from./n"
    },
    {
        "title": "Ability to restart individual GitHub Actions CI builds",
        "url": "https://github.com//orgs/community/discussions/4278",
        "upvotes": "202",
        "tags": [
            "\ud83d\ude80Shipped",
            "Actions",
            "ProductFeedback"
        ],
        "rections": 172,
        "replies": 25,
        "comments": 10,
        "body": "The cpython project runs a large number of CI jobs using Actions. Sometimes our tests are flaky and one job fails for a spurious reason (classic: ssl host not found). Of course we should fix our tests, but in the meantime it would be nice if we could restart just the failing job, rather than restarting all jobs (which we can force by closing and reopening the PR)./nRelated ticket on @actions: actions/runner#432/nThanks for the feature request, it's definitely on the roadmap and coming in the next few months!/nfeature is live \ud83d\ude80/nWe've shipped the ability to re-run failed and individual jobs in a workflow!  \ud83d\udea2/n@ethomson Hi, I've noticed that if any of the dependent jobs further down the chain use reusable workflows, then attempting to re-run a failed job will fail with a GitHub Actions has encountered an internal error when running your job. message for the job it's just attempted to re-run. So currently, because I use reusable workflows, I'm unable to make use of the ability to re-run single jobs./nThanks for this feature. However, it's annoying that something that used to take 1 click, now takes 3 clicks./nMy only other piece of feedback is that I have to wait until all other running jobs have finished, before I can re-run my failed job. It would be nice to be able to re-run an individual failed job as soon as it fails, without having to wait for the rest of the run to finish./nJust wanted to say thank you for this. I've been waiting for it for two years, and it was holding up our ability to move to Actions from another service. It really is a game changer for us./nI really wish this allowed rerunning a job before the workflow finished. There were a couple of comments in the linked issue in the runner repository with the same request. I think this could still work with the model GitHub actions has where \"attempts\" are at the workflow level, but attempts would have to be allowed to proceed in parallel. Since rerunning a failed job also reruns all of its dependent jobs, any in-process runs of those jobs would be cancelled (they would normally have already failed, but they could have always() set). The other jobs still running or queued must not depend on the job that needs to rerun, so there should be no conflict, unless they're using artifacts it produces or something without declaring it in their dependencies (needs block), which is already a race and should probably just be undefined behavior./n@OmerGery  Can we change the tag to \"partially shipped\"?/n"
    },
    {
        "title": "Github Actions url to run",
        "url": "https://github.com//orgs/community/discussions/25470",
        "upvotes": "178",
        "tags": [],
        "rections": 21,
        "replies": 4,
        "comments": 18,
        "body": "Hi!/nWe don\u2019t currently expose that information, however I\u2019ve made a note of this feedback so we can take it into account as we continue to improve actions./nThanks! It would perhaps be great to have it as one of the environment variables. GITHUB_RUN_ID or something along those lines./nI have similar use case. Would be nice to have this./nAny updates on this now with the launch of CI/CD support?\u00a0/nI was just trying to solve this problem recently, this is what I ended up with in the mean time to just set the deployment url:/n@mcolyer has there been any movement on this item?/nAs requested in\u00a0https://github.community/t5/GitHub-Actions/Check-Suite-identifier-as-an-environment-variable/m-p/35498#M2240, having GITHUB_CHECK_SUITE_ID would allow provision of such URL as follow:/nHi\u00a0@mcolyer\u00a0/nWith the new\u00a0Actions API, there are now\u00a0$GITHUB_RUN_ID environment variable provided.\u00a0/nDoes that actually work for you? My run IDs are different than the numbers in the URLs. And using the run ID like that results in a 404./nFormatting got weird there\u2014sorry./nDoes anyone know how to get that URL for the current job in the current run? GITHUB_RUN_NUMBER looks promising but doesn\u2019t seem to be related to the URLs at all./nYeah! It would be great to have the id of the current job to be able to construct a link for that too! Currently, this is not possible./nI think this should do it @dominikfoldi @samuela\nhttps://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID/nNo. That will link to the workflow run which has one or more jobs. The jobs have their own dedicated ids, so they have their own links, too./nAh, sorry. Then I understand. And I don\u2019t know./nThe job run IDs don\u2019t seem to be exposed in actions, at least per the documentation. Might be worth to print all contexts etc. to check whether this information is available but undocumented./nThis shows an existing run, is it possible to create a hyperlink that will create a new run when clicked?/n"
    },
    {
        "title": "Allow using reusable workflows in private repositories for organizations",
        "url": "https://github.com//orgs/community/discussions/27872",
        "upvotes": "173",
        "tags": [
            "Enhancement",
            "APIandWebhooks",
            "ProductFeedback"
        ],
        "rections": 63,
        "replies": 5,
        "comments": 2,
        "body": "Hello,/nI think it could be a good feature to perform complex pipelines without having duplicated codes (workflow codes)/nThis looks to be on the roadmap but keeps getting bumped: github/roadmap#51/n"
    },
    {
        "title": "How to retry a build that failed?",
        "url": "https://github.com//orgs/community/discussions/26037",
        "upvotes": "155",
        "tags": [],
        "rections": 0,
        "replies": 2,
        "comments": 13,
        "body": "I had a build fail for a reason unrelated to my code (in the setup-node action - possible a network issue or something, it\u2019s not clear). I can\u2019t rind any way to retry this build without pushing another commit (which means all the other parallel tasks like running on other OSes will be repeated)./nHello!/nThis does seem to be there now. However, I\u2019m seeing that I get a \u201ccheck rerequested\u201d event is in the GITHUB_EVENT_PATH file rather than a synchronize event (or whatever did trigger the action run) causing some assumptions to be broken. It certainly doesn\u2019t have the same information available as the original synchronize trigger at least. It also seems to be only for all actions, not per action (though I\u2019m just testing with a single action right now)./n\ud83d\udc4d thanks! We\u2019re working on it./nThanks! Retry is hugely important to us :slight_smile: The ability to retry individual tasks/checks as well :)\u00a0/nFor future runs this should now be solved\u00a0https://github.blog/changelog/2019-09-30-github-actions-deterministic-re-runs-for-workflows//nI don\u2019t understand how re-runs work. When I have a failed task, there\u2019s an info icon next to it with a tooltip that says \u201cThis check suite has disabled re-running individual check runs\u201d. Is there something I need to do to enable this?/nWill we be able to retry specific jobs rather than the entire workflow? Right now I only see the option to Re-run all checks. If I am running multiple jobs in parallel and only one fails I would like the ability to rerun just that one job./nI cant find it and it\u2019s now 6 months since your message, am I missing it or is Github still working on it?/nWe don\u2019t see a re-run command sometimes.\u00a0https://github.com/submariner-io/shipyard/runs/666918597?check_suite_focus=true/nAlthough the possibility to rerun failed workflows is great, it would be super great if there\u2019s an option to run only the failed jobs. Is this already there and I\u2019m missing it? Is there a plan to implement it?/nUpdating this, as my old comment is very out of date at this point./nRe-running an entire workflow is possible via the re-run button on the top right/nWe have checks that run via webhooks. The Actions API is not enabled, so we don't have a retry button. We can re-run webhooks, but the webhooks interface only shows the 17 most \"Recent Deliveries\", so I can't actually re-deliver anything older./n"
    },
    {
        "title": "Ability to move packages across repositories",
        "url": "https://github.com//orgs/community/discussions/8577",
        "upvotes": "154",
        "tags": [
            "Actions",
            "Packages",
            "ProductFeedback"
        ],
        "rections": 44,
        "replies": 0,
        "comments": 3,
        "body": "Hey guys, thanks for a shiny new space for feedback \ud83c\udf89\nIt would be extremely useful to have an ability of moving a github packages across repositories, and have been brought up by several discussions in https://github.community:/nHi @dentuzhik,/nWhy they're tightly associated to any repo other than for providing a easy link to it's source seems odd to me personally. Totally understand tightly coupling to the scope they're published under but I don't feel it should go further than that personally./nMore than 18 months later and no response. Is there a related feature request for this?/n"
    },
    {
        "title": "Github Actions: Provide Branch Name environment variable",
        "url": "https://github.com//orgs/community/discussions/5251",
        "upvotes": "147",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 59,
        "replies": 2,
        "comments": 4,
        "body": "Currently, there's no easy way to grab the branch name in a GitHub action./nI wrote a support ticket (see: https://support.github.com/ticket/1380493 ) to ask for a Date for a Date, for this feature./n+1 for this functionality/nThey added GITHUB_REF_NAME/github.ref_name and GITHUB_REF_TYPE/github.ref_type sometime ago for most common use cases, see https://docs.github.com/en/actions/learn-github-actions/environment-variables/n+1 for this functionality/n"
    },
    {
        "title": "Reusable workflows: Failed to fetch",
        "url": "https://github.com//orgs/community/discussions/40839",
        "upvotes": "145",
        "tags": [],
        "rections": 56,
        "replies": 6,
        "comments": 32,
        "body": "Today,randomly,some workflows triggered failed with message: ...error parsing called workflow \"org/repo/.github/worflows/reusable.yaml@main\". Failed to fetch workflow./nthere was no any change recent days for the workflow code,  and same issue happened today/nSeing the exact same behavior here/nditto. we've been dealing with these for a couple hours now (the start of our day). i just opened a support ticket about it. same intermittent \"Failed to fetch workflow\" errors when using the short form too, uses: ./.github/workflows/blah.yml./nGithub please fix it, all the merge buttons are green now and CI is not triggering \ud83d\ude31 \ud83d\ude31 \ud83d\ude31 \ud83d\ude31 \ud83d\ude31 \ud83d\ude31/nI am having the same issue as well./nWe're seeing the same issue consistently now. It started happening first at Dec 5, 2022, 2:55 PM GMT+1/nWe're seeing this over a dozen or so different workflows over our private repos. Sometimes no workflows will run, sometimes a handful, sometimes all of them will run. It's been happening for most of the afternoon GMT./n+1 Seeing this issue on my end as well/nMy organization is seeing this as well. It is annoying to deal with since another commit must be pushed to the branch to get the workflow to run after this error./nwe have seen this three times today so far. We have no code changes in that area for 2 months now. Re-running the github action pipeline, often then works but not all the time./nthings have been working normally for the past couple hours for us \ud83e\udd1e/nanyone having problems yet?/nHaving this issue right now./nToday,randomly,some workflows triggered failed with message: ...error parsing called workflow \"org/repo/.github/worflows/reusable.yaml@main\". Failed to fetch workflow./nA/nWe're seeing the same issue lately, and sometimes it works, most of the time it doesn't./nWe have the same problem as yesterday, hope it gets fixed soon \ud83d\ude22/nWe suffer from it too((/nI have one repo that is experiencing this consistently/nit's not stopping on our side too :( @github-staff when will you consider this one top prio? it's a core feature regression \ud83d\ude22 \ud83d\ude2d/nin the support ticket i opened yesterday, someone responded 8 hours ago with, \"An issue has been opened for Engineering to investigate.\"/nThis is the response I got for my support ticket 16h ago:/nThis is indeed a VERY CRITICAL problem. This needs to be fixed as fast as possible!/nJust received a reply from github support:/nI've also been getting the error parsing called workflow repeatedly for 2 days now. It comes and goes.\nI'm referencing a local workflow (private repo) with the uses: ./.github/workflows/myresusable.yml reference./nAfter having modified all the remaining local reference, I now have an issue referencing global workflow with @master !/nI now officially got the confirmation that this should be resolve through my enterprise support ticket:/nI am getting this error also, are others still seeing it ? I see the last post was in 2022, this is a new project (demo) that I am working on that is in a public repo and local workflows. Actions are set to allow to run within the repo also./nAm having this, and to me seems a timing error.\nLike @arpadgabor maybe got into.\nAs if the depending workflow isn't able to call the other at times, maybe because this latter is already running..\nIf this is fast enough to complete, then it can be called again; if not, it fails to read it.\nLike it has some kind of lock on the called-workflow file./n"
    },
    {
        "title": "ubuntu-latest Apt repository list issues?",
        "url": "https://github.com//orgs/community/discussions/26211",
        "upvotes": "1288",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 16,
        "body": "I have a script that gets kicked off during an action that installs some packages for a custom OpenLDAP configuration. Just today I started to get this error when running apt:/nI am experiencing the same issue./nI am having the same problem/nI added \u201c|| exit 0\u201d to my apt-get update command which is allowing my workflow to work./nSame problem for me./nSame problem for me./nSame problem for me./nSame issue :-\\/nSame problem for me./nThis looks like a GitHub bug. I was able to work around it by running this command before any apt-get commands./nI tried this again with \u2013allow-releaseinfo-change and got the following message:/nI guess that the core issue is in the dotnet\u2019s apt repository that are serving buggy files, see dotnet/core#3988 ./ninsert this line before sudo apt update:/nSame here. Not a change that I expect to a CI system. \ud83d\ude26/nSame here - this seems to me to be the perfect example of why you should always run your jobs inside a well-defined container instead of inheriting whatever vm github puts you in./nThanks for the report and the patience! We\u2019re investigating this issue and will post back when we have an update./nThe recent changes that caused this issue have been reverted and individual feeds are being fixed so they can be used again. You can follow the latest status here:\u00a0dotnet/core#3995. Thank you all again for the patience!/n"
    },
    {
        "title": "Please give us filters for \"on: create\"",
        "url": "https://github.com//orgs/community/discussions/39831",
        "upvotes": "1078",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Product Feedback/n"
    },
    {
        "title": "Possibility to filter or sort the checks (Github Actions) in the Pull Request view",
        "url": "https://github.com//orgs/community/discussions/48154",
        "upvotes": "551",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 9,
        "replies": 1,
        "comments": 4,
        "body": "Product Feedback/nI wonder if we could get someone to make a github overlay to do this, I'd actually be willing to use a site that gave me these features.../nTo make this more specific, as an example, we have a monorepo and therefore many checks. Filtering checks by success/failure/skipped/cancelled and whatnot would be a great usability improvement. We regularly encounter things like this in the commit check summary / PR check summary, and finding anything specific requires a lot of scrolling and reading./nI am having the same problem. Having to scroll the whole list to find the few failed checks out of ~100 is not great.\nIf the successful. failing, and skipped could be clickable to filter the list (or anything similar) that would save users a lot of time/n+1 to this.  We have 150+ different checks and seeing 165 successful, 1 failed is the most frustrating part of my day when I scroll to find it.  Even just a simple \"bubble up checks that need attention\" design would be nice./n"
    },
    {
        "title": "Support for sharing secrets between jobs",
        "url": "https://github.com//orgs/community/discussions/13082",
        "upvotes": "485",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 47,
        "replies": 17,
        "comments": 11,
        "body": "actions/runner#1498 (comment)/nThanks @danielmarbach. I appreciate the helpful example - this isn't something that we support today but your use case makes a lot of sense and is something that we'll consider in the future. I've added this to the backlog./nTo add to this we should have a way to target jobs that can use secrets. I don't want to have someone print or use a secret from a called workflow job in a caller workflow step afterwards./nCould this be handled by having the setup job run an API operation to either create a temporary repo secret using an easily constructed naming convention, or simply update a statically assigned secret each run that can be leveraged by subsequent jobs? You could add the temporary secret's ID as an output that the consuming job(s) reference for the value (the secret name/ID) and then utilizes as appropriate? It'd be less \"clunky\" and could also be used for other workflows, or if it's an organization level secret instead, be used by other repos in the org. Perhaps as a method to share that temporary infrastructure?/nI've run into this exact requirement myself, see https://github.com/orgs/community/discussions/29880 for more details on my use-case.\n@ethomson - any update on where this is on the roadmap? Having a way to share ephemeral random tokens within a workflow would be really useful./nAny updates on this?/nFYI in the meantime we moved away from using multiple jobs towards having custom actions with setup and teardown. I will try to update the links in this issue to point to the previous version/nHi, we at Telia Company have a similar requirement that grows out of company directives. They require easy modular reusable workflows and proper secret handling. For secrets Vault is used./nAlthough there are now docs on masking and passing secrets between jobs or workflows (as @romain-cambonie linked), it didn't meet requirements like:/nOutputs containing secrets are redacted on the runner and not sent to GitHub Actions./nIt would be really fantastic if Github supported secrets in \"outputs\" variables for jobs.  I wouldn't care if it's a separate section named \"secret outputs\" or keep things in outputs and have the ability to add a \"secret: true\" flag.  In workflows with multiple jobs, it would be really nice to only have to make one call to secrets providers and then be able to use that secret throughout the whole workflow via output./n"
    },
    {
        "title": "[Feedback Tracking] \ud83d\ude80 New Deployments dashboard view shipped as beta!",
        "url": "https://github.com//orgs/community/discussions/62676",
        "upvotes": "477",
        "tags": [
            "\ud83d\udc42FeedbackWanted",
            "Repositories",
            "Actions",
            "ProductFeedback"
        ],
        "rections": 209,
        "replies": 144,
        "comments": 114,
        "body": "Product Feedback/nThe overview already shows if its main branch, but it would be very helpfull if it could also show the release name if theres a release tag associated with the deployment./nWhat would be extremely helpful is if this was available across the org, like the security stuff, and filterable by repo topics and by environments (e.g. \"show me all repos that have one of the topics [back_end, integration_layer] and show the following environments if they exist [stage, production]\"/nCross-reference to help track this separate feedback discussion:/nSome feedback from my team's testing of the new UI:/nI'm liking the new deployments UI.  Very happy that we can now see the tag that was deployed./nI can't see the environments anymore? I'm quite confused where envs have gone as right now I only a see a flat list of deployments from all envs/nThank you so much for this feature! It couldn't have come at a better time.\nJust as I was dreading having to explain to release engineers, how to find a set of release candidates by filtering branches in the workflow view, this feature popped up, and now I can just direct them to the deployment view. It is awesome! Now, they can just click on the environments to see if there is anything available to deploy./nLove it, but PLEASE get rid of the \"Show more environments\" link that shows if you have more than 10 environments. Just show them all or give it a higher limit or remember to show them all or something. (Same problem with the existing \"Show more workflows...\" link, it drives me insane)!!/nIt's a nice, iterative improvement over the previous iteration. My primary feedback would be to support monorepos in a more official capacity. At the moment, with our internal deployment tool that uses GitHub Deployments under the hood, we split environments into two components: a project and an environment name. E.g my-cat-server/production. The exact character used to split isn't important./nI am no longer able to run deployments with this new UI. I had to revert to the old version in order to promote a commit from a lower environment to a higher one. Please fix this before removing the old version!/nI opted out personally. We have many many deploys and it was too hard to see which was the latest deploy to each server. That's all I wanted. Additionally, the list of deployments isn't a complete list -> is that because deployments that are down / expired aren't listed? If so, it would be nice to be able to see that. It would also be nice to be able to sort the currently active deployments by server name & by deployment time./nHow to delete an environment?/nHi,\nwhen looking at the \"Latest deployments from All environments\" page, it would be good to have like little labels to quickly see which environements each deployed commit is in, rather than having to like read the workflow it was ran from./nNeed a quick way to approve/reject deployments from the latest deployments in {env} page or latest deployments from all environments page/nWe use many parallel steps (as reusable workflows) to deploy multiple applications to multiple regions. All of these workflows declare the use of a single environment (production or uat), because we require the secrets from them./nDeployments are unusable until actions/runner#2120 is fixed/nIt would be cool if you could disable third-party deploys like this within github itself/nwe use environments to execute integration tests. i wonder if we can rename Deployments to something more sensible?/nLove most of it,  Would love it if GitHub pages settings could be defined from repository, for example. For a custom domain you can add a CNAME file to the root of the repository, but the rest of the settings are found outside the code base: https://github.com/jonnyhoeven/justme.dev/settings/pages This makes it hard to understand the CNAME file for people new to the repository. Would be nice if the deployment to github was part of .github/workflows maybe just a \"mock\" workflow that override the web based configuration and include the contents of the CNAME file./nI like it, but can I use it for GitHub Pages? Or does it have any errors?/nShould visiting the Deployments dashboard be changing the selected repository tab from Actions to Code?/nThere was a screenshot posted previously that showed a checkmark icon to indicate active/inactive and a label to indicate \"Latest\" (https://github.com/orgs/community/discussions/62676#discussioncomment-7463513)./nUnder the deployments of a specific environments, I'd like to enrich the data of the card below.\nIt's hard to understand what's actually deployed there if I'm doing anything that's custom and not tied to a specific commit.\nBeing able to add either a description text or any kind of metadata would be great./nThis is superb!/nTwo pieces of feedback:/n"
    },
    {
        "title": "API to generate runners token?",
        "url": "https://github.com//orgs/community/discussions/26751",
        "upvotes": "415",
        "tags": [],
        "rections": 2,
        "replies": 0,
        "comments": 16,
        "body": "It would be very useful to have an api endpoint that would allow me to generate setup tokens for self-hosted Actions Runners dynamically and allow me to have packerized AMIs that automagically pull the token and connect to github. The inability to do this currently drastically limits their usefulness for me./nThere is no Github API to generate tokens. When you want to setup self-hosted runner, you can go to repo Settings > Actions > Self-hosted runners section, clicking on \u201cAdd runner\u201d button. Then there is a token for you to use in Configure steps./nI know there isn\u2019t an api. That\u2019s why I said it would be useful to have one./nSorry to tell you that as a security precaution, Github doesn\u2019t provide an API to create personal access token. You need to follow the steps to create a PAT through web site.\u00a0\u00a0\u00a0https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line/nSo a normal PAT can be used for this purpose of registering a self hosted action runner? Does it need any specific permissions in order to do this?/nI don\u2019t entirely understand how allowing api access to retrieve a token would be less secure than, say, using api access to interact with branches and repos and pull requests. There are already authenticated endpoints that plenty of automation users leverage./nI\u2019ve confirmed that PAT tokens cannot currently be used for this purpose, only the tokens obtained via Actions > Add Runner work. Which is a bit of a problem for us as they appear to be short lived./nAn API for this is on the roadmap. I don\u2019t have a timeline to share at the moment. But we\u2019ll be posting to the Changelog when this is available./nPerfect, good to know. Thanks!/nGood to hear there will be an api to generate these tokens. We are trying to have self hosted action runners in aws fargate and so short lived tokens present a problem as the the runner tasks are transient. Also it would be benefitial to be able to scale them up and down as and when needed. Without the token api (or much longer lived tokens) this currently isn\u2019t possible./nAlso looking forward to this feature. I was also looking to provision short lived runners, but cannot easily without the token generation API./nHey guys,/nI asked GitHub support for an ETA, should be sometime next week. \\o//nThe GitHub Actions API has shipped\u00a0https://developer.github.com/v3/actions/self_hosted_runners//nThe generated self-hosted using API, is 130 characters long, way longer then the one generated on/nIs there a GraphQL API endpoint?/nAnyone successfully using the API with a token?  I'm getting a strange response:/n"
    },
    {
        "title": "There is no reliable way to delete or hide old/renamed Workflows?",
        "url": "https://github.com//orgs/community/discussions/63316",
        "upvotes": "362",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 44,
        "replies": 4,
        "comments": 7,
        "body": "Product Feedback/nThis comment from https://github.com/orgs/community/discussions/26256#discussioncomment-6673330 seems like a very reasonable ask./nHi @pcornelissen/nWe are also looking for this functionality/nAlso looking for this pretty basic functionality./nno solution, but using this meanwhile as workaround https://github.com/Mattraks/delete-workflow-runs/nNumber #2/nI have no workflow-run but workflow is created.. Generally, as i know, if all runs are removed, workflow should be disappear. but it wasn't./n"
    },
    {
        "title": "Do expressions support ternary operators to change their returned value?",
        "url": "https://github.com//orgs/community/discussions/26738",
        "upvotes": "338",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 34,
        "replies": 5,
        "comments": 5,
        "body": "Something along these lines\u2026/nHi\u00a0@atrauzzi\u00a0,\u00a0/nIs a ternary operator or substitute even necessary in this case?/nI stand corrected: It is possible to use array/object based techniques via fromJSON() as an alternative to unsupported array/object literals./nThe fake ternary operator doesn\u2019t work for secrets:/nInteresting. Are there secrets simple strings or like JSON/YAML objects?/n"
    },
    {
        "title": "Feature request: automatic GITHUB_TOKEN in workflows that can trigger events",
        "url": "https://github.com//orgs/community/discussions/35047",
        "upvotes": "289",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 48,
        "replies": 1,
        "comments": 2,
        "body": "I understand that by default the automatically generated GITHUB_TOKEN in workflows will not trigger any further workflows as a side effect from apis that it calls. As far as I understood the main reason is to avoid accidental recursive calling of workflows.\nI think this is a very reasonable default./nI also had this same idea and came here to request this feature./nIf your use case is to automatically update/fix the current branch or pull request, you can use the autofix.ci action./n"
    },
    {
        "title": "Additional function(s): lowercase|uppercase",
        "url": "https://github.com//orgs/community/discussions/25768",
        "upvotes": "282",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 116,
        "replies": 5,
        "comments": 13,
        "body": "Noob GitHub Actions user here./nThe env approach is what I\u2019d do, except that I\u2019d use Bash parameter expansion to convert the case instead of hardcoding it:/nWhile using built-in shell functionality is probably more succinct, you could also use a string manipulation action if you want something that works the same regardless of the shell type:/nHow would you use it inside the run step, then?/nWhen you write a variable definition to GITHUB_ENV, subsequent steps will have it as an environment variable. For example:/nThe following commands can do this trick:/nPython also does the exactly same thing:/nIMHO:\nI would feel uncomfortable running those bash commands basically calling eval in python or nodejs./nI don't like any answer above, for me, Github actions must have some built-in functions to do usual things like uppercase, camelcase, lowercase, etc../nSee this answer https://stackoverflow.com/a/63315136/416845 on how to use ${var^^} to uppercase/nThese worked for me:/nSee also https://github.com/orgs/community/discussions/10553/nNone of these answers solve the actual problem.\nIf you want to run steps inside an image, then you need to first to be able to specify the image path, in order to pull the image.\nWithout variable expansion, an additional job is necessary that first lowercases the variable and then using that in a subsequent container job.\nWhat a waste of resources./n"
    },
    {
        "title": "Passing Environment Variables to Reusable Workflow",
        "url": "https://github.com//orgs/community/discussions/26671",
        "upvotes": "261",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 145,
        "replies": 10,
        "comments": 20,
        "body": "It\u2019s my understanding that the environment from main workflow does not extend to the reusable workflow it calls.  When I dump the env from both jobs to the stdout, indeed, the env variables I set in the main job do not appear in the env of the reusable workflow I have called./nI don\u2019t think you can use env, the problem is that env is set for stages based on the nested thing and that\u2019s firewalled off in this case. (It needs to know what kind of runner to live in amongst other things.)/nYeah, I\u2019ve dealt with the env scope problem and used outputs to get around it.  I just thought this was within scope since I set the env value at the workflow level and the \u201cWith\u201d is down in a step.  Unless someone has an official position on it, I\u2019m going to submit a feature request and see if it goes anywhere./nCan you please provide an example how did you do this? I cannot figure it out for hours already.\nI tried creating a separate job setting its output to needed value - but apparently I cannot reference \u2018jobs\u2019 as well when calling reusable workflow\u2026/nhttps://docs.github.com/en/actions/learn-github-actions/contexts#context-availability/nSome important things to note about this code snippet that calls a reusable workflow:/nHi there./nHas anyone opened an issue for this? This seems like a no brainer feature/bug fix/nI found something like this to work for me. Nothing fancy just exposes an env var to the \"with\" block. Of course you could add multiple output values for more env vars./nYes, I need another workaround for something that should be a no-brainer, had to do the same to use env/inputs with runs-on/n@github-staff Is this on the roadmap? It would be beneficial to avoid running these workarounds and be able to leverage reusable workflows with environments./nThis is one more time a weird an not intuitive way github actions are setup. Any person would expect to be able to use an env variable as an input of a reusable workflow, but instead there is no clean way to do it..../nCan we please have the ability to pass env to reusable workflows? I can't re-use workflows on ~50% of my repos because of this one limitation!/nThis has also caused a lot of issues and a several weeks delay in implementing reusable workflows for my company. The workarounds here only get us so far. When we need to add an arbitrary number of secrets to the env of the reusable workflow from the caller workflow, options are really limited, and with those limited options there are a lot of drawbacks. We were able to mostly work around this by passing a map of secrets in a JSON string to another secret then let the reusable workflow process those. However, that loses the automatic secret masking inside the reusable workflow (since secrets are no longer inherited), and we have to manually re-mask secret values. Even with that, we've run into the issue where passing toJson(secrets) causes { and } to be masked, and multiline secrets are problematic./nI guess the use of ::set-output is now deprecated/nI hope GitHub has planned a method like secrets: inherit to pass through environment variables as well./nAlthough there are now docs on masking and passing secrets between jobs or workflows (as @reed-hanger linked), it didn't meet requirements like:/nThis is really dumb and the workaround with the extra \"set environment variables\" step and double base64 encoding is nasty./nI have similar problems and have come up with a workaround./n2 years 2 months since this thread. Do we have a feature request?/nany update?? a simplistic solution would be nice/n"
    },
    {
        "title": "I would like a simple way to get the HTML URL for the current job",
        "url": "https://github.com//orgs/community/discussions/32169",
        "upvotes": "258",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 15,
        "replies": 4,
        "comments": 1,
        "body": "I wanted to be able to provide a link in Slack to view the logs of the currently running job and the only way I found to do it was this:/n"
    },
    {
        "title": "Revisiting KVM support for Hosted GitHub Actions",
        "url": "https://github.com//orgs/community/discussions/8305",
        "upvotes": "236",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 27,
        "replies": 13,
        "comments": 8,
        "body": "There are a lot of exciting developments in the operating space with unikernels, testing tools, networking labs, and more. It would be much easier to collaborate on and encourage new developers to explore this level of the system if GitHub Actions supported KVM./nHi @grahamc - great question.  If we offered nested virtualization, would this be sufficient?  Or is there more that we would need to provide to support you using KVM?/nHey folks, hope you don't mind me chiming in here./nI managed to run KVM on the large hosted runners, but it requires some packages installed.\nIt would be awesome if they'd be included in the large runners by default and permissions are setup as needed./nWhat's the progress on this?\nThe last response from github was two years ago and by now @ethomson doesn't seem to work for github anymore./nWould be nice if the runner-user would be part of the kvm group. This way, you wouldn't always have to re-configure the permissions when you want to use KVM. I also don't expect that applications which don't use KVM would be impacted by this change./n"
    },
    {
        "title": "[Mar 27, 2023 GitHub Outage] remote: fatal error in commit_refs",
        "url": "https://github.com//orgs/community/discussions/15823",
        "upvotes": "233",
        "tags": [
            "Bug",
            "Actions",
            "ProductFeedback"
        ],
        "rections": 82,
        "replies": 205,
        "comments": 125,
        "body": "I opened an issue about remote: fatal error in commit_refs (which I've now reopened as https://github.com/orgs/community/discussions/51154)./nOr just like now, they're having issues and I had to check https://www.githubstatus.com/ to see what's wrong!/nTotal 8 (delta 7), reused 0 (delta 0), pack-reused 0\nremote: Resolving deltas: 100% (7/7), completed with 7 local objects.\nremote: fatal error in commit_refs\n! [remote rejected] main -> main (failure)\nerror: failed to push some refs to/nGithub is fixing it github actions and operations are facing some issue you can further check it here https://www.githubstatus.com/. That is the reason why the code is not pushing and showing/nYeah! I am having the same push issue here/nAmen!/nI am also facing the same issue/nFacing these issue from last 15 minute. /nI'm also experiencing the same issue here, is there any way out/nGithub are having some issues https://www.githubstatus.com//n+1/nI am also facing the same issue! I am witnessing history \ud83d\ude02/nI'm also facing the same issue./nme too/nI am also facing the same issue! I am witnessing history \ud83d\ude02/nI need commit my code \ud83d\ude2d\ud83d\ude2d\ud83d\ude2d/nit is working now/nits working now/nits working now\n/nworking/nWorking!/nworking now guys, glad I didn't try anything silly.../nworking.......niby dzia\u0142a :)/nWorking now/nworking now! Lets go!/nProblem solved/nHurray!!!  Now, it is working/nBut I'm getting the same issue now/nI am getting now/nye, it's working right now.. thank u team/nI'm also facing this issue on some repos, not all of them./n"
    },
    {
        "title": "The dispatches API should return the run ID",
        "url": "https://github.com//orgs/community/discussions/9752",
        "upvotes": "228",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 103,
        "replies": 12,
        "comments": 8,
        "body": "The Create a workflow dispatch event  returns empty content. However, this makes it very difficult to track the workflow that was triggered because getting its ID is inherently 'racy'. The triggered workflow may have finished before you can check for it, or another job may already be running. It would be much better if the API returned the ID of the workflow that was dispatched./nThank you for your feedback./nIn case anyone finds this discussion and is looking for a workaround, I've implemented one in a new PR. The idea is to compare the lists of run IDs before and after the trigger API is called. However, we don't need to fetch the full history of run IDs, only those since a couple of minutes before the trigger, and thankfully the runs API allows you to filter by time./nIs there a way to maybe expose a specific input from dispatched workflows (e.g. some id generated client-side and passed in when triggering)? We can then query using that, for the exact run-id via the api at a later time, when it is available? (or at the very least be able to \"de-race\" by inspecting that field for runs that happen at the same time)/nCan we please get a return run_ID or job_ID array for the dispatch? It's lack is making completion polling and logging a real PitA./nSo I solved this by injecting a non-used input field and search for it again when retrieving the workflows. This is a very much needed feature imho/nAlternative approach:/nAffilitiation: I acknowledge that I am a major contributor to this GitHub Action./nProvide an alternative solution I use\uff1a\nAdd an input parameter we call UUID to your workflow configuration yaml file, then set run-name to include UUID./n"
    },
    {
        "title": "Workflow/actions status badge giving 404 on private repo in an organization",
        "url": "https://github.com//orgs/community/discussions/26812",
        "upvotes": "216",
        "tags": [],
        "rections": 4,
        "replies": 3,
        "comments": 16,
        "body": "I tried to put a GitHub Actions workflow badge ony a private repo, however, it\u2019s always giving me 404/nHey\u00a0@siedlerchr,/nThere is no any information about badges works on private repos or not on\u00a0Docs. And currently it returns 404/nTry replacing:\u00a0/nI tried it today and it works.\nExcept for linking, it would be nice if a click on the badge would lead to the actions tab./nRecently I ran into a similar problem (tried to use the path syntax for a named workflow)./nI would request to be able to use both name or file path. The name of the workflow might change due to stylistic reasons but the path will most likely (or might) stay the same./nThis solution didn\u2019t work for me, I have a private repository that uses the named workflow:/nIt takes some time until the badge is generated with the correct value./n@siedlerchr works for you by replacing/nDoesn\u2019t seem to work for me (displaying badges for a private repo)./nHi @mscoutermarsh,/nHi!/nI too am seeing the same behavior. No matter what I try, no matter what auth headers I use, I cannot download the badge.svg from a private repo. This is an issue, especially for folks who don\u2019t live inside GitHub. We want to take these status badges to display in another dashboard, but we cannot get it working./nYear later and issue persists... Can we reopen it or something?/nso this is a tremendously cheesy answer, but you can script it with gh and shields.io. could potentially do it at the end of a workflow, but then it'd need to be customised for where it ends up./nI'm facing the same 404 issue referencing the badge from a private repo on Github Pages with a custom-generated URL. Problem is the Session Cookie Headers are being ignored/revoked because the source URL is not 'github.com'./n"
    },
    {
        "title": "Feature Requiest: View Logs for running step",
        "url": "https://github.com//orgs/community/discussions/35363",
        "upvotes": "212",
        "tags": [
            "Enhancement",
            "Actions",
            "ProductFeedback"
        ],
        "rections": 1,
        "replies": 1,
        "comments": 4,
        "body": "An issue was raised for this; details and further information can be seen here:/nActually I searched and found this brought up a few times already in discussion. Please close this out as a duplicate, or perhaps, use as another tally on the board for getting this feature bumped up in priority? Thanks/nIt's been almost two years after the first issue was opened, and there has been no feedback at all.../nRelated discussion: #44250/nPotentially related documentation issue: github/docs#25041/n"
    },
    {
        "title": "Add build number?",
        "url": "https://github.com//orgs/community/discussions/26689",
        "upvotes": "210",
        "tags": [],
        "rections": 0,
        "replies": 1,
        "comments": 18,
        "body": "First, just because other CI providers have a feature doesn\u2019t necessarily mean that it should be implemented in Actions./nHello @msp-greg,\u00a0Thank you for your feedback! We\u2019re always working to improve GitHub and the GitHub Community Forum, and we consider every suggestion we receive. I\u2019ve logged your feedback in our internal feature request list. /nI\u2019ve been using the build number as part of my version numbers (yyyy.m.d.build) which makes it easy to know when the deployment happened, and which build it\u2019s from. This is one of the last things stopping me from moving all of my builds over to actions./nI have posted the same thing here over on the GitHub actions/toolkit repo as an issue as I am stil unsure where the best place is to discuss with the GitHub team and give feedback./nThanks\u00a0@xt0rted and\u00a0@warrenbuckley for being here! This is the right place for this type of feedback as the team who directly works in actions is here and interacts with users. I can tell you that although as you know this is not available as yet, there is an internal discussion to add this feature to GitHub Actions and your feedback has been added to it./nCI build ID would be helpful. I recently added integration for GitHub Actions into my ruby gem knapsack_pro for automated tests split across parallel jobs. The CI build ID is needed to allow to run a few CI build at the same time for the same git commit.\u00a0/nI\u2019ve made a simple action to generate sequential build numbers,\u00a0https://github.com/einaregilsson/build-number\u00a0.\u00a0Would love for it to be made obsolete by GitHub implementing this natively, but until then I use it so I can continue the same versioning scheme I used on my old CI/CD system. I don\u2019t think there\u2019s any way right now to make the build number appear in the list of workflow runs though, that would be great if that was possible./nI think having check-suite-id (and check-run-id) available as environment variables would provide approptiate for the purpose number.\u00a0/nLooking forward for this implementation./nHere is my workaround using pushed time for build number./nHere is our solution to this issue:/nOn the github context there\u2019s now a run_id and run_number \u00a0property that\u2019s available to be passed into your actions. I\u2019m not sure if you can get to this from one of the environment variables, but it\u2019s available through the context at least./nIs this not what $GITHUB_RUN_NUMBER is for?/nBoth are also available as environment variables./nGreat!\nAlso it wouldn\u2019t be a full solution without adding the name and number in the UI under the Actions tab. Today only the workflow name exists in each row./nThe 2 env variables that were introduced are still not unique \ud83d\ude26 The number does not change if you re-run the workflow run./nI could use something like that as well: services such as coveralls accept a unique job id in their input and it would be good if they could link back to the specific job that generated the coverage.\nI\u2019d suggest to name it GITHUB_JOB_ID and expose the job id that is already available through the API: https://developer.github.com/v3/actions/workflow-jobs/#get-a-job-for-a-workflow-run/nHope I won\u2019t jinx it, but it looks like this might finally get implemented: No, there's no reason why that isn't available. This is a very sensible request ... | Hacker News :slight_smile:/nSee github.run_attempt et al/n"
    },
    {
        "title": "Pass session tags to AWS using OIDC Connect",
        "url": "https://github.com//orgs/community/discussions/12031",
        "upvotes": "202",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 39,
        "replies": 7,
        "comments": 3,
        "body": "I would like to be able to pass session tags to AWS with the GitHub OIDC Connect feature. I was able to do this with the old Access Keys by using https://github.com/aws-actions/configure-aws-credentials#session-tagging/nThanks @jsimoni, I'll pass this along to the team responsible for OIDC./n@ethomson is this somewhere on the roadmap?  I see that OIDC customization was added recently.  That is great!  Just curious how the JWT could be customized in a very similar manner?  This would be so powerful and useful to control security associated between AWS Cloud and GitHub Actions for an Enterprise/Org/Repo.  \ud83d\ude0a/nAdding my and my enterprise employer's +1 to this issue. Have also raised a Premium Support ticket #2047747/n"
    },
    {
        "title": "Extremely low annotation limit",
        "url": "https://github.com//orgs/community/discussions/68471",
        "upvotes": "178",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 9,
        "replies": 1,
        "comments": 5,
        "body": "Product Feedback/nJust adding my +1 to this, love the annotations feature and am using it in a GitHub action I've written for my organisation, but you can easily come up with >10 warnings or errors. Is there any way this can be increased? I understand page performance concerns of loading lots of these but surely something can be done here e.g. similar to \"large diffs are not shown by default\" We could have a similar feature for annotations/nAghotalam ya nke oma/nEven a message saying that further annotations were generated but aren't shown would be a step up from silently hiding them./nI have just got in a right muddle as annotation errors I was expecting to see weren't there. Now I know the limit I might be able to work around it but it would be much better if we could see more, or at least have an indication that more errors actually exist!/nI'm okay with the 10 warning / 10 error limit as long as the UI prioritizes showing warnings / errors relevant to the pull request diff. Right now I think it's in the order they are printed in the action. Which makes putting relevant warnings (caused by incrementally rolling out a stricter lint rule) in front of pull request authors more difficult./n"
    },
    {
        "title": "[GitHub Actions] branch conditional",
        "url": "https://github.com//orgs/community/discussions/26349",
        "upvotes": "173",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 9,
        "body": "I\u2019d like to make a job or step (either would work for me) conditional in our workflow, and have it validate the current branch is \u201cmaster\u201d. Is there something we can reference in the if: conditional to match only when the branch being pushed to is master?/nYou can do a conditional statement using this:/nHow did you know the value of github.ref? I can\u2019t find it./nhttps://help.github.com/en/articles/contexts-and-expression-syntax-for-github-actions#github-context/nYou can print the value to verify:/nif: github.ref == \u2018refs/heads/integration\u2019 && github.event_name == \u2018push\u2019\u00a0/nTo archive the same with multiple branches and for less boilerplate, use the contains function:/nInclude this in yout workflow./nThis approach may lead to unexpected results as it will also match when the branch name is refs/heads/prod or any substring of production or staging./nI have another question. Someone suggest or tell me an idea./n"
    },
    {
        "title": "Workflow_run completed event triggered by failed workflow",
        "url": "https://github.com//orgs/community/discussions/26238",
        "upvotes": "155",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 3,
        "replies": 2,
        "comments": 14,
        "body": "I have a workflow triggered as follows:/n@cuporter,/nhow do you use github.event.workflow_run.conclusion == 'success' when you have multiples workflows?/n@edudepetris I assume that both CI and Linters both trigger separate workflow_run events, i.e. you only see a single conclusion, from one of the parent workflows. You may want to verify this with e.g./n@brightran your suggestion works great, however, it is not documented in the webhook events docs: https://docs.github.com/en/free-pro-team@latest/developers/webhooks-and-events/webhook-events-and-payloads#workflow_run/nHow was this ever considered useful or fit for production use in it\u2019s current form?\nTriggering workflows on completion regardless of status is so na\u00efve, it has no applicability in the real world/nthis was frustrating me enough that I went ahead and created a new Action to deal with the shortcomings of workflow_run, namely:/nAn alternative to conditionals on conclusion./nhow to handle the case where the workflow having multiple triggers - workflow_run and workflow_dispatch? what will be the default value of workflow_run.conclusion then?/ndid you happen to get github.event.workflow_run.conclusion empty, when is should be success?/nYes it's working but jobs executed by workflow_run don't appear in status checks, is there any workaround?/nThis is a good feature request however. To add successful and perhaps failed types in the workflow_run event./nWhy can you not have a standard dependency tree in which I have two workflows using two different computes that need to run in a separate workflow? Love what @pantelis-karamolegkos  is saying here as well make a lot of sense./nDoes anyone have a link to submit a feature request to add the types success and failure or an issue we can vote on? It was an issue in 2020 and still is in 2023.\nDo they work on that or provided some kind of explanation on why they don't add such a seemingly obvious and simple feature?/nsuccess and error status types for all acting events (even push or merge, so you can run something if a push was rejected or a merge failed)/n"
    },
    {
        "title": "Support dynamic outputs in Composite Actions",
        "url": "https://github.com//orgs/community/discussions/10529",
        "upvotes": "154",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 45,
        "replies": 1,
        "comments": 5,
        "body": "JavaScript Actions can set dynamic outpus./nThanks @miyajan - I'll talk to the engineering team about this./n+1/nhttps://github.com/orgs/community/discussions/32628#discussioncomment-3620321/nIs there any news about this?/nThis would be very useful, are there any news? We have a composite action that runs a tool that calculates new versions for different applications inside a monorepo. Those new versions are being added to an output as a JSON object so we can use jq to get the correct version for each application but if dynamic outputs are supported we could set an output per application name./n"
    },
    {
        "title": "Ability to rename an environment",
        "url": "https://github.com//orgs/community/discussions/64081",
        "upvotes": "147",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 1,
        "replies": 2,
        "comments": 1,
        "body": "Product Feedback/nHi @greggbjensen,/n"
    },
    {
        "title": "show name of steps defined in composite actions on browser UI",
        "url": "https://github.com//orgs/community/discussions/10985",
        "upvotes": "1288",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 40,
        "replies": 4,
        "comments": 12,
        "body": "The composite actions is a very convenient function, and we create many composite actions and utilize them./nThis is helpful feedback, @yamy1114, I appreciate it.  We'll make sure that this is on the backlog./nI'd also find this feature extremely helpful! It makes the output of long custom workflows comprised of other actions much more navigable. It also helps pinpoint exactly which step the workflow may have failed at./n+1/nPlease at least make it parameter that we can show steps called inside composite action (we are using for common local composite action)\n+1/n+1/n+1/n+1/n+1/n+1/n+1 https://github.com/orgs/community/discussions/21276/n+1/nstill waiting for this/n"
    },
    {
        "title": "Github actions workflow not triggering with tag push",
        "url": "https://github.com//orgs/community/discussions/27028",
        "upvotes": "1078",
        "tags": [],
        "rections": 33,
        "replies": 13,
        "comments": 11,
        "body": "I have a workflow with 2 actions. The first action is triggered when a push is made to the branch and pushes new git tag and the second action is triggered when after a new tag is pushed. However, the second action is not triggering lately even though the tags are being created and pushed into git tags by the first action. Anyone else facing the same issue?/nDo you have two workflows, one with an action to push new tags and the other be triggered by tag creation ? Which token do you use in the first action to create new tag?/nThanks a ton! It worked\u2026/nIs there any possibility of this changing?\u00a0Adding a PAT to every repo in our organisation is not a good option for two reasons:/nIs this still a known problem? I\u2019ve got something similar going on, where one action creates a development release tag, and a second action creates packaged executables for releases, but the second action is never run. My releases/tags do have myself as the author, and not the bot./nIt\u2019s still by design, see Using the GITHUB_TOKEN in a workflow:/nThanks for the reply! I should have been a bit clearer. I do use a custom authentication token for the push to push the tag, say master-dev (see the workflow at betty/tag-dev.yml at d86e925add3fba3bb46837ed1065a226fe09b914 \u00b7 bartfeenstra/betty \u00b7 GitHub), but only when I push master-dev from my local machine, does the release package workflow run (betty/publish-windows-exe.yml at d86e925add3fba3bb46837ed1065a226fe09b914 \u00b7 bartfeenstra/betty \u00b7 GitHub). I\u2019ve been staring at this for a while, but am unsure what\u2019s missing./nA such limitation is \u2018by design\u2019 ?\nWe are setting up a manual workflow for our releases to avoid manual mistakes.\nHow this workflow is able to schedule builds, packagings and deployments on the tags and branches it creates ?\nUsing a personal token is not an acceptable answer as personal token are not scope to an organisation. I don\u2019t want to setup a token on an organisation that is able to do actions on another one.\nCreated technical accounts to do git push instead of the GIT_TOKEN is a security breach and a mess in term of maintenance./nUsing a personal token is not an acceptable answer as personal token are not scope to an organisation. I don\u2019t want to setup a token on an organisation that is able to do actions on another one./nThanks, it works.\nNeed to manage a lot of keys \ud83d\ude26/n2023 and can confirm this still does not work./nAugust 2023. Still not working/n"
    },
    {
        "title": "Show workflow_dispatch input parameters in UI",
        "url": "https://github.com//orgs/community/discussions/49648",
        "upvotes": "551",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 30,
        "replies": 4,
        "comments": 10,
        "body": "Product Feedback/nIt is a rather big gap for such a product to not be able to list which values are used to drive automation. Anybody working at any serious level with GHA will need this and that it is missing really stumps my brain. Is there effort underway to add this? Can I provide such effort myself?/nIt's worth noting that jenkins has this capability/nHaving the same problem. This needs to change, non-reproducible builds are a no-go./nAgreed. Very odd these are not yet visible in the UX./nW00t! Seems like a Table Stake and Quick Win combo to me!/nI need this as well./nIf this is implemend, please, please pleeeeeease also implement the option to declare a value as sensitive, so its value isnt leaked this way. thanks./nThis seems like basic functionality.  We'd like to see the input values that were used to run a particular instance of a workflow./nSomething a bit more subtle: you can start the workflow with a step like/n"
    },
    {
        "title": "Github Actions Docker login",
        "url": "https://github.com//orgs/community/discussions/25520",
        "upvotes": "485",
        "tags": [
            "Actions"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 17,
        "body": "I\u2019m trying to push to docker.pkg.github.com from a GitHub action./nI\u2019m not sure that github.actor is the best choice for assigning the DOCKER_USERNAME value, unless that is always going to be someone with permissions to the package registry for that repository? What is github.actor set to when you get the 401 error?/nI recently tried doing something similar./nI can\u2019t really log github.actor, it\u2019s filtered in the log./nI came to the same conclusion and did the same thing, but I think that\u2019s quite a huge fail. If I want to use GitHub for CI and packages, I expect these services to be integrated. I kinda thought that was the value proposition in the first place: you can do everything in one place. Otherwise both GitHub Actions and GitHub Packages are \u201cYet Another Service\u201d./nTried to do the same thing to get Actions creating Docker images locally - in the hope that having images stored in GitHub might be faster than having to fetch from Docker Hub./nYesterday I\u2019ve tried to run docker login ... with a personal access token that\u2019s working from my laptop and\u00a0 I got this:/nSame problem. This documentation about this is really weak \ud83d\ude26\nFor me do not giving sense to create personal access here if there can be some global access based on access to repository./nStruggling with the exact same thing now. One of the unique selling points for Github actions is seamless integration with other Github services - which is completely absent in this regard./nSame issue. Using GITHUB_TOKEN still results in a 401 when publishing using Github Actions./nThis is a known issue that we\u2019re working to resolve.\u00a0 GITHUB_TOKEN works for publishing most types of packages (eg, npm) but not yet for all.\u00a0 This will work for all types of packages - including Docker - by the time GitHub Actions and GitHub Package Registry is out of beta./nI\u2019ve had success with the following step:/nhttps://github.com/actions/docker\u00a0repo is now a 404. Anyone know why?/nIt has been deprecated for some time and they finally removed it.\u00a0 Docker cli commands can be run directly from all the base images now so it wasn\u2019t needed anymore./nAccording to today\u2019s announcement, GitHub package registry will leave beta on 13 November. Does that mean this issue has been (or is close to being) resolved?/nCan confirm that this works now./nWhen authenticating with the registry inside of GitHub Actions, do you need to provide a username along with the GITHUB_TOKEN? If so how can we do this programatically? Is there an \u201cactions\u201d user/actor and how can we access it? If ${{ github.actor }} is the person who opened a PR or merged, etc. wouldn\u2019t you expect to get auth errors when using a token that doesn\u2019t belong to that actor?/nHello stranger,/n"
    },
    {
        "title": "Cannot pull docker image from Github Package Registry by digest",
        "url": "https://github.com//orgs/community/discussions/25632",
        "upvotes": "477",
        "tags": [
            "Packages"
        ],
        "rections": 1,
        "replies": 1,
        "comments": 16,
        "body": "First build, tag and push an image:/nHI\u00a0@michaelbeaumont,/nWe don\u2019t support pulling an image by digest currently, only by tag./nIt would be great to be notified of when that would be available. Due to this, Google Cloud Run is currently not compatible with GitHub Packages. That forces us to use Google\u2019s container registry./nHi!/nI think this would be a very helpful feature to support. Pulling an image by digest allows you to be very precise about the specific deployment you want. The lack of this feature also means the github registry isn\u2019t compatible with a number of existing tools that assume pulling by digest is possible./nI beleive this is the underlying cause of incompatibilities such as\u00a0portainer/portainer#3192/nAdding on - this makes the Github Package Registry noncompliant with the OCI Distribution spec, and is making buildpacks/pack unable to support publishing to GPR, as mentioned here./nThis makes the GitHub Docker Registry almost useless./n\ud83d\udc4b As noted here in the containerd issue our Docker service doesn\u2019t currently support pulling by digest.  However we have a new service under private beta which does support pull by digest.  The new service also supports the OCI spec which allows for buildpacks etc.  Please reach out if you\u2019d like to participate.  We have been adding users into the private beta over the past several weeks./nHi clarkbw, where do i sign up?/nEmail me.  The containerd issue has the required info./nSo basically if you deploy with Kubernetes and use digests in logic, you cannot use Github\u2019s Registry. Am I understanding this correctly?/nHi @iMerica,/n@clarkbw @iMerica , can you confirm that this new service is active in GitHub Enterprise Server 3.0.4?\nI am seeing a similar issue/nCorrect. @joshbouganim makes a great point. GHE 3.x suffers the same error. The documentation states:/nIs pulling images from the registry by digest available yet?/n"
    },
    {
        "title": "Push from Action does not trigger subsequent action",
        "url": "https://github.com//orgs/community/discussions/25702",
        "upvotes": "415",
        "tags": [],
        "rections": 105,
        "replies": 10,
        "comments": 14,
        "body": "I have an github action which sometimes pushes back to the repository, and I expect this push to trigger another action which configured with \u201con: push\u201d, however this seems to not work. Is this intentional?/nHi Stummi,/nThis helped. Thank you!/nIs there a plan for removing this limitation? Providing a personal access token grants the Action far greater privileges than it needs./nI\u2019m using this same workflow with a second one triggered on pull_request. Even if I use a PAT my pull_request workflow doesn\u2019t run when commits are pushed back to the PR branch. This is an example of my workflow\u00a0https://gist.github.com/xt0rted/d0eac04e15a7cea80aa974a4448defef/nThe comments at https://github.community/t5/GitHub-Actions/Push-from-action-even-with-PAT-does-not-trigger-action/m-p/46293/highlight/true#M6505\u00a0solved my issue./nThis has been driving me CrAzY because it\u2019s not intuitive and hard to find information about. Thank you for the workaround./nit took me hours to find this post./nShouldn\u2019t adding one of these permissions (Workflow syntax for GitHub Actions - GitHub Docs) to the GITHUB_TOKEN and setting it to read be enough now?/nYou can set token argument of actions/checkout@v2 to your generated pat without using ad-m/github-push-action@master and git push it normally./nI know this is a fairly old discussion, but I think it'd be handy to be able to get a PAT for the user who initiated the action (for actions that are triggered via the workflow_dispatch event). Seems like this would provide a better audit trail than a static personal access token of like a \"service account\"./nI'm not sure my configuration is exactly the same as the accepted answer, but I just wanted to post that I created an multi-job workflow that bumped and committed a package.json version number and with concurrency rules, it canceled the current workflow and started up a new one. It did this 3 times until I manually stopped the workflow./nThank you, it took me several hours to find the issue~/nThis is a big issue in our flow, I need to pull my trunk branch into feature branches in my CI/CD if there are changes there, but the pipeline doesn't get triggered because of this. There can be changes in my trunk branch which when merged into feature branch can fail the build, but the pipeline wont get triggered, also using PAT is not the best of options, I want to use default token rather than creating a token and making sure it doesn't expire, securing it, etc/nI have also spent some time debugging this issue. I think GitHub will not allow triggering such workflows to prevent building recursive triggering of actions. The workaround is to use a PAT with the fitting permissions. I have also found this in the documentation s./n"
    },
    {
        "title": "GitHub Actions bot email address?",
        "url": "https://github.com//orgs/community/discussions/26560",
        "upvotes": "362",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 93,
        "replies": 2,
        "comments": 7,
        "body": "I wanted to commit to the repository from within a workflow. Simply running:/n[nvm, readed words wrong]/nThis is an expected behavior. In commits author field, it will not show the black github-actions bot icon, just a gray one. It shows the name you specify in git config user.name./nWould it be easy for GitHub to just assign an email address to the bot account so that commits with that email address would show the bot\u2019s avatar?/nI believe I was able to determine a valid email address to use by copying the format they use for dependabot:/nThe email address suggested by @ericnorris actually works:/nYep! This is amazing. @weibeld +rep to you my dude./nWhen you want to tag  commit  as GitHub Actions then:/n"
    },
    {
        "title": "Add way to define a long string workflow_dispatch input",
        "url": "https://github.com//orgs/community/discussions/12882",
        "upvotes": "338",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 55,
        "replies": 3,
        "comments": 7,
        "body": "I'm trying to add new lines to the string input but the input box is unusable./nThis is good feedback @gabrielmoncea - I'll talk with the team about it and make sure that it is on the backlog./nany updates on this?/n+1\nOur use case is to add changes log / release notes into manual workflows./nCurrently, our workaround is to send \\n as the newline character, and then use echo to paste it to file.\nThis is a step in the workflow:/nHello @ethomson. We are having a use case that requires a multiline string as input. Any updates on this ?/nWould love an update here as well. We're looking to add a changelog field on the fly for workflow runs and a single-line string is not good enough for that./nany update on this? It would be incredibly helpful/n"
    },
    {
        "title": "How do I properly override a service entrypoint?",
        "url": "https://github.com//orgs/community/discussions/26688",
        "upvotes": "289",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 18,
        "replies": 2,
        "comments": 15,
        "body": "I want to define a service in my GitHub action and override its entrypoint by adding arguments to it. How can I do this? Here\u2019s what I\u2019ve got right now that should sum up what I want to do\u2026/nHi\u00a0@carterbancroft\u00a0,/nHi @weide-zhou\u00a0/n@chrispat This seems like a common ask, is it on the roadmap? I think we could support entrypoint+args on service containers similar to container actions/n@dakalethanks for clarifying that, I really appreciate it. Your solution is basically what I wound up doing. Hopefully we\u2019ll see this in a release at some point. Thanks again!/n@dakale I\u2019m also currently hitting a similar issue with services in GitHub Actions./nMy use case is to turn off the fsync to the postgress service for performance optimization./n@ivaylo-bachvarov\u00a0 how about this:/nThis is a great snippet! Thanks!/n@dakale do you know if there are any plans to support this feature? Thanks for mentioning the workaround (building the image yourself with the correct args). I ended up calling docker run in my steps and then manually waited until the service is ready with until ...; do sleep 1; done. Using a service with args would definitely be more obvious and I could leverage service healthcheck which would be a big win too./nPing, this bad boy is 2 years old but I\u2019d also like to have this feature :slight_smile:/nFor what it's worth, I'm also facing inability to customize a command. For context, I'm now facing exactly the same issue with minio as @levrik had a few years back, as seen in this comment: https://github.com/orgs/community/discussions/26688#discussioncomment-3252879/n+1. Would really like to have this./nI ran into this while trying to run tests against Apache Solr, which supports configuration using custom entry points (https://solr.apache.org/guide/solr/latest/deployment-guide/solr-in-docker.html#custom-set-up-scripts) but not by, say, custom environmental variables or a well-known path which we could do with the current functionality./n@chrispat ... it'd be nice to at least mention that it isn't supported in the docs. I ended up here after three hours of blindingly believing it was simple and I was just missing something obvious. I guess the good news is that I now have a way deeper understanding of GHA after that rabbit hole./nRan into this with the same postgres fsync use-case here, being able to override the command'd be a good addition!/n"
    },
    {
        "title": "Mysql service never comes up healthy in action",
        "url": "https://github.com//orgs/community/discussions/27021",
        "upvotes": "282",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 12,
        "body": "At some point in the last couple weeks, the mysql:5.7 service config I was using to expose mysql to my action stopped working. Here\u2019s the config I\u2019m using:/nHi peburrows,/nAwesome, thank you! That seems to have fixed it./nJust for future reference for others that might run into this issue. I had an action that setup a postgres and a redis service. This was what the service code looked like in my main.yml:/nI just had same issue with postgres 11, running fine for weeks then today:\u00a0 \u201cFailed to initialize, db service is unhealthy\u201d.\u00a0 Just started about an hour ago.\u00a0\u00a0\u00a0\u00a0 This is only thing I found on web that discusses this.\u00a0\u00a0 Adding the env part worked first time!\u00a0 Thank you very much!\u00a0\u00a0/nSame here, my postgres container stopped working, this fixed it. Thanks!/nHey can you show the changes you have done on script? thanks/nThat fixed the container step, but in my rails db:prepare step, I was suddenly getting an issue about a missing postgres password./nThank you! This resolved my issue./nIt seems that github actions no longer passes the job:env to services, and that you have to replicate the service env vars./nAnother happy postgres user whose CI action mysteriously stopped working and found this thread. Thanks for getting me running again!/nI\u2019d tried all of the suggestions here, but still received the same error./nHere's what worked for me:/n"
    },
    {
        "title": "Permission Denied \"exec entrypoint.sh\"",
        "url": "https://github.com//orgs/community/discussions/26891",
        "upvotes": "261",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 5,
        "body": "I have recently created an action which utilises Join\u00a0to send notification to devices. The\u00a0action repository\u00a0is based off\u00a0Pushover\u00a0which has some values changed./nThe runner is trying to run your entrypoint.sh as a script, but it looks like your entrypoint.sh is missing the execute bit.\u00a0 You\u2019ll need to add it to that file in your action\u2019s repository./nRan the command and it\u2019s now working as expected. Thank you so much for your help. I will definitely read up more about the additional paramters for the git add command as this is the first time I\u2019ve seen the argument used. Thank you once again./nThis didn\u2019t work for me unfortunately. In GKE i still get an error that says/n@sef1995 I had the same problem (on Windows) fixed by converting .sh files to lf (instead of crlf)./nEndings of statements for .sh file and Dockerfile (if you are using) should be LF instead of CRLF. Also  make sure you add #!/bin/bash\nin the starting of your .sh file to make it a linux file./n"
    },
    {
        "title": "Pass Configuration Variables to workflows triggered by a pull request from a fork",
        "url": "https://github.com//orgs/community/discussions/44322",
        "upvotes": "258",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 64,
        "replies": 7,
        "comments": 14,
        "body": "Product Feedback/nHi, I face the same problem today.\nDependabot doesn't have access to Configuration as well, see #44088. Everything happens as if the restrictions for the Configuration Variables were the same as for the Secrets.. However, as mentioned in the description of this \"Product Feedback\", they are non-sensitive./nThe pull_request_target event can be used for scenarios where variables need to be available in a forked PR. This event runs in the context of the base of the pull request, rather than in the context of the merge commit, as the pull_request event does./nI fully support the restriction on Secrets. But please make Variables available to public Pull Request Workflows!! \ud83d\ude4f\ud83c\udffe\nVariables do not contain sensitive data by definition, and thus should be publicly accessible from anywhere or any Level.\nThe Argument regarding Organization Variables doesn't really make sense to me, since they actually should be visible./nAt the very least, the Variables documentation needs to be updated to mention that variables are not available to pull requests. I spent an hour reviewing docs and debugging why variables were not appearing in my PR actions only to find an obscure reference in this discussion./nThis took me lots of time to figure out that the variables are not available for pull request scope. And +1 to the opinion that it makes this feature useless./nFFS, please fix this. What's even the point of variables instead of secrets when they are not accessible in PR runs. Or just give us a goddamn setting whether a variable should be accessible or not.../nI was recently excited to think of using org-level variables to define the versions of Python all of octoDNS's CI jobs should run against so that we can avoid ~30 PRs ever time active versions change. I went through and implemented a setup that does exactly what I wanted/nThis issue has been frustrating me for months.  95% of my workflow runs are triggered by pull requests from forked repos and I have no way to get CI control info without having a file in the repo, which isn't safe, or making a REST call to retrieve a file from some other location, which isn't convenient.  I don't understand why there's no facility to do this.  If you've got something secret, it should be in secrets./nI have this exact same issue. :(/nJust spent an hour trying to figure this out as well. I have a CI pipeline that works fine when I do PRs from the same repo. But then someone submits a PR from their fork and neither the environment variables nor the repository variables expand properly and it breaks. I don't understand how to support other people submitting PRs from their forks without this feature./nIf forks cannot inherit repository variables from the upstream repository, then repository variables are broken by design. Why do they exist?/nThis is ridiculous and makes us reconsider using GitHub for alternatives, since the forks system is the reason we choose GitHub originally/nUnfortunately, the current behavior of configuration variables limits the ability to perform proper checks when creating a pull request from a fork. This is certainly not an ideal situation if we consider any workflow that uses forks./nIs having variables as part of environment and using specific environments for jobs a good workaround for this?/n"
    },
    {
        "title": "Possible issue with Actions",
        "url": "https://github.com//orgs/community/discussions/77211",
        "upvotes": "236",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 10,
        "replies": 4,
        "comments": 27,
        "body": "Question/nfaced the same issue, no action is triggered/nSeeing the same behavior/nSeeing the same issue./nsame behavior. Also had issues running the checkout@v3 action/nSeeing the same thing. No workflows are being triggered./nSeeing the same issue./nSame issue here, I just posted a question about it, glad its not just me/nAlso seeing this issue, some work flows not being triggered./nSame issue here/nI've been trying for more than 15 minutes, Github needs to inform us about this occurrence/n\"Is there currently an issue with GIthub actions? I checked the status page and all is green there but none of our builds are being triggered after a push.\"/nSame issue, no actions is triggered/nSame issue here/nSame issue/nSame issue here for branch pushes but it's looking like tag actions are triggering ok./nFacing the same issue - no action firing on any of our repos/noh i'm not alone :)/nsame issue here/nyup, same/nIt seems to work when you manually trigger a workflow./nthe service has apparently been reestablished for me/nit works/nLooks as GH is looking into the issue: https://www.githubstatus.com/incidents/dsb3kn1zfdl7/nI guess its working now, atleast my workflow just worked on push. FYI this issue was only for self hosted runners not with the github runners./nIt was the same issue for me. Now, it's working. Using standard/default runner./nI'm still having isssues. Cloning the repo is taking a lifetime!\n/nI'm experiencing the same thing on tag events and pushing commits/n"
    },
    {
        "title": "Use docker images from GitHub Package Registry",
        "url": "https://github.com//orgs/community/discussions/25235",
        "upvotes": "233",
        "tags": [
            "Actions",
            "Packages",
            "Question"
        ],
        "rections": 3,
        "replies": 1,
        "comments": 16,
        "body": "I joined GitHub Actions and GitHub Package Registry. According to\u00a0Solved: Github Action Build Caching - GitHub Community Forum, we can skip docker build step for using GitHub Actions. GitHub Actions v2 can pull the docker images that are published on Docker Hub now. Can GitHub Actions v2 pull the docker images from GitHub Package Registry? Is this on the roadmap?/n> Using packages in Actions/nI\u2019m not sure how this solves the issue. Can you please show an example action wherein you are pulling a container image from a public GitHub Docker registry?/nGitHub team is implementing it now./nWe got this to work by simply using the Docker CLI to do this./nThat\u2019s good but a little complex. I hope that we can use docker images from the Package Registry with the uses: statement./nYeah, I agree. My current fix comes with a pretty big performance penalty, so it definitely is not ideal./nNot requiring an auth token to install a published package makes the feature significantly less useful and impossible to use in the way that I wanted: a Docker GitHub Action that uses a container image from the GitHub Package Registry as the base in a FROM statement in the Dockerfile for my action./nHas something changed here? I\u2019m trying to use a Docker image from a different (public) repository to test my code, I\u2019d like to use it from the registry so I don\u2019t have to build it everytime, since it takes quite long./nHow is this still not solved? Two major \u201cefforts\u201d from GH that don\u2019t actually work together?/nNot being able to use images built on a previous step in a uses statement made me think that I could workaround it by pushing it to GitHub Package Registry. Seems like I was wrong./nToday, we still cannot use a Docker image from GitHub Packages in a uses: statement./nThat\u2019s only true of public images in GCR and Docker Hub though, right?/nThe GitHub Container Registry announced today looks like their answer to this issue. It allows anonymous read access and it looks like it could provide more control for managing packages, though it\u2019s accessed by a ghcr.io/<user_or_org_name> address./nI came here to figure out how to use my built image as the action but the solved answer didn\u2019t provide that info. I believe this is the relevant documentation on how to use an action that is a built docker image./nI had a action that use the container registry:/ndocker.pkg.github.com is deprecated, see Working with the Docker registry - GitHub Docs. Use ghcr.io instead as described there./n"
    },
    {
        "title": "Managing Actions storage space",
        "url": "https://github.com//orgs/community/discussions/26542",
        "upvotes": "228",
        "tags": [
            "Actions"
        ],
        "rections": 0,
        "replies": 1,
        "comments": 10,
        "body": "On https://github.com/organizations/my-org/settings/billing I can see that our organization is using 2.5 GBs (out of which 2 would be free). I also see these warnings:/nAfter reaching out to support I got the following response:/nIt is now possible to delete artifacts manually./nDo you know if there is a setting to change this value?/n\u201cVisit a build\u201d? What is meant by this? The term build isn\u2019t really used anywhere in GitHubs vocabulary.\u00a0/nOur team has created an Action to periodically clean up old artifacts:/nThere isn\u2019t one at the moment but we created an action to solve this, see the accepted solution: https://github.community/t5/GitHub-Actions/Managing-Actions-storage-space/m-p/51291#M8134/nActions -> Select a run in the list -> Select a job on the left side/nHey! What do you mean by old artifacts? The one before the previous builds artifacts and releases right?/nIs there a way we can find out which artifacts are using the most space?/n/n"
    },
    {
        "title": "Allow reusable workflows to be located at arbitrary locations and be local",
        "url": "https://github.com//orgs/community/discussions/9050",
        "upvotes": "216",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 54,
        "replies": 17,
        "comments": 8,
        "body": "Although the documentation does not specify the limitation, it seems that reusable workflows must be located in .github/workflows. Moreover, specifying the version is necessary. Therefore, it is not possible to have a reusable workflow in the current branch./nIn another community thread, @jenschelkopf shared that they're working on something similar to this:/nHi @umarcor and @PathogenDavid, we just released the ability to reference a local reusable workflow: https://github.blog/changelog/2022-01-25-github-actions-reusable-workflows-can-be-referenced-locally/nHello, sorry for the bump, any updates regarding this?/nIs this available in GitHub Enterprise, and if so - what version?/nI can confirm that as of today we still need to put reusable workflows into .github/workflows and nowhere else. I don't see why it was implemented that way, because we already need to give the exact path to the workflow file in the jobs uses segment. An explanation from GitHub would be much appreciated./nIt would be great if we could do something like:/nWell, I stumbled upon a seemingly stupid restriction: reusable workflows, if located in an external repository, cannot be located in a repository called \".github\". I say this is stupid, because it would seem natural to place code common to all repositories within an org/user inside the special .github repository./nMy use case is that I have a subrepo (like a submodule but better) for a lot of shared code. I would like to be able to reference reusable workflows by arbitrary relative path to get the version that's in the shared subrepo. At the moment I have to use the repo link and remember to update the {ref} when needed./n"
    },
    {
        "title": "Support global environment variables",
        "url": "https://github.com//orgs/community/discussions/25758",
        "upvotes": "212",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 18,
        "body": "It would be great if variables from the job matrix are made available as environment global variables. This would simplify setting the compiler when working with C/C++ as we could do the following:/nWe have an update coming to the language to enable you to sepcify an ENV: key at the job or workflow level.\u00a0 With that you will be able to do the following:/nWhile this would definitely be an improvement, this approach is limiting when we only want to set an environment variable in some parts of the build matrix./nTo give a more complete example, we can look at reproc\u2019s CI which I\u2019ve finished porting to Github Actions: https://github.com/DaanDeMeyer/reproc/blob/master/.github/workflows/main.yml/nQuestion.\u00a0 Would this allow the envvars at the job level to be set based on dynamic values?\u00a0 My use case involves some logic at the beginning to build up a custom docker image:tag (i know there are built-in actions for this but i need more control) and then I want to reference the image value in subsequent steps to build, push, deploy the image./nCheck https://help.github.com/en/articles/development-tools-for-github-actions#set-an-environment-variable-set-env./nENV vars at workflow level are already working./nYou can set global environment variables like this.\u00a0 It perhaps isn\u2019t the neatest way but it works :slight_smile:/nIts official now the support for Environment variables at job and workflow level. \ud83d\ude09/n@chrispat Great news! Can we add environment variables at workflow level?/n@botellaa\u00a0/nIs there any way to set a variable at workflow level?/n@botellaa wrote:\nIs there any way to set a variable at workflow level?/nOk, sorry I did not explain clearly my issue. I would like to add a variable from an action and get this variable from another job. The goal is to condition another job with it. I am hopping that this new environment variable at workflow level could be used for this./n@chrispatIt seems neither workflow nor job level env variables are available to services, is this by design, and if so what is the reasoning behind this? A clear use case that I\u2019m looking at right now is spinning up a database for tests, and having to specify credentials multiple times./nWe have tried to be careful about how many things we automatically pass into services as different environment variables and mounts can have an impact that is not easy to debug. \u00a0Right now services do not get the entire ENV but we are working on adding a way to access the workflow env through a new ENV context that you can use in expressions i.e. ${{ env.VAR_NAME }}. \u00a0Once this is in place you would be able to define the value once and just pass it in where you need it./n@chrispatThat sounds like a good trade off, and I also understand and agree with your reasoning around env and services. Any idea on when something like that might be available? (ballpark if it\u2019s in a few weeks or not until next year is fine with me)./nIt should be out before GA in November./n@botellaa Have you been able to achieve the desired goal?/n"
    },
    {
        "title": "Ability to change a run name dynamically (after the run starts)",
        "url": "https://github.com//orgs/community/discussions/69476",
        "upvotes": "210",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 17,
        "replies": 0,
        "comments": 6,
        "body": "Product Feedback/nYou can use the run-name element to dynamically set the workflow run name. It is very limited though as it is only able to access the github and inputs contexts./nAlso looking for this feature to add version number to the run name, or other metadata to a run./nIt'd be fantastic if we can use values from reusable workflow's job outputs in the run-name/nIt's a +1 from me too. We can change the build number in Azure DevOps. I hope we can do it the same for run-name in GitHub Actions./nI am really hoping for this too./nIf the run name is immutable for some reason, having some way to add info to the Actions screen (lets say a 3rd line, after the run name and the automatic details 'Some workflow #62: Commit [02db591 pushed by someone' )  would be great/n"
    },
    {
        "title": "Running workflows on dispatch should have their own permission",
        "url": "https://github.com//orgs/community/discussions/49688",
        "upvotes": "202",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 39,
        "replies": 2,
        "comments": 6,
        "body": "Product Feedback/nAdditionally, branch protection is not good enough. If you grant me write access to a repo, I can create my own branch modify the workflow file then run the workflow using my branch./nI'm running in to this issue as well.\nI'm trying to sanely (as in, not what's in GitHub's blog) dispatch a trusted workflow from an untrusted one -- example: PR fork submits a PR -- I want to still give that PR a deploy preview -- and the deploy-preview workflow has secrets -- but those secrets are not available to forks./n@franpb90  and @ecs-jnguyen\nIn the branch protection, there is the following option:\n\nI'm trying to turn my head around if this would solve the issue:/nA colleague mentioned a great idea: triggering a workflow through issues.\nPeople with READ role can create issue. You then parse the content/title of the issue triggering the workflow./nIt is wanted as mentioned in etcd-io/etcd#15659. @franpb90 and @gusmith-ambiata could you please share how it is set up?/nA somewhat convoluted solution I'm going to try the last piece of./n"
    },
    {
        "title": "Allow full workflow to be selected as required status checks",
        "url": "https://github.com//orgs/community/discussions/12395",
        "upvotes": "178",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 31,
        "replies": 7,
        "comments": 6,
        "body": "Currently you need to manually specify each job which should block merging per repo in Github Actions CI.\nThis is time consuming and frustrating. We're working around this by having each workflow contain a wrapper job which needs every other job and checks the status of each of its' needs. i.e. :\n\n/nThanks for the feedback @finolacahill - this makes a lot of sense. As the number of workflows and jobs grows, so too does the complexity here in managing them. I'll make sure that this is on the backlog for us to investigate./nThis would be particularly useful to have where job names are expected to change now and then, for example in a matrix testing with different versions of a dependency and the version to the matrix job name for clarity./nGreat suggestion./nwe just ran into this and are going to workaround it in the meantime by adding a job at the end of the workflow that needs the others called <workflow name>-success and specify this in the branch protection rules./nHi,/nWould love a way to configure the workflow to report as a single check on the PR, rather than one check per job./n"
    },
    {
        "title": "Please allow reusable workflows in private repositories",
        "url": "https://github.com//orgs/community/discussions/9445",
        "upvotes": "173",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 40,
        "replies": 5,
        "comments": 8,
        "body": "According to the documentation:/nThank you for your feedback./nWill this be available for GitHub Team accounts too, or only Enterprise?/nAny update on this?/nWe would be interested in this, too. Especially, because the referenced issue is not about what was targeted / requested here. github/roadmap#74 only states about shared actions, while even sharing whole reusable workflows would be very great and useful./nThis seems to be ready for enterprise: https://docs.github.com/en/enterprise-cloud@latest/actions/creating-actions/sharing-actions-and-workflows-with-your-enterprise/nWhy this is only available for Enterprise, but not Team? ://nIndividual attempting to move from an internal hosted gitlab container instance, to github, however it looks like the feature sets even when comparing against gitlab-ce are not there... Sad as was hoping could utilize github and move away the company repos/configuration, but this an others issues are obvious non starters./nHow does the community vote to unmark an answer given the current answer references a closed issue and this was never actually fixed for private repos? @chrispat/n"
    },
    {
        "title": "Feature Request: Better Workflow view / more options to organize workflows",
        "url": "https://github.com//orgs/community/discussions/45221",
        "upvotes": "155",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 1,
        "replies": 0,
        "comments": 1,
        "body": "Product Feedback/nSee also https://github.com/orgs/community/discussions/53383/n"
    },
    {
        "title": "Actions: Use actions from private and internal repositories",
        "url": "https://github.com//orgs/community/discussions/4934",
        "upvotes": "154",
        "tags": [
            "\ud83d\udee3OntheRoadmap",
            "Actions",
            "ProductFeedback"
        ],
        "rections": 22,
        "replies": 2,
        "comments": 3,
        "body": "It's extremely inconvenient to have to develop actions for your company in a public repository. Quite a lot of security penetration research could be performed just by reviewing the actions an organization is building or reviewing issues/discussions on the action repository./nYou can checkout a private repo with v2 of the checkout action and then load the action from that folder by using a PAT that has access. See source here/nReusable workflows has been released, but the repository still needs to be public./nHi,/n"
    },
    {
        "title": "Don't zip artifact downloads",
        "url": "https://github.com//orgs/community/discussions/38706",
        "upvotes": "147",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "Product Feedback/nIssue actions/upload-artifact#14 might be related. A link to this topic was recently posted there. It would be good if we could also directly open the index.html from an artifact (not only download it). For example, it would be nice if there were an endpoint which could be used to open or download a specific file from an artifact. For example:/n"
    },
    {
        "title": "Github actions and required checks in a monorepo (using paths to limit execution)",
        "url": "https://github.com//orgs/community/discussions/26251",
        "upvotes": "145",
        "tags": [],
        "rections": 13,
        "replies": 2,
        "comments": 13,
        "body": "I have a workflow defined like this:/nI used a hack to achieve what you want:\nI created another workflow with dummy jobs that have the same names with those required jobs that are not always triggered.\nIn case the job is triggered and failed, it still still be push blocking according to required check. If it\u2019s not triggered, then the dummy job will always succeed and unblocks the push.\nI hope GitHub can build some native solution for this./nThat\u2019s a wild hack, lol. Would you mind sharing what your dummy job looks like? Thanks! For example, does it still start the container and have all of that overhead?/nSomething like/nI would not really call such hack a sane solution, but would rather see native implementation skipping checks for pull requests that do not touch paths defined for the action pull request event./nYes, can we re-open this so Github can make a real solution?/nIt may be dicey, but as it stands\u00a0@samchou19815\u2019s method of always triggering the dummy jobs that are named the same as the real jobs appears necessary to enable requiring different checks for different code paths. For example, requiring some tests to pass for changes to one service, but a different set of tests or no tests at all for another service or updates to the docs./nFor anyone wondering, you can do this with the paths-filter action. It runs a job to check which path changed (checkout not needed for this job, which is a plus), then the following jobs will conditionally run or skip. Then you can mark them all as required./nI understand it\u2019s quite an old ticket, but we have actually created a new GitHub Action for this use case./nThis worked great, thank you/nAnything we can do to reopen the conversation about this? It's quite confusing that the hacky solution is marked as an answer and the only other options are actions that overwrite the native GitHub logic./nI ran into this issue now as well when developing a monorepo with different pipelines triggering depending on which parts of the code is touched. It would be useful to be able to configure checks as required only if a pipeline runs/nI want to voice my frustration as well. I don't want to run my E2E tests and other code quality checks if I've updated the documentation.\nThe GitHub documentation that states that the status checks should not be mandatory in this case is absurd, in my opinion. They should be mandatory based on a given set of conditions!/nI wanted to bring up the fact that jobs that use the matrix strategy are a bigger headache, where there's no way to add a check on the whole matrix, the required_status_checks have to be defined on the atomic instantiation of the matrix. I'd like to be able to depend on the whole matrix, and not have to list out every permutation. The \"no-op\" dummy job approach works, but it's a hack AND I have to duplicate my matrix semantics in that job and keep it in sync./n"
    },
    {
        "title": "How to use docker-compose with GitHub Actions?",
        "url": "https://github.com//orgs/community/discussions/27185",
        "upvotes": "1288",
        "tags": [
            "Actions"
        ],
        "rections": 1,
        "replies": 1,
        "comments": 5,
        "body": "Hi!/nGlad to hear you in GitHub Community./nHi Yanjingzhu,/nMan, You saved my life!/nHi, I look at your issue and solution, I\u2019m sure my case is very similar but I\u2019m not working out a solution. The error is almost identical, yet\u2026/nHi, I\u2019ve user curl command to test spring-boot docker deployment like below:/n"
    },
    {
        "title": "re-run jobs",
        "url": "https://github.com//orgs/community/discussions/26001",
        "upvotes": "1078",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 11,
        "body": "Is there a way to re-run individual jobs parts of workflows ? Alternatively is there a way to restart all failed jobs ? Use interface seem to propose only \u201cRe-run all checks\u201d currently/nAt the moment you are not able to re-run individual jobs or simply restart all failed jobs.\u00a0 That feature is absolutely on our backlog to add./nThis isn\u2019t really a solution. It\u2019s just a promise it will be eventually implemented. (So far, it isn\u2019t)./nRestarting whole workflows does not work when the event was generated by external contributor sending pull request./nIt has been more than a year now since this \u201csolution\u201d. What is in your backlog is not a solution, it\u2019s a todo./nseems now it is possible\n/nseems now it is possible/nThis feature is absolutely critical when you have many long-running jobs in a workflow./nIn PyMC3 we use a GitHub action for releasing to PyPI. At the end of the pipeline we test the installation, but sometimes this step fails./nI would like to add that this is absolutely critical. We sometimes have flakes in our workflow. I was in the middle of migrating over from our buildbot CI, when I came across this problem. Looks like we need to stay with buildbot until this is implemented. We have over 30 jobs, some of them running close to an hour./nI think I found a workaround here. I have split my matrix build to multiple yaml files, each one with a different name but the same trigger. Each of them contain only a single run. As it looks, this enables me to re-run jobs individually. I do so by selecting \u201cre-run all jobs\u201d, where \u201call\u201d is now always exactly one./n@rgerhards Your workaround is working! Thanks a lot!/n"
    },
    {
        "title": "Can't trigger workflow manually",
        "url": "https://github.com//orgs/community/discussions/25756",
        "upvotes": "551",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 7,
        "replies": 4,
        "comments": 21,
        "body": "I just saw this blog post. Thank you for implementing this feature./nAccording to your Workflows screenshot, you chose \u201cAll workflows\u201d. Please click on the name of your workflow which with workflow_dispatch  event. In your scenario, please select \u201cAcquire activation file\u201d\nin the left workflows list. Then you will see the \u201cRun workflow\u201d button.\n/nHi thanks for responding, I clicked the wrong entry in my screenshot, but the \u201cRun workflow\u201d button doesn\u2019t appear there./nI renamed the workflow and committed it to a branch, but it doesn\u2019t show up anywhere in the GitHub actions UI./nI tried your examples in my side, the workflow_dispatch event is recognized in Actions tab.\n/nYup, my default branch is \u201cdev\u201d, and the workflow code I posted is in \u201cdev\u201d. No \u201crun workflow\u201d button/nI created a public minimal reproduction. https://github.com/dogboydog/manual-workflow-test/nThank you for the repro. There seems to be a character in front of the name:\n/nAnd yes, that seems to be a bug in our parser, we should report that error. I\u2019ll file an issue for us to take a look \ud83d\ude47\u200d\u2642\ufe0f\u200d\u2642/nAh! Right on. That did it. Thank you!/nI\u2019ve got a similar problem after trying to enable workflow_dispatch here:/nI have the same problem in my repo (private one) where I have several workflows where I added the new workflow_dispatch event. When I click on any of them I see no \u201cRun workflow\u201d button. The syntax in those workflows files seems to be correct but I do no see any button. Moreover in the \u201cFilter workflows\u201d field the workflow_dispatch event does not shows up as pull_request or push do when I want to filter by event./nI don\u2019t have permissions to your repo so it wouldn\u2019t show up for me but I\u2019ve forked the repo and it shows up just fine:/nI am experiencing a similar problem. Concerning new Repos everything works great, all of the event combos. But for existing repositories, the workflow_dispatch does not show up. It is callable via API though./nYes, from that view I do not see the button:\n/n@gitfool @munderseth Thanks for reporting this. We\u2019ve identified the issue and are going to fix it soon./n@cschleiden I guess I might have the same issue but you couldn\u2019t check because I am using a private repo and (even) did not leave the link to the repo. Is there any way you can check what\u2019s going on in my repo? Thanks./nThe fix has now been deployed./nHi @cschleiden thanks for the fix. I have confirmed it works for me concerning the repo I shared./nThe workflow needs to be in the default branch: https://docs.github.com/en/actions/configuring-and-managing-workflows/configuring-a-workflow#manually-running-a-workflow/nHello everybody,/nI have the same problem as @ilhan007/n"
    },
    {
        "title": "Show an explanation for why Actions workflows aren't run on PRs when there is a merge conflict",
        "url": "https://github.com//orgs/community/discussions/11265",
        "upvotes": "485",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 24,
        "replies": 3,
        "comments": 2,
        "body": "I spent a chunk of time trying to understand why my Actions weren't running on a PR. Eventually I realised that it was because Actions aren't triggered on PRs if there is a merge conflict. This behaviour makes some amount of sense as the SHA that Actions uses is the merge commit, not the actual commit on the branch (#github/docs#15302)./nHi @danielcompton - thanks for the feedback.  Your analysis is spot on - if we can't merge the PR then we can't build the merge result.  I'll talk to the team and see how we can make this clearer and we'll put some work on the backlog.  Thanks!/nThis is also a problem when a PR is not going to be merged directly, but will be resolved with a force push./n"
    },
    {
        "title": "Please let us delete old/renamed Workflows.",
        "url": "https://github.com//orgs/community/discussions/70833",
        "upvotes": "477",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 27,
        "replies": 0,
        "comments": 0,
        "body": "Product Feedback/n"
    },
    {
        "title": "Support the secret context in a reusable workflow input",
        "url": "https://github.com//orgs/community/discussions/17554",
        "upvotes": "415",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 43,
        "replies": 2,
        "comments": 7,
        "body": "I'm actually shocked I've got to raise a feature request for something as basic as this for reusable workflows. As it stands for our organisation reusable workflows are almost entirely useless./noutput is supported, the docs make it very unclear. The inability to pass in secrets via an input like in composite actions is atrocious (you're allowed in 1 abstraction but not in another?!?!) but it's not quite as limited as I first thought/nI worked around this problem for a similar docker build reusable workflow./nThat's what should be right. We compilation process requires variables that aren't exactly consistent, and are too cumbersome for a CI/CD platform if they can't be easily passed by the caller./nI would say that composite actions and and reusable workflows are two features that need to have the same functionality./nI would add being able to call its own secrets from the called workflow within the called workflow. At the moment it seems we can pass all secrets from caller to called (secrets: inherit) or more granularly passing the secrets you want to use. But you can't use the called workflow context secrets themselves.\nI do understand the need for security, but there are some use cases where the reusable workflow doesn't do anything critical and you  trust your teams internally. Why Github being so opinionated?/nEncountered the same limitation and truly baffled why its not possible. Reusable workflows seem so rigid and painful at times. I think I  understand they want to limit what secrets the reusable workflow has access to, but this use case isnt uncommon./n"
    },
    {
        "title": "Path filtering does not work for merge_group triggers",
        "url": "https://github.com//orgs/community/discussions/45899",
        "upvotes": "362",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 6,
        "body": "Product Feedback/nWe do something similar, except we have a single workflow that handles skipping for multiple other workflows.  To get around the issue, we run a job to check the paths and then add a condition to the existing workflow based on that.  It does create another job, which adds another status to the PR (which I'd like to avoid) and adds a little time to the workflow./nHitting the same issue here where we're using merge queues in a mono-repo. We are using path filters on pull_request event triggers successfully to ensure we're only running the CI/status checks for the components under change. When we extend this to merge_group triggers to get the required status checks to pass prior to merging for only those components under change we effectively have all our CI running for all our components. There's some irony here somewhere that this doesn't work for mono-repos where contention for merging is going to be at its highest./nWe're also using path filters to determine which workflows to run. However, in our case, when we click the \"merge when ready\" button before our CI workflows have completed, they are bypassed, and the PR is instantly added to the queue./nAny updates here from the GitHub team? are the path filters going to be supported soon?/nAlso running into this issue, had to switch to merge_group because the previous trigger of \"push to .../readonly/...\" stopped working for us today. This is a pretty critical flaw in merge queue at the moment, as we are now being billed / wasting ~10x the minutes/runners etc./nProbably the solution dorny/paths-filter#183/n"
    },
    {
        "title": "GitHub Actions \"release\" trigger should trigger on draft releases",
        "url": "https://github.com//orgs/community/discussions/7118",
        "upvotes": "338",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 7,
        "body": "If you look at https://docs.github.com/en/actions/learn-github-actions/events-that-trigger-workflows#release, you will see that it says \"The release event is not triggered for draft releases\". This is really weird, however, because it has both the \"published\" and \"created\" activity types. \"created\" triggers on any new release, and \"published\" triggers on any new release that is not a draft. There is no reason to have both of these types if you are silently discarding all draft releases. If I wanted to create a workflow that ran whenever a release was published, I would subscribe to the \"published\" activity. The \"created\" event fires when a draft release is created, and yet subscribing to this event doesn't trigger anything in this case? The behavior of the workflow trigger is inconsistent with the releases API for no particular reason./nWould be nice if triggering workflows after a draft release was created.\nIn my case I have a white-label project and multiple customer-specific projects (each in separate repository). I wanted to have a process that:/nNeither this is fixed nor the type description is changed after a year./nSame Our use case is that we have a subset of tests that are expensive and only want to run them for new releases, but we want the tests to pass before we publish the release. Triggering these tests on the creation of a draft release seems like the best way to go about it./n+1 for this. We have a test script that checks if the version specifier hard-coded in a file matches the version being released. It would be really nice if we could run this test when a draft release is created./nIn our case, we release so infrequently that we always need to perform tests of our release pipeline to make sure that things are still working (Something is always broken due to bit rot. You know how software is)./nIt would be nice if this functionality just worked the way you would expect rather than having this weird gotcha./nI don't think the need is to have draft trigger a release, but to get all the build and testing done before publishing./n"
    },
    {
        "title": "GitHub Actions badge is always \"no status\" in some repositories",
        "url": "https://github.com//orgs/community/discussions/14980",
        "upvotes": "289",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 42,
        "replies": 9,
        "comments": 5,
        "body": "I am experiencing this problem in several private repositories of my organization. When I interact with the \"Create status badge\" UI, it always shows \"no status\". The URL generated is/nI'm experiencing the same issue with my public repository: https://github.com/remarkablemark/paccurate/nIs it fixed? \ud83d\udc40/nThe problem still exists. The \"Create status badge\" button generates a link showing \"no status\"/nSame for me... the default is \"passing\" the release is \"no status\"/ni still have the same problem, it used to work, but now it hasn't for some time./n"
    },
    {
        "title": "Viewing Job Outputs in the UI",
        "url": "https://github.com//orgs/community/discussions/10430",
        "upvotes": "282",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 14,
        "replies": 1,
        "comments": 4,
        "body": "Currently, it's possible to expose a set of output values from a certain job using syntax like:/nHi @ashrafgt thank you for your feedback./nConcur.  I want to be able to see job outputs in the UI/nIn the next image, taken from https://github.blog/changelog/2020-12-08-github-actions-workflow-visualization/ I can see a link embedded in the UI (the job's output?), yet I cannot find how to replicate that./nBut it would be lovely to have this done by default unless the output is marked as secret./n"
    },
    {
        "title": "Extend \"on\" with possibility to ignore forks (run only for the original repo) and vice versa",
        "url": "https://github.com//orgs/community/discussions/9098",
        "upvotes": "261",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 22,
        "replies": 2,
        "comments": 2,
        "body": "Hi, I was redirected here from actions/runner#859:/nThanks for opening this here @famod - I've put this on our backlog./nIs this a repository filter - akin to the branches filter?/n"
    },
    {
        "title": "Package not found in the Github Registry",
        "url": "https://github.com//orgs/community/discussions/25211",
        "upvotes": "258",
        "tags": [
            "Actions",
            "Packages",
            "Question"
        ],
        "rections": 3,
        "replies": 1,
        "comments": 16,
        "body": "I have a nodejs workflow and of course I am trying to install dependencies. One of those dependencies is in another repository\u2019s package repo. I have the workflow authenticating just fine, but the problem is that it doesn\u2019t find the package.\u00a0/nAt the moment you\u2019ll need a personal access token for that./nThis issue is still happening regardless whether one uses the GITHUB_TOKEN or the PERSONAL_ACCESS_TOKEN when the repository is Private./nYour .npmrc is incorrect. It should look like this:/nDid you manage to get this working? I am getting the eact same error?/n@krystof-k\u00a0 The instructions I wrote above are mearnt to be sudo code and just a minimum guide on what someone needs to do to reproduce the issue, there are not mearnt to be a copy paste 100% accurate source code. You will have to properly write the variables and so on, but this not the issue here./nFacing the same issue with a private repository, can\u2019t install the package and the assets link to https://notfound.pkg.github.com/. I changed the visibility to public and I was able to install the package.\u00a0/n@wpitalloI am still having the problem, I contacted github support about it and took a week before some guy got back to me and told me that he escalated the issue and have not heard anything since then so I am just waiting for someone from there to respond either on this thread or in the support ticket./nHmm, this is weird. In our repos it works fine (using the PAT). But we\u2019re using Yarn, may that be the reason?/nSince this issue evolved from the original question (and solution), see the new dedicated issue to here: https://github.community/t5/GitHub-API-Development-and/Github-package-registry-Private-package-not-found/m-p/40062//nHi, I had the same problem trying to deploy a private npm package on Github./nnpmrc:\nregistry=https://registry.npmjs.org/\n@myOrganizationName:registry=https://npm.pkg.github.com/\n//npm.pkg.github.com/:_authToken=********** (Token generated from github)/nFor everyone getting a 404 response even though everything seems correct: CHECK YOUR REPOSITORY FIELD./nIts the third quarter of 2121 and this issue still persists. SMH!! Any one of you remember how this was solved? I am having the EXACT same issue/nAs @ankri said, Make sure you generate a Personal Access Token with the appropriate scopes.\n/nI checked every box while generating my PAT just to be sure. But still \ud83d\ude41/nThis (@joekaiser\u2019s solution) was the solution that worked for me. Checking the workflow box allowed install to proceed. What\u2019s strange is that the permission doesn\u2019t describe the situation it needs to be checked for. Github really needs to expand that./n"
    },
    {
        "title": "What are annotations?",
        "url": "https://github.com//orgs/community/discussions/25002",
        "upvotes": "236",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 9,
        "body": "In the email reports when my Workflow fails, I see mentions of annotations, like \u201c$xyz succeeded (0 annotations)\u201d./nAhh, that email is confusing./n@mscoutermarsh any idea when annotations will be supported again? I have a couple actions that need to be migrated to v2 that do this but I\u2019m unable to create annotations with v2 actions. I can run v1 action in a v2 workflow and annotations will be created just fine, but a v2 style action doesn\u2019t. I can create the checks run, but when I try to update it with the annotations I get a 422 response./nI have had some success (kind of) for adding annotations:/nHow can I add annotations to my npm test workflow which I have created?/nI see when my check run is running the status is from \u2018queued\u2019 to \u2018completed\u2019. I dont see \u2018in_progress\u2019. Any thoughts what I am missing ?/nAny update on this, or when the feature might be available?/nCurrent way annotations where implemented seems quite weird for me as I was expecting to be able to create annotation reports on disk which would be loaded by github after the build finished, avoiding the need to perform API calls during build./nAre there any updates on this? I\u2019d like to make some annotations from an action./nAny idea on how can we create links to the annotations. I want to add link to the annotations which is created using check run update API in comments but not able to figure out how can I get annotation id./n"
    },
    {
        "title": "Inherit repo permissions by default?",
        "url": "https://github.com//orgs/community/discussions/30945",
        "upvotes": "233",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 28,
        "replies": 7,
        "comments": 7,
        "body": "Is there a way we can set \"Inherit access from source repository\" by default either organization-wide or as a flag on the creation of a new package? This setting is buried and appears to be unchecked by default even though it's labeled \"Recommended\"./nAgree!\nI don't think it was this way always, because don't recall having this issue when I'd previously used GH packages. Spent a good hour tearing my hair out over this until I found that buried setting.\nAt least being able to set that default at the org level would be ideal IMO/nThis is a very recent change, and applies only to packages created after some date. This is VERY frustrating, as there seems no way to change the default, or to programmatically turn it on./n+1/nIt also seems to be a recent change, as the dozens of NPM packages in my org are just now starting to run into permissions problems because inheritance isn't enabled. The only remedy appears to have an organization admin manually search for and mark individual packages for inheritance, which is tedious and error-prone./n@sanjeevh93 only newly created packages./nhttps://github.com/orgs/{{org}}/packages/npm/{{repo}}/settings/change_active_sync_perms is the url used by github.com when changing this setting, but so far haven't found an equivalent operation in the cli, rest api or graphql ://nWe just had a newly created package that by default inherited permissions and was truly public ... so perhaps they've resolved/changed the default behavior? \ud83e\udd1e/n"
    },
    {
        "title": "Allow GitHub Actions matrix exclusions to take an array",
        "url": "https://github.com//orgs/community/discussions/7835",
        "upvotes": "228",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 43,
        "replies": 2,
        "comments": 4,
        "body": "I have a job in one of my workflows that includes quite a large matrix with a lot of different combinations. I have an ever increasing number of exclude fields but I want to keep everything consolidated in one job./nDitto for include/nHi @alexedwardjones - unfortunately, no, include and exclude do not support specifying an array in this manner, where it would get expanded into its component pieces.  This particular syntax would not be possible, since include and exclude do support specifying an array however, because you can use dictionaries and arrays in matrix definitions./nTo build on @chrispat's suggestion, in multiple Python projects we use dynamic matrix generation intensively, in order to work around GitHub Action's limitations to deal with global variables/env, and for complex matrix/job/task definition./nJust found that issue since I searched for a way of doing multiple include / exclude/n"
    },
    {
        "title": "Why a matrix step will be canceled if another one failed",
        "url": "https://github.com//orgs/community/discussions/27192",
        "upvotes": "216",
        "tags": [],
        "rections": 29,
        "replies": 0,
        "comments": 6,
        "body": "Hey,/nThis is a fail-fast behavior, if one job fails the workflow fails and all jobs are discarded. If you run tests and one fails you don\u2019t need to run more tests, because you already know there is a problem./nThis does not make any sense, especially that am testing the code with two different PHP version./nYou can turn off fail-fast behavior of your workflow see:\u00a0https://help.github.com/en/articles/workflow-syntax-for-github-actions#jobsjob_idstrategyfail-fast/nIt would be great if we could specify matrix configurations that should be allowed to fail. This is useful for a few cases, such as integration testing against new versions of some base framework, WIP support for certain environments, etc. It\u2019s possible to do this by manually controlling success()/fail() checks, but it\u2019s not as nice as being able to define this at the matrix level. Travis\u2019 documentation for their equivalent:\u00a0https://docs.travis-ci.com/user/customizing-the-build/#rows-that-are-allowed-to-fail/nI think (as I didn\u2019t test it yet) you can use Contexts and expression syntax for GitHub Actions for that/nI was able to achieve this with continue-on-error: https://help.github.com/en/github/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions#jobsjob_idstepscontinue-on-error/n"
    },
    {
        "title": "Stop github actions running on a fork",
        "url": "https://github.com//orgs/community/discussions/26704",
        "upvotes": "212",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 37,
        "replies": 4,
        "comments": 11,
        "body": "Hey everyone,/n@jimbob88\u00a0,/nThis worked for my use case, where I only forked a repo to make a PR against the upstream repo.  I have no interest in running the scheduled junk they run upstream./nI fully agree. You should actively opt-in for github actions to run, particularly on forks! Currently I\u2019m struggling with a GHA workflow that is scheduled for a nightly run \u2026 and failing, causing many spurious email notifications for a repo that I just forked.\nDisabling actions completely isn\u2019t an option for me, because I do want to validate my stuff before filing a PR against the main repo./nI landed here because I made a PR to babel and I got an email about an action failing.  I thought my PR had failed, but when I went to it I didn\u2019t see any CI failures\u2026I was confused for a moment before I realized that the github actions were running separately in my fork, and one was failing to publish to their Verdaccio registry because obviously I don\u2019t have permissions./nIt seems you can disable a workflow manually./nFWIW I have 5K+ repos. I cannot go through each of them one by one.... I now found out that there are random jobs running on some of my forks... actions/runner#2063/nDefault should be not to run these things. I only found out months later that Scheduled actions were running daily for ~1h on a repo I forked. Complete waste of resources./nIs there a way to create a feature request for changing the default behaviour to opt-in instead of opt-out \ud83e\udd14? Many people use @BrightRan's workaround (see https://github.com/search?q=if%3A+github.repository+%3D%3D+%27&type=code), but in most cases, I encounter, only a small group of people (core maintainers) want to enable actions on their forks. In contrast, the majority (i.e. the primary users) want them to be disabled. Because of this, I think the opt-in behaviour suggested by others above makes more sense./nThere is another issue: there is a cost attached to running these non-desired jobs : https://docs.github.com/en/billing/managing-billing-for-github-actions/about-billing-for-github-actions/nI just noticed that GitHub already implemented this feature, but it is not clearly documented yet. Currently, when you fork a repository containing actions, you first have to opt-in for these actions to run. You will get a prompt for this the first time you open the action tab./nadd a check in the workflow that tests the repository name/n"
    },
    {
        "title": "Keep workflow artifacts on reruns",
        "url": "https://github.com//orgs/community/discussions/17854",
        "upvotes": "210",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 2,
        "replies": 0,
        "comments": 1,
        "body": "Currently when a workflow is re-run the artifacts for the initial run are overwritten (even if they're uniquely named)./n"
    },
    {
        "title": "How to use env vars or constants in composite actions?",
        "url": "https://github.com//orgs/community/discussions/51280",
        "upvotes": "202",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 16,
        "replies": 13,
        "comments": 9,
        "body": "Question/n@chrispat The question is valid! Setting environment variables in composite actions saves setting them in each calling workflow./nI have the same question \u270b  - Trying to set NPM_TOKEN for one of our customs actions and wanted to define it for every step/nThe composite action should have the environment variable available by default if it's defined in the calling workflow. But I'm also getting the same issue regardless of whether I pass in the environment variable or not!/nI found a partial work around.    Still seems to be a bug or at least an unfortunate design pattern./nI found a working workaround and I did as suggested here:\nhttps://stackoverflow.com/questions/73797254/environment-variables-in-github-actions/n@mildmojo\nIn your first try, the error is saying the 'inputs' are not available at that point in the yaml file. It's not that 'env' isn't allowed at that point. I don't think it sets env variables but that's not the problem you experienced./nThere's no top-level YAML way to declare a variable scoped to a composite action and available in step options, like you can with workflows and the top-level env. \ud83d\ude14 Maybe they'll add it someday!/nHey guys, why it says in docs that we can do it: https://docs.github.com/en/actions/creating-actions/creating-a-composite-action#creating-an-action-metadata-file/nThis is a needed feature; only suitable workaround as I see it, is to use inputs. However, it would be nice with an isolated approach as you propose, as this workaround seem artificial./n"
    },
    {
        "title": "[Feature Request] Add filter/search for workflows list (add indicator for manual workflows)",
        "url": "https://github.com//orgs/community/discussions/53383",
        "upvotes": "178",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 3,
        "replies": 0,
        "comments": 0,
        "body": "Product Feedback/n"
    },
    {
        "title": "unable to render rich display in github problem solved",
        "url": "https://github.com//orgs/community/discussions/41020",
        "upvotes": "173",
        "tags": [
            "Actions",
            "Issues"
        ],
        "rections": 6,
        "replies": 17,
        "comments": 8,
        "body": "Bug/nI'm seeing the same thing \u2014 about 1 week ago, github's rendering of Jupyter notebooks was broken.   Very simple notebooks still render, but lots of notebooks fail, e.g. this file now fails to render updated link:/nI am facing this issue can anybody help me with this?/nI fixed this issue check my page,  change DNS its working.\nhttps://github.com/RukashDG/nGuys to solve this issue everyone needs to change their DNS/nI have started to have the same issue I don't know why I should change DNS settings, is there any comments from @github-staff about this ?/nI think the DNS thing is a red herring \u2014 even @ayrotideysarkar still can't view the link I posted above updated link (which worked fine until 2 weeks ago)./nThe problem seems to be fixed for me: the page I linked above (with an updated link since the repo has changed) works fine for me now./n"
    },
    {
        "title": "API to download artifact",
        "url": "https://github.com//orgs/community/discussions/25345",
        "upvotes": "155",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 13,
        "body": "Is there an API for Github Actions?/nBump as I\u2019m looking for this as well./nHi\u00a0@tuler,/nHi @andreagriffiths11,/n+1/nWe\u2019re working on this now. Rough ETA is 4-6 weeks./nIs the API available now?/nYes, this is now available./nIs there a way to get the latest Run id?\u00a0/nWith, of course, USER, REPO and WORKFLOW adjusted/nThe documentation is wrong. It says everyone with read access can download artifacts, but when I try the examples, it wants admin rights./nThis is great, but no one has updated the main github documentation.\u00a0\u00a0On the page persisting-workflow-data-using-artifacts it says:\nGitHub does not currently offer a REST API to retrieve uploaded artifacts.\nIf you need to access artifacts from a previous workflow run, you\u2019ll need to store the artifacts somewhere. For example, you could run a script at the end of your workflow to store build artifacts on Amazon S3 or Artifactory, and then use the storage service\u2019s API to retrieve those artifacts in a future workflow./n@jpfeuffer I have the same question, documentation says only read access is required but when I run the command, it says\u00a0\u201cMust have admin rights to Repository.\u201d/nBump as I really need this too./n"
    },
    {
        "title": "Workflow Dispatch choice options should allow display text distinct from value",
        "url": "https://github.com//orgs/community/discussions/13372",
        "upvotes": "154",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 35,
        "replies": 6,
        "comments": 1,
        "body": "When using a workflow_dispatch workflow, with an input of type choice, the browser UI for invoking the workflow constructs a drop-down menu containing the specified options. It'd be nice if we could (optionally) allow specifying the display text of each option separately from the value of that option, in much the same way that an HTML <select> element can look like this:/nThis is very useful feedback @philomory. I appreciate it. This request makes a lot of sense and I'll pass this along to the team./n"
    },
    {
        "title": "How to pass environment variable to an input?",
        "url": "https://github.com//orgs/community/discussions/26529",
        "upvotes": "147",
        "tags": [],
        "rections": 10,
        "replies": 2,
        "comments": 9,
        "body": "Hi,/nYou currently can\u2019t reference environment variables as inputs. \u00a0Unless you really want that particular value to be an environment variable I would suggest you set it as an output of the step and then you can reference that output in the input of subsiquent step. \u00a0/nOk it works thanks. But small typo in your solution:/nBtw is it going to be implemented with something like ${{ job.env.NAME }} maybe ?/nI can use global variables as input like this for example:/nIsn\u2019t this transform-env-to-output just an ugly workaround? I want to reference things like GITHUB_WORKSPACE in my input parameters without workarounds or hacks./nYou can now do something like this for passing in env variables./nthis is the best solution. Thanks\u00a0@konradpabjan\u00a0/nMight need to update this answer now that ::set-output is being deprecated https://github.blog/changelog/2022-10-11-github-actions-deprecating-save-state-and-set-output-commands//nI think this question can be interpreted in multiple ways. I found this question while looking for a way to reuse global environment variables, preferably in a consistent way, regardless of if it was done in actions, composite actions, workflows, or reusable workflows./n"
    },
    {
        "title": "Feature request: allow issue_comment event to trigger workflows from non-default branches",
        "url": "https://github.com//orgs/community/discussions/59389",
        "upvotes": "145",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 26,
        "replies": 0,
        "comments": 2,
        "body": "Question/nYes, please.  I'm facing the same situation. We want to implement some rules that interact with github comments, but is only possible to validate after merge the branch to master!/nIt is unbelievable that this is the default behavior./n"
    },
    {
        "title": "Run job only if folder changed",
        "url": "https://github.com//orgs/community/discussions/25669",
        "upvotes": "1288",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 22,
        "replies": 4,
        "comments": 17,
        "body": "Hello,/n@nahtnam,/nThank you! That did the trick, however I\u2019m stuck on another issue. I want my next job (deploy) to wait for database to finish before running, but if database is skipped then run it immediately. Any idea how to do that?/nI found a \u201chack\u201d. I just moved the if statement you provided to every command inside of the database job instead of at the job level if that makes sense/n@nahtnam,/nThat worked, thank you so much! Just wondering, where did you learn all of this? The docs are kind of hard to sort through, so I was wondering if there was another guide or something/n@nahtnam,/nThank you, I think its just a lot of information all in one place so its a little overwhelming. Also I am facing an issue./n@nahtnam,/nMy mistake, thank you so much!/n@nahtnam,\nYou\u2019re welcome. And glad that my suggestions can help you solve the problems.\nIf you have any other questions about this ticket, feel free to tell me./n::set-output name=run_job::false/n@tbhaxor,/nCan try use \u2018paths\u2019/nThere seems to be an off-the-shelf GitHub action that solves this: paths-filter. Example from their README:/nYou Can just use multiple .yml Files in .github/workflows\nthen specify On: virable as you need it/nI'm trying to do it like this but I cannot make it work:/n"
    },
    {
        "title": "Status badges for matrix builds",
        "url": "https://github.com//orgs/community/discussions/52616",
        "upvotes": "1078",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 48,
        "replies": 0,
        "comments": 0,
        "body": "Product Feedback/n"
    },
    {
        "title": "Is there possible to use Git Tags as a choice of workflow dispatch's input",
        "url": "https://github.com//orgs/community/discussions/45871",
        "upvotes": "551",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 4,
        "replies": 4,
        "comments": 4,
        "body": "Product Feedback/nHi, I am working on a similar issue. What you are asking is kinda there today. When you run a workflow, the default parameter is show on right hand side as \"Branch: Main\", click on it, you will see all branches and a tab for Tags. Note I found that tags that were created before the github actions workflow were created are disabled./nIs this still open or please share the script if you find the solution. Basically, we need to list the branches/tags names as a drop-down/list to select to trigger the workflow./nI saw this article on setting up a dropdown in workflow, check if this helps\nhttps://tkolber.medium.com/dropdown-input-choice-workflows-in-github-actions-e95cf140bf61/n@saenyakorn\nare you able to achieve this?/n"
    },
    {
        "title": "Path to action in the same repository as workflow",
        "url": "https://github.com//orgs/community/discussions/26245",
        "upvotes": "485",
        "tags": [],
        "rections": 38,
        "replies": 6,
        "comments": 18,
        "body": "I\u2019d like to explain something I went through as I think the documentation could maybe specify this case a bit more or it could even be a bug (not sure though)./nHi raquelhortab,/nThis issue seems to be related and was something I ran into. Is there any chance get the a real feature?\u00a0/nThe thing is I did add actions/checkout, and it didn\u2019t work. I tried it again today and it doesn\u2019t work if I use a relative path (./.github/\u2026), only when using the whole path (raquelhortab/hello_world_github_actions/.github/\u2026)./nWhen you use relative path,\u00a0 there is no need to specific branch. It will find the path in the Github workspace.\u00a0 Just use next code snippet:\u00a0/nThanks for replying, but what should I use instead of\u00a0@master? If I don\u2019t add any tag it complains./nI think what @yanjingzhu meant was not to use a tag in your action path, like so:/n**bleep**, you meant the tag in the tests step\u2026 I had really not seen it, thought you were talking about the one in actions/checkout@v1. It works now, thanks! However, what about if I wanted to use another branch different from master? where would I specify it? is that the \u201c@v1\u201d in actions/checkout@v1 ?/nIf you want to checkout other branches, you could specify ref of checkout action:/nFor everybody facing this issue, as the official documentation says here https:// docs . github . com/en/actions/using-workflows/reusing-workflows#calling-a-reusable-workflow:/nThe docs for this are utterly useless./nUnrecognized named-value: \u2018github\u2019. Located at position 1 within expression: github.event.inputs.stage .github/workflows/azure-build.yml (Line: 55, Col: 15): Unrecognized named-value: \u2018github\u2019. Located at position 1 within expression: github.event.inputs.stage/nSolution for me was to use a trailing slash:/n-. Your actions yml is in here /.github/actions/automatic-tests/action.yml.\n-. In the Main.yml  want to use it./n@ZhaoKunLong @josegpulido @Yanjingzhu Tagging you since all of you have given detailed answers which resembles closely with my issue./nIf you like me can't read long posts about github actions anymore:/nHi,/nIn case some does the same mistake getting the described error message but above answers do not help:/nFor anyone wanting to know how to run the action in the root (main repo is the action), use this:/n"
    },
    {
        "title": "Treating warnings as errors because process.env.CI = true",
        "url": "https://github.com//orgs/community/discussions/25228",
        "upvotes": "477",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 6,
        "replies": 3,
        "comments": 10,
        "body": "Hey,/ncan you try setting\u00a0/nHey, and thanks for the suggestion./nWait, I think it actually worked. Huh, that\u2019s interesting - why is empty string working but false is not?/nGlad someone else ran into this, I thought I was going crazy when all my deploys quit working./nMy best guess is the downstream tool may check for the existence of the variable (not empty) or might check for \u201c0\u201d instead of \u201cfalse\u201d or something/nSeems to be exactly the issue/nSo what changed ? Did github start setting the CI variable ? is there an annoucement ? It\u2019s not mentionned in https://help.github.com/en/actions/configuring-and-managing-workflows/using-environment-variables#default-environment-variables/nRegarding the \u201cfalse\u201d value, maybe OP had old react-scripts ? Fixed in 2017: facebook/create-react-app@5b38c54/nI ran into the same issue while using  react@17.0.2 and react-scripts@5.0.0 when I updated my git repo, the solution for me was by following the same suggestion the original poster encountered and setting the environment CI = true in Netlify\u2019s Environment variables./nchange it to   CI=false npm run build\nand it will work for sure/n"
    },
    {
        "title": "409 conflict when publishing to Maven package registry",
        "url": "https://github.com//orgs/community/discussions/8021",
        "upvotes": "415",
        "tags": [
            "Actions",
            "Packages",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "We have a multi-module gradle project with lot of projects that we are pushing to GitHub packages Maven registry. It used to work well, but on 18th November it started to fail without any significant changes from our side on 409 Conflict. It seems to be the same issue as described here. From that day on, we are not able to push the project since it always fails on one of the submodule or the other. Is there any way how to fix it from our side? Is it a bug? (And yes, I am quite sure that the version has not been published before.)/n"
    },
    {
        "title": "Do something if a particular label is set",
        "url": "https://github.com//orgs/community/discussions/26261",
        "upvotes": "362",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 3,
        "replies": 3,
        "comments": 10,
        "body": "Hi!/nCurrently, GitHub Actions does NOT support to set labels filter for issues event./nAh, I see, thanks a lot. I played a little with the if conditional and this works pretty well. It looks like that the job produces a \u201cfail\u201d if the condition is not met, right? This would give me an error message/email\u2026 I could add the conditional to each step and get rid of that, but this seems less obvious. Is the described behavior expected and intended?/nYeah, in the past, if all jobs in a workflow were skipped with the if conditional , the workflow displayed as \u201cskipped/no status\u201d status with a grey icon. But now, it displays as failed and will send the notification email for the failed workflow run./nOr you can use:/nThis is a great solution ! We are using this but now if shows a failed workflow instead of just not running it. Do you have a workaround ?/nadd a empty step that just echo some dummy text./nHello!/nHey. I searched for a while, but did not found any solution./nThis is really disappointing - not being able to limit a workflow from running ends up polluting the list of ran actions pretty dramatically, because even if you conditionalize a job it will still show up in the list of actions just with a gray cross over it indicating it didn\u2019t run./nJust to save someone else some time:\nScenario is that I only want to trigger a lint job if the file changed is of a specific extension(our case is golang). The workflow should only trigger if the PR is approved./n"
    },
    {
        "title": "Workflow isn't enabled in repos generated from template",
        "url": "https://github.com//orgs/community/discussions/25659",
        "upvotes": "338",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 15,
        "body": "Hello!/nWe also have a similar use-case that just recently quit working. We create a new Repo via API using a repository template. The template repo contains a workflow. In our case, we typically create the new Repo in a 2nd organization, which can be done using the API./nI\u2019m having the same problem, using GitHub Classroom which makes heavy use of template repositories. All of my students are finding that their tests are now not running, unless they enable actions manually as in the above instructions./n@vromash, @munderseth, @dmusican,/nSometimes, when creating a new repository, you need to manually enable the Actions on the repository via clicking the \u201c Enable Actions on this repository \u201d button./n@brightran Can you clarify what you mean by \u201csometimes\u201d? Again, this is a change in behavior from what it was just a couple of days ago. This is affecting teachers who use GitHub Classroom in a way it didn\u2019t just two days ago, and makes the experience for students more difficult./n@brightran\nAs mentioned above, workflows were enabling automatically at the start of the week. Our project is built around actions and repo generating from template. While it\u2019s not working we can\u2019t continue development./nWhen you click on the Actions tab do you see a button to enable actions on the repo?/nYes, because now they\u2019re disabled by default - which is not something that we\u2019d expect in repositories created from templates.\nPreviously, Actions were enabled - which made the template-based project fully operational./nI\u2019ve raised this issue in the GitHub Education forum as well (see here for the thread). Like @dmusican my use case is education-focused and this change broke our workflow for providing automated feedback to students. It might seem trivial to ask students to push a button, but the workflow is designed around students not having to do that (and add to the cognitive load). I hope GitHub will consider reverting this change, especially considering we\u2019re in the middle of one of the hardest semesters of our lives and are not in a position to help students in person./nSame experience with my classes. The Actions tab shows the state as disabled and has the button to enable. But at the same time going to the repository settings (as owner of the repository) and checking the Actions settings it does not say that the feature is disabled, it says \u201cActions permissions: Allow all actions\u201d./nHello everyone, this issue has now been resolved.  Actions are enabled on template repos now by default.  It was a bug that was fixed that was fixed just now and has been pushed to production./nThat\u2019s great news! Thank you for sharing it, @hamelsmu!\nI can confirm that Actions are enabled by default now in the project created from the template. \ud83d\udcaa/nThanks. I have confirmed that our use-case works now - Repo creation using API with template \u201cacross\u201d organizations. \ud83d\udc4d/nIs this still working for people?/nEvery time i click \"Enable Action on the workflow\"\nI got   Unable to enable Actions for this repository.\nHow do i fix it?/n"
    },
    {
        "title": "Can we increase the GitHub Actions cache size for a repo?",
        "url": "https://github.com//orgs/community/discussions/42506",
        "upvotes": "289",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Question/n"
    },
    {
        "title": "Workflow rendering doesn't work with yaml files",
        "url": "https://github.com//orgs/community/discussions/25015",
        "upvotes": "282",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 9,
        "body": "Hi,/nHi\u00a0@travisgroth,/nHi Andrea,/nThanks for the feedback\u00a0@travisgroth, I\u2019m a product manager on GitHub Actions. This is something we\u2019re keeping an eye on, but we have no timeline for bringing it back right now. Please let us know if you have any other feedback!/nIt might make sense for you guys to get in contact with the folks over on the LinkedIn Learning team and coordinate on an update for the \u201cLearning GitHub Actions\u201d course - almost all of that material is basically useless now./nWould also love to see this come back. A big reason why my team was interested in Github actions over other platforms was this ability to visualize flows./nSo you guys did all that work to create that visual editor AND use it in all the marketing material, only to completely drop it on launch?/nFound this post after googling, after trying to follow Readme from current actions in the GitHub marketplace that all referred to the visual editor. I almost gave up\u2026/nThe only place that talks about this. So weird. I thought I was not able to find it. So it has been removed \ud83d\ude11/nThe visual editor is still shown in all the pages on GitHub -\u00a0https://github.com/features/actions/n"
    },
    {
        "title": "Workflows triggered by the workflow_run event are sometimes skipped",
        "url": "https://github.com//orgs/community/discussions/21090",
        "upvotes": "261",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 19,
        "replies": 5,
        "comments": 10,
        "body": "Hi all,/nSame problem here!/nWe are experiencing the same problem, we are using the exact same condition/nWe started hitting this same issue last week. It turns out that the conclusion field is sometimes empty or null. As a workaround, we added a job to manually fetch the conclusion using octokit/request-action:/nsame issue here!/nsame issue here/nSame issue. I posted it on Stack Overflow and found this thread from the comments. Here's the link to my post for more information on my tests./nPlus one. All workflow_run builds started to fail a few hours ago, and I then noticed that it also happened randomly a few times last week./nsame issue here, started to happen about 7 days ago/nSame issue here./nThis note was helpful./n"
    },
    {
        "title": "Configuring Email Notifications for Workflow Runs",
        "url": "https://github.com//orgs/community/discussions/18039",
        "upvotes": "258",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 5,
        "replies": 7,
        "comments": 15,
        "body": "I would like to Customize my workflow so that my entire team can receive or a custom email (DL) can receive a notification like whether the workflow has completed successfully or not ! As of now the one who is running the workflow is receiving the notification and there's no verified github actions here as well. for more - https://github.community/t/github-actions-email-notifications-for-workflow-failures/176028/2/n+1 for this issue. I have a few scheduled workflows that the whole team should be email about if they fail. Currently only the creator of the workflow gets emailed as specified here -> https://docs.github.com/en/enterprise-cloud@latest/actions/monitoring-and-troubleshooting-workflows/notifications-for-workflow-runs/nCould we get a response from the team here? It is absolutely wild to me that there's no way to properly notify people when a workflow fails. That's one of the most basic features of a CI system./nI don't know about email but there is the rtCamp/action-slack-notify which can send you notifications to slack channels./nThis seems to be a solution: https://github.com/dawidd6/action-send-mail/nI was going to file a similar issue, but found this one. I don't think having an action should be required, this should be part of the workflow definition. An action would require an external SMTP with credentials, without forgetting that some organizations only allow vetted actions for security reasons./n+1 on this.\nIt could even be a simple boolean in the workflow YML that switches \"notify the entire organization about this workflow [instead of just the user that happened to author the last commit when the scheduled run started]\".\nThis could then either be done by sending individual emails to every org member, or assuming that the organization email address is a mailing list, as I assume it commonly is./n+1, this is basic stuff/n+1, this should be the baseline for notifications./n+1/n+1/nWould like to get that feature as well/nThis would be much appreciated indeed. I use GitHub workflows quite often, and being able to configure who gets notified and when would be really useful!/n+1/n+1/nWaiting for this, please share if you guys have achieved this using any different approach/n"
    },
    {
        "title": "Expression syntax for not startswith",
        "url": "https://github.com//orgs/community/discussions/25017",
        "upvotes": "236",
        "tags": [],
        "rections": 7,
        "replies": 0,
        "comments": 4,
        "body": "I have some trouble figuring out the syntax of Github Action expressions, and the documentation is not very clear on this. I know I can run a step only for tagged commits with/nhave you tried\u00a0/nThanks a lot, this worked:/nIf you want to use ! in front of startsWith, you can put whole if condition inside double quotes:/nIt would be useful for GitHub to add an example.\u00a0 I had a hard time finding this./n"
    },
    {
        "title": "Where is visual editor?",
        "url": "https://github.com//orgs/community/discussions/26300",
        "upvotes": "233",
        "tags": [],
        "rections": 4,
        "replies": 1,
        "comments": 10,
        "body": "Hello. I can see visual editor on github actions landing and in some example, but I cannot find it. is it removed or temporarily disabled? If not, how can I find visual editor? Thanks./nThe GitHub web editor supports workflow files, but it has to be an existing file for it to be recognized. Creating a new file through the web interface doesn\u2019t work (yet). So simply open the workflow file you want to edit, click the pencil icon in the top right of that file and the editor will show up with syntax highlighting, autocomplete and such./nSo that currently is not the case anymore or is it? with the workflow/.yml files theres seem to be no visual workflow editor anymore./nPlease correct me if I\u2019m wrong, as I understand, *.workflow files are old syntax, and *.yml is new, right? So is there plan to add visual editor to new syntax? It looks really great on pictures and actions landing itself, so would be great to have it./nwriting in 2020:/nSame problem here. The documentation is messy and not clear about this. You see the visual editor all over the place on the actions page, but when it is time to try it you don\u2019t find any reference about how or where./nIt doesn\u2019t work anymore.\nNo visual editor for me, no matter what I do./nAlso can\u2019t see the visual editor at all. Really disappointing, since it seems like a great tool./n\ud83d\udc4b Hey everyone!  I\u2019m aware of the  workflow editor as well as the recently shipped workflow visualization./nFor anyone who is looking for interactive visual editor for workflow file:\nthis might be helpful: GitHub - cschleiden/github-actions-hero: \ud83d\udea7 Interactive tutorial and visualizer for GitHub Actions workflows \ud83d\udea7/nYou can take a look at https://www.actionforge.dev/ for a visual editor of GitHub Actions in VSCode./n"
    },
    {
        "title": "[REQUEST] Adding branch filter to delete trigger in github actions",
        "url": "https://github.com//orgs/community/discussions/10589",
        "upvotes": "228",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 30,
        "replies": 6,
        "comments": 13,
        "body": "Github action supports a delete trigger to kick off workflows.  It is very useful for cleaning up resources deployed via temporary deployments.  In the same way that the push trigger supports a branch-based filter, it would be an awesome feature if the delete trigger also supported filtering based on branch name./nHi @logyball thank you for your feedback./nPlease done this feature. I need it :D/nI need this feature too.\nthis will help us a lot/nYes, this would be ideal! Just wondering where on the roadmap this enhancement is? @chrispat/nhas this being done already? \ud83d\ude4f/nI also need this!\nWe have dynamic environments based on specific branch names. The workflow for destroying the infrastructure of these branches is triggered using on: delete. But now it triggers on every branch deletion. I have to use if statements on every step to prevent them from running for non-matching branches, and it ruins our workflow runs history./nAlso it is currently hard to discover that on:delete does not yet support a nested branches object/nI am using GHES 3.5./nBut the workflow run still is present in the history. It may confuse when you delete a lot of Pull Request branches/nI also need this feature and if-statement is not working for me. I need to trigger workflow on the deletion branch with a specific name, but it's skipped every time/nI would also suggest removing the limitation where delete can only be triggered after the workflow is merged into the main branch's code. You cannot first test your workflow before merging into main./nHi @chrispat . This feature is not in docs(and vscode's gh actions extention warns me), but it worked well....... \ud83e\udd14\nhas this being done already?\n(I'm using GHES 3.9)\nnever mind. it was just server issue/nHi @Howu48! Could you please share your configuration of the job? I tested this feature in the non-Enterprise version of GitHub and it did not work as expected.\nHere is my test config:/n"
    },
    {
        "title": "Secrets in matrix",
        "url": "https://github.com//orgs/community/discussions/26302",
        "upvotes": "216",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 65,
        "replies": 3,
        "comments": 6,
        "body": "The above yaml file causes the following error./nIt seems that the values of matrix parameters should be specified only with actual values, and can\u2019t use variables (secrets, environment variables)./nYou can define the Secret name in your matrix configuration and then dereference it in the Steps using array notation. This is what ours looks like:/nWe\u2019ve tried this exact same construct but in a env block instead of with and it doesn\u2019t seem to resolve the secret\u2026/nMagic! :slight_smile:/n@daveespo you save my day! tks./n@daveespo thanks!/n"
    },
    {
        "title": "Manually modify GITHUB_RUN_NUMBER for workflow",
        "url": "https://github.com//orgs/community/discussions/26709",
        "upvotes": "212",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 12,
        "replies": 4,
        "comments": 10,
        "body": "The GITHUB_RUN_NUMBER is currently a nice way of having a build number on your builds. I\u2019m using it to build up a semver like 1.2.3-alpha.{number}. Unfortunately this number resets if you change the workflow name and in some other scenarios.\u00a0/nHi\u00a0@mscoutermarsh\u00a0/nIt would be very useful if we could run a one-time operation to set the current run number for the repo. I am migrating our CI/CD pipeline from bitrise. Since we published releases using the bitrise build number, it becomes troublesome to go \u201cback in time\u201d and using a build number that was already used. I imagine others will have similar problems as they migrate from another system./nWe are currently migrating from Travis, this feature request would be a wonderful thing \ud83d\udc4d/nThis would be an amazing feature to have. On other build systems (e.g. TeamCity) we can edit the \u201cnext run number\u201d which lets us do this kind of thing. Having the build number that GH displays in the actions view match up with the build number we put in our binaries would be so handy./nI just published an action that does what most commenters seem to want. It lets you add a base number to the GITHUB_RUN_NUMBER. I use it to tag docker images and can\u2019t have the number reset. So I just have to update the base number in the workflow when I edit the workflow./nI was too very surprised that the github.run_number depends on the workflow name./n@mscoutermarsh is this issue resolved yet?\nIt's 2023 and we are still awaiting this feature \u00af_(\u30c4)_/\u00af/nperhaps by adding two numbers?\nhttps://github.com/orgs/community/discussions/25386/nHello!\nIs there any update in 2024? I faced the same problem during migration from another CI/CD tool. In the current system, our build/run id is a crucial thing and we have to maintain the same increment order instead of starting anew./nWe using auto incremented build number on CI for each build. I think its very common approach on many platforms. As well managing run_number is common functionality for any build system. Could you please provide it for GHA in 2024 as well./n"
    },
    {
        "title": "Error \"workflow was not found\" for local reusable workflow triggered by \"pull_request_review\"",
        "url": "https://github.com//orgs/community/discussions/14306",
        "upvotes": "210",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 3,
        "replies": 4,
        "comments": 3,
        "body": "Local reusable workflows return the following error when initiated from another workflow that was triggered by a pull_request_review event:/nI am getting the same error when I use the only the workflow is triggered by pull_request_review as @dannyskoog  said above. If it triggered by other events (i.e tagging event), it doesn't shows the same error./nI've been getting the error parsing called workflow repeatedly for 2 days now. It comes and goes.\nI'm referencing a local workflow (private repo) with the uses: ./.github/workflows/myresusable.yml reference./nI get the same error on a push event whilst the the pull_request event in my case succeeds/n"
    },
    {
        "title": "Missing documentation on GitHub Actions badges",
        "url": "https://github.com//orgs/community/discussions/27129",
        "upvotes": "202",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 7,
        "body": "I see some GitHub repos and many other repos are already using the GitHub actions badges./nThere\u2019s docs on it now here: https://help.github.com/en/articles/configuring-a-workflow#adding-a-workflow-status-badge-to-your-repository/nWhat is the best url pointed by the badge?/nWhat about private repos?/nHi @randy3k,/nIs there a GitHub Action up easily to add a new event type/status?\nI would like to show a build number, they are generated in the workflow./nThis link doesn\u2019t point to documentation on badges any more, afaict. Maybe this is the right link now? https://docs.github.com/en/actions/managing-workflow-runs/adding-a-workflow-status-badge/nIf I\u2019m not wrong, the documentation doesn\u2019t say anything about the fact that the badge can be created by the web interface: navigate to a workflow, click on the \u201c\u2026\u201d and select \u201cCreate status badge\u201d./n"
    },
    {
        "title": "Trigger workflow on push-tag event to a specific branch",
        "url": "https://github.com//orgs/community/discussions/13226",
        "upvotes": "178",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 6,
        "replies": 4,
        "comments": 2,
        "body": "We currently use the push-tag event as a trigger for the release pipeline as follows/nAFAIK, from git perspective, the tag has nothing with the branch but it's a pointer to a particular commit regardless of the branch (which is another pointer to another commit) so it's probably not straightforward,/n@ethomson thanks for the reply,\nThe tag<-->branch info can be gathered by git branch --contains <tag-name> which returns all branches containing the given tag./n"
    },
    {
        "title": "repository_dispatch not triggering actions",
        "url": "https://github.com//orgs/community/discussions/26022",
        "upvotes": "173",
        "tags": [],
        "rections": 3,
        "replies": 1,
        "comments": 8,
        "body": "I do have a separate branch where I\u2019m currently playing around with actions. Since I need to trigger actions externally I wanted to make use of the repository_dispatch event (https://help.github.com/en/articles/events-that-trigger-workflows#external-events-repository_dispatch) which seems to be right choice - but sadly I can\u2019t get it to work./nDefinitely something missing from the docs: the repository_dispatch only triggers on the master branch./nWhich makes it useless for anything branch related. So most of the CI related things \ud83d\ude15/nWhile I agree this is uselss and very annoying. It is annoying because you must pollute and directly work on this CI command in master to test and develop\u2026 It can still benefit you because you can checkout certain branches on any given CI command:/nCheck out the checkout action docs:\u00a0https://github.com/actions/checkout#Checkout-a-different-branch/nI was planning to put my docker image qualification into a workflow that I could call from either a pull request or on a release; neither of which would execute from master.\u00a0 Is there another way to trigger a workflow from another workflow on a pull request or release (tag-based href) build?/nThis limitation effectively means that we can only use a single branch - master - for releases./nHas there been any progress on this?/nGitHub actions token has a restriction that means it cannot trigger workflows./n"
    },
    {
        "title": "Multiple event triggers with config",
        "url": "https://github.com//orgs/community/discussions/25595",
        "upvotes": "155",
        "tags": [],
        "rections": 1,
        "replies": 5,
        "comments": 5,
        "body": "I want to run a given workflow both on push and based on a cronjob./nWhen you want to specify properties for the events you need to specify as a map instead of an array./nWhen I try the accepted solution, the workflow editor seems to think the syntax is invalid [for having a string inside the yaml mapping vs a key with a trailing colon] (see screenshot)./nYou can use/nEven though I\u2019m a little late on this one, but yes/nbut something like/n"
    },
    {
        "title": "Cancel other jobs in GitHub Actions workflow when one job fails (fail-fast across workflow)",
        "url": "https://github.com//orgs/community/discussions/38361",
        "upvotes": "154",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 17,
        "replies": 13,
        "comments": 7,
        "body": "When executing the same job on multiple runners in a matrix, we have the fail-fast option that cancels all instances of the job when one fails. Is there something similar that works across jobs in a workflow? I.e. if you have multiple jobs in a workflow, and one fails, cancel the other ones?/nIf the jobs are order dependent then you can have them depend on each other. job 2 won't go without a successful job 1. Check out the snippet below to get an idea./nWhile I still don't think there's a built-in way to do this, apart from doing the API call directly (which is simple enough), you can use the Cancel Workflow Action for failed jobs or Cancel this build actions. However, I don't think either of them are actively maintained anymore./nA conditional on this action works pretty well! https://github.com/marketplace/actions/cancel-this-build/nI would also really like this feature - we have a pipeline that runs a lot of things in parallel - some jobs have dependencies, others do not. Here's a sub-set to illustrate:/nIn case it's useful to anyone, we've ended up working around this using a post-job script in our self-hosted runners. More about those here: https://docs.github.com/en/actions/hosting-your-own-runners/running-scripts-before-or-after-a-job/nI found this solution https://github.com/andymckay/cancel-action.\nHope it makes easyer our lifes./nWe've trying it like this:/n"
    },
    {
        "title": "Github Container Registry Packages lists the architecture unknown/unknown when manifest attestations are present",
        "url": "https://github.com//orgs/community/discussions/45969",
        "upvotes": "147",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 2,
        "replies": 3,
        "comments": 5,
        "body": "Bug/nappears to be a UI bug in GitHub Packages/nTake a look at docker/build-push-action#755. I was seeing the same issue. Pinning the build kit sorted it/nFor images with an attestation, ghcr also does not display metadata \u2013 to me, this is actually more annoying than the additional unknown platform./nIf it's UI bug then I still have it in Jan-2024. And BUILDX_NO_DEFAULT_ATTESTATIONS: 1 didn't help to avoid unknown/unknown.\nMy config:/nAny updates (solutions or workarounds) on this matter?/n"
    },
    {
        "title": "success() returns false if dependent jobs are skipped",
        "url": "https://github.com//orgs/community/discussions/45058",
        "upvotes": "145",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 80,
        "replies": 4,
        "comments": 8,
        "body": "Bug/nI created a repository to reproduce this issue./nI created a GitHub Support ticket and got a reply today./n#45058 (comment)/nI'm having similar issues. A job with if-condition always() && !contains(needs.*.result, 'skipped') gets skipped even though that expression evaluates to true. always() && !contains(needs.*.result, 'failure') on the other hand works as expected. Here's the sample workflow file that I made to test:/nPlease change this bonkers behavior/nPlease fix this, it doesn't make sense at all. Thank you!/nSince I struggled with some weird behavior (and not only with the success() function), I wanted to share a result table of the check functions./nHere's my way to check if all jobs in the needs have succeeded/n"
    },
    {
        "title": "Error: refusing to allow a GitHub App to create or update workflow",
        "url": "https://github.com//orgs/community/discussions/35410",
        "upvotes": "1288",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 22,
        "replies": 14,
        "comments": 9,
        "body": "Hello,\nI have a weird behaviour on GitHub workflow. I have a workflow that:/nI'm having this issue as well/nYou need to grant the workflows permission to your GitHub App./nFor those who come across this issue here:\nI had the same problem. The usual answer I read everywhere was to add token: ${{ secrets.GITHUB_TOKEN }} in the with section of the checkout action. However that didn't work for me.\nThe solution for me was the following: My workflow got triggered by a repository_dispatch event that came from a different repository. And in that case the GITHUB_TOKEN in the with section of the checkout action was not enough. I had to create a personal access token (PAT), give it the permission workflow, and put that into the with section./nHey @lktslionel have you found a solution to this?? I've been stuck here for a week now, I tried different things and none seems to work/nSorry for the misinterpretation, but the following is only for permissions that use tokens generated automatically by GitHub Action./nThis is pretty high up when searching for the error message, and some of the answers are outdated. As of today (November 2023), I think this is correct:/nFor me, it turns out that my CI (in my case prettier) was trying to modify other .github/workflows files, so if that the case for you, try ignoring .github folder in .prettierignore./nIf you are using Github CLI, you need to re-auth with the correct scope -> gh auth login -s workflow and you are good to go./nI am not even modifying a workflow file, yet I still get this./n"
    },
    {
        "title": "Run Workflow (Urgent)",
        "url": "https://github.com//orgs/community/discussions/42164",
        "upvotes": "1078",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 2,
        "replies": 0,
        "comments": 12,
        "body": "Bug/nSame issue here./nI'm getting the same issue.  Can't load the Run Workflow dialog, and get 404/nSame issue - this is preventing our deployments.  Definitely an urgent issue \ud83d\udea8\ud83d\udea8\ud83d\udea8/nplease, ASAP.. manual input workflow blocks business process./nSame issue/nSame issue.  We are blocked from deploying code until this is resolved./nThis is also reported here: https://github.com/orgs/community/discussions/42166/nAlso experiencing this and preventing deployment./nSuggestion for those blocked:\nTemporarily set your workflow to run on a schedule instead of manually running it. Use a UTC time value 5 minutes from now or something like that./nSame error here.../nhttps://www.githubstatus.com/ - it seems the status is updated now, expecting this to be fixed quickly./nThe issue is resolved now - https://www.githubstatus.com/incidents/3y3y8nnbyt2d @mweel1/n"
    },
    {
        "title": "Github Actions on push not master",
        "url": "https://github.com//orgs/community/discussions/26039",
        "upvotes": "551",
        "tags": [],
        "rections": 2,
        "replies": 2,
        "comments": 13,
        "body": "I am trying to figure out what the syntax would be for running a workflow, on push, on any branch but master. I read through some other posts here that looks like folks are having issues with the tag filtering, so maybe this is related?/nTo answer my own question, the syntax appears to be:/nI\u2019ve found that putting quotes around !master works, but I\u2019m not sure if it\u2019s technically correct:/n@arpanlaha\u00a0@csumpter\u00a0/n@arpanlaha\u00a0@intolerance\u00a0/nLeading bangs are reserved for custom tags in YAML. So you need to always use explicit strings./nYou need quotes when the branch/tag starts with a ! or *.\u00a0/nThank you @jeremyepling.\u00a0I see that docs have been updated on https://help.github.com/en/articles/workflow-syntax-for-github-actions to reflect the same./nDoes not seem to work for me. \ud83d\ude26/n\u00a0Works perfectly! Thanks a lot./nFor anyone where the solution is not working. This happened to me:/nSimilarly to the problem that @verbruggenalex highlighted, the double ** will work as well:/nThanks for this, hopefully this can be marked as the solution instead of what I had previously./nUsing branches-ignore from the official docs:/n"
    },
    {
        "title": "Who has permission to workflow_dispatch",
        "url": "https://github.com//orgs/community/discussions/26622",
        "upvotes": "485",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 8,
        "replies": 0,
        "comments": 9,
        "body": "I couldn\u2019t find anything in the docs about this./nI believe anyone with collaborator or greater can do it, however, you can also add an if statement to check who the github.actor is./nHi @lpoulter,/nYou can check who is triggering the workflow:\n    if: github.actor == 'lpoulter' || github.actor == 'kingthorin'\nor\n if: contains('[\"kingthorin\",\"lpoulter\"]', github.actor)/nWhat would stop some with write access to repo from modifying the CI yml to add themselves to the list of users who can trigger the workflow_dispatch action?/nNothing. But if you don\u2019t trust those that have write access there would seem to be different/bigger issues./nBranch protection might work. Maybe I should open a new issue/post but I\u2019ve got an action that costs $ to run so I\u2019d like for admins to be the only ones to be able to run it so I\u2019d like to prevent those with only write privileges from being able to accidentally running it. Granted changing the yml is no accident but I just like to put as many engineering controls possible in place to prevent mistakes./nHey @kingthorin\nIs there a link you can share for the enhancement request? We\u2019re looking exactly for this functionality.\nCheers/nSadly I don\u2019t have a reference. It was submitted via the feedback form and I never heard anything further./nI created this discussion Running workflows on dispatch should have their own permission from what I think is a good solution./n"
    },
    {
        "title": "Protecting .github/workflows",
        "url": "https://github.com//orgs/community/discussions/25236",
        "upvotes": "477",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 20,
        "body": "Hi all,/nThose are the old docs for workflows based on HCL. You should look at the docs for the new YAML workflows because a lot has changed.\u00a0https://help.github.com/en/categories/automating-your-workflow-with-github-actions/nThank you @jeremyepling\u00a0/nHi,/nOK. I\u2019ve ran few tests. It seems like you first have to make sure you have a workflow that is looking at non-master (or whatever protected branches you have) to be able to run on them./nLet\u2019s say we have a deployment workflow that uses a secret key stored in github secrets. Can\u2019t a dev with write-access make a branch off master, create a new workflow that runs on push to their custom branch, utilize the secret key that gets passed in, and trigger a deploy? How do you protect against that?/nYou cannot create a branch, add a workflow in that branch and have it trigger on that branch if it's not already merged to master(or default) which is great.\u00a0/nI don\u2019t know how to deal with this situation./nI\u2019m on the same boat. I have a public repository that anyone can fork and submitted PRs to and right now anyone can change the .github/workflow files as they please and it\u2019ll get executed just fine. With GitHub-owned runners that is less of a concern but with self-hosted runners this is a major security flaw./nAs is already mentioned in prior comments, this question should not be marked \u201cSolved\u201d./nI think and agree with @bittelc\u00a0/n@jeremyepling this issue is very much not resolved today. Here is one example of how the protection around the .github/workflow files are not sufficient. As @mallozup said:/nI have opened an issue to runner repo regarding this:/nHi Everyone,/nThe app has been released./nHey there,\nany news here because the missing security features is causing some workarounds for us in our project. Does everyone has a good way of prevent specific roles or users to edit the workflow file and so get access to the repo secrets?/nHi, so what is the conclusion. I just set up Github actions to deploy to firebase\nhttps://firebase.google.com/docs/hosting/github-integration/nPerhaps PR/test and master/prod should be handled differently./nHey everyone, have been any updates on this or is this still an issue?/nPossible workaround is to use OpenID connect with reusable workflows and external secret storage like Azure KeyVault. If you deploy directly to the cloud you may need no secrets at all./nI opened a feature request that would solve this and seems fairly simple to implement, see https://github.com/orgs/community/discussions/53430/n"
    },
    {
        "title": "Add Deprecate Action capability",
        "url": "https://github.com//orgs/community/discussions/12564",
        "upvotes": "415",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 1,
        "replies": 1,
        "comments": 3,
        "body": "When deprecating an action, there is an option to deprecate the inputs with inputs.<input_id>.deprecationMessage, but there is no option to deprecate the entire action and notify the user of it./nVery much needed for positive project and service managment/nThanks for the feedback @em-c-rod - I can see how this would be useful. I'll make sure that this is on the backlog./n@ethomson Any news on this? As a platform developer on a platform team writing actions used by multiple product teams in various combinations, we would love a better developer experience when communicating to teams which actions they should stop using going forward./n"
    },
    {
        "title": "Github Action trigger on release not working if releases was created by automation?",
        "url": "https://github.com//orgs/community/discussions/25281",
        "upvotes": "362",
        "tags": [
            "Actions"
        ],
        "rections": 10,
        "replies": 4,
        "comments": 13,
        "body": "I\u2019ve been working on some workflows that automatically build & release my application using Github Actions./nI found the solution with help from\u00a0@ethomson on twitter. The thing I changed is instead of passing in the default GITHUB_TOKEN you have in your secrets during a workflow I\u2019m using my personal PAT token./nThank you for this, I feel like this should be a bug\u2026/n@github is this expected behavior?/n@nkt as you see in my answer\u00a0@ethomson\u00a0(who works for Github) mentioned that this is how they designed it (see tweet link above in my answer)/nSuboptimal from the users perspective \ud83d\ude41/nComing from the hell of Jenkins and Gitlab CI, I\u2019ve discovered the new depths of hell I didn\u2019t even think were possible./nWell this is a surprise. For anyone else who\u2019s wondering, I granted the repo permission when generating the personal access token in order to create a release within a GitHub Action:/nGitHub prevents workflows from running on events that were caused by other workflows to prevent unlimited recursion (See the docs: Triggering a workflow from a workflow)/nYeah, this was exactly my experience with Microsoft support: stupid, uncooperative, will rigmarole you with unhelpful replies until you just give up./n@wvxvw That's rather harsh. It would be much more productive to give constructive feedback instead of insulting Microsoft. While I don't agree with everything Microsoft does and I was surprised to see that I had to create a personal access token to trigger the on.release.created event, I also appreciate the contributions they make to the open source community and free developer tools. I also understand that I have a choice not use their services if I don't want to and you do as well. You may want to consider exercising that option./nSo ... \"on release\" doesn't mean \"on release\", it means \"on manually created release\"./nThis is a very unfortunate behavior, as workflow_run does not allow some common use cases. My example:/nThanks for this, it took me forever to figure out./n"
    },
    {
        "title": "Support deployments for multiple packages in a monorepo context",
        "url": "https://github.com//orgs/community/discussions/38092",
        "upvotes": "338",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 11,
        "replies": 1,
        "comments": 3,
        "body": "In Github Actions there is the environment configuration at the job level, that can be used to use environment secrets and creates a Github Deployment in that environment./nThis is great documentation on using jobs. There is a flag for needs:, which can be used to set jobs that depend on each other. If the jobs don't depend on each other, you can always setup multiple actions with multiple yml files and utilize the security/secrets flow to pass the env vars. Hope this helps!/nWe have this exact same problem./nThis would also be useful if you're deploying the same component multiple times in a single environment, for example, if you build the component and then deploy it to multiple regions using a matrix job. The different regions aren't really \"different environments\" (prod-us-west-2 and prod-eu-west-1 are still both \"production\"), so it'd be nice to be able to distinguish them while maintaining a single \"environment\"./n"
    },
    {
        "title": "Don't run actions on draft pull requests",
        "url": "https://github.com//orgs/community/discussions/25722",
        "upvotes": "289",
        "tags": [],
        "rections": 20,
        "replies": 4,
        "comments": 20,
        "body": "I am trying to set up my workflow so it doesn\u2019t run when opening/synching/reopening pull requests that are marked as draft./njobs.<id>.if is broken currently, that\u2019s why you get \u201cfail\u201d instead of \u201cskip\u201d status./nAh, okay. So if I just leave it as-is and they fix the issue it won\u2019t be a problem?/nYeah, if you don\u2019t mind extra notifications. I\u2019m not touching mine waiting for a fix - beauty of betas :]/nI can confirm that this works for me now:/nBecause of this, I have found a better way for myself./n@viktorianer\u00a0/n@wipe2238\u00a0/n@julioromano\nCould you provide your configuration? Because, it should work. We use it in our configuration and it is working very well./n@viktorianer\u00a0/n@julioromano\nThank you./nSorry brainfart :slight_smile: I edited it./n@julioromano I think it is not working because you have these two lines here,\u00a0which is not what I suggested.\u00a0/nI tested it, still not very practical : it would run action once after undrafting or review request, but not for further pushes on the PR (e.g. when the reviewer asked changes and the developer pushes them)./nJust invite the reviewer again (small refresh button next to the name). It is not really good, but works. Unlike other things./nIt seems to me that you should just use both:/n@natario1\u2019s solution works very well! Thanks!/nThis would be a simpler solution/n@chenrui333 nope, your simpler version won\u2019t work, see the official notes:/nYou can add an additional job that fails if pull request is a draft to prevent the bypass problem:/nUsing the following trigger options worked for me. You have to first open PRs as Draft but whenever you turn it Ready for review CI workflows will be executed./n"
    },
    {
        "title": "Limit runtime?",
        "url": "https://github.com//orgs/community/discussions/25631",
        "upvotes": "282",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 4,
        "body": "I had a test that hung and I got a notification that it was killed after 6 hours./nHere you go https://help.github.com/en/articles/workflow-syntax-for-github-actions#jobsjob_idstepstimeout-minutes/nYou can add\u00a0timeout-minutes:\u00a020 to your job:/nIf I have many repos and each repo has many actions, it will be very difficult to apply this setting manually on every action. Is there an org level setting, so that the Org Admin can set it and it will get applied for each action in each repo belonging to that org? That way, the Org Admin can control it for all the repos from a central location./nIndeed, it would be really great to have control about the Github Actions timeouts at the organization level, while still being able to override them on per job basis. Or maybe a general hard limit, for the whole organization and/or repository. The number of minutes consumed by a job affects billing directly, so the organization has to be able to enforce some limits there. Currently, a single mistake in a job, causing it to hang for example, can cause the exhaustion of all the available minutes./n"
    },
    {
        "title": "Have the $CI environment variable set by default",
        "url": "https://github.com//orgs/community/discussions/26628",
        "upvotes": "261",
        "tags": [],
        "rections": 1,
        "replies": 0,
        "comments": 7,
        "body": "Many continuous integration services like GitLab and Travis-CI have the $CI environment variable set in their execution environments. Some tools such as Python pipenv for example will check for the presence of the $CI variable and automatically configure settings approriate for a CI runtime environment./n+1/nWe already have GITHUB_ACTIONS, GITHUB_WORKFLOW, GITHUB_WORKSPACE, GITHUB_SHA, and about a dozen of others to make sure we\u2019re running under GitHub, so this part is covered IMHO. Only CI is missing :slight_smile:/nThanks, CI would still be good./nThere\u2019s two distinct values here.\u00a0 GITHUB_ACTION is the name of the action that\u2019s running, if any (and there may not be one).\u00a0 GITHUB_ACTIONS is always set to show that you\u2019re running within GitHub Actions./nThanks for clarifying. Please could you add GITHUB_ACTIONS to the the docs?/nYes, an update is coming soon.\u00a0 Thanks!/nSeems this is done!/n"
    },
    {
        "title": "Skipping a matrix job hangs the Pull Request when inner-matrix jobs are required status checks",
        "url": "https://github.com//orgs/community/discussions/9141",
        "upvotes": "258",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 17,
        "replies": 4,
        "comments": 9,
        "body": "Originally posted by @minut1bc at actions/runner#952 .../nThanks for the feedback - obviously there's a lot of considerations that we need to make when we think about required status checks, as many people really expect required status checks to really be required and that not running them (even due to configuration) is not sufficient.  We'll have to think carefully about any changes, but it's definitely something that we'll consider.  Thanks again./nIt would be nice if we could end a job early with a specified conclusion (e.g. skipped). That way, instead of requiring an if condition for each step, we can check a condition early on in the workflow and end early./nWould it be possible to handle this at the branch protection level, by allowing users to define the conditions of their branch protection? Instead of assuming it's always \"success\", how about allowing us to override that by allowing \"success\" or \"skipped\" for a given workflow requirement? In my situation, I see required jobs stuck in pending status because some of their steps were skipped, even though all the steps that did run were successful./nOne way to solve this problem that would also provide additional flexibility is to execute the strategy before the if for the job (instead of the other way around like it is now) and then execute the if once for each matrix entry.  This way, the if could refer to ${{ matrix.os }} to provide the ability to have things like this:/nAnother way to work around this currently is to use a dummy collector job that depends on the matrix jobs.  Then in your branch protection rules just set the dummy collector job as required.  When the matrix jobs are skipped so will the collector job and the protection rule will be satisfied.  When the matrix jobs are not skipped then the collector job will only run and pass once all matrix entries for each job in the collector job's needs list succeed.  I'm currently implementing this to skip build and test jobs for documentation-only changes./nI just ran into this issue when I wanted to skip certain jobs that use a matrix if no related files were changed. If the job is run, it has the name build (17) and when it's skipped the check is called build (entire job is skipped, matrix is not evaluated). This makes it impossible to require either of them easily. The current workaround of collecting the individual results in another job is not ideal, since it clutters the check window on PRs unnecessarily./nI'd agree the current if evaluation for the matrix is done too late in the game, spawning matix jobs just to skip the steps. Then the jobs result is basically incorrect. IMHO this problem should be treated as a bug to fix, not a new feature to provide./n++/nactions/runner#662 would be another way to solve this (where you could exit a workflow early but successfully)/n"
    },
    {
        "title": "GITHUB_SHA not the same as the triggering commit",
        "url": "https://github.com//orgs/community/discussions/26325",
        "upvotes": "236",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 66,
        "replies": 6,
        "comments": 8,
        "body": "Hi all,/nHi\u00a0@ibiqlik\u00a0,\u00a0/nAh missed that detail, thanks for pointing it out for me./n@yanjingzhu/n\ud83d\ude06 what doesn\u2019t make sense? That I want the SHA of my commit instead of merge commit on PULL_REQUEST event or the shell code?/nSorry, your code helped me actually haha\nMy comment was for this weird behaviour/nI can confirm that ${{ github.event.pull_request.head.sha }} works as well!/nI want to have one workflow for both: push and pull_request events. So how can I get the proper SHA of the last commit that works for both these cases?/nSomething should have been abstracted out.  This feels like implementation detail leaking into variables that had extremely intuitive semantics./n"
    },
    {
        "title": "Actions cache size limit for mono repos",
        "url": "https://github.com//orgs/community/discussions/66699",
        "upvotes": "233",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 2,
        "body": "Question/nWould love to have a bigger cache size for our monorepo as well, as 10 GB is simply way too small. A single build already uses approximately 1 GB of cache. Last time the cache size was increased was back in November 2021, perhaps it's time for another increase?/nSame, we have to build a bunch of dependencies and are hitting our limit, which means 4 minute builds have become 45 minute builds, and also that a bunch of work that went into making fine-grained use of caches to save compute time doesn't end up helping, because the caches get evicted. \ud83d\ude2c/n"
    },
    {
        "title": "Enable environments for private repositories without Github Enterprise subscription",
        "url": "https://github.com//orgs/community/discussions/16952",
        "upvotes": "228",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Right now environments are only available for public repositories and private ones with a Github Enterprise subscription./n"
    },
    {
        "title": "Action showing permission denied",
        "url": "https://github.com//orgs/community/discussions/26239",
        "upvotes": "216",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 31,
        "replies": 7,
        "comments": 7,
        "body": "I had many environmental variables so I used to gpg to encrypt those variables in a file./nThat most likely means that your ./.github/scripts/backend_decrypt.sh script doesn\u2019t have the \u201cexecute\u201d filesystem permission set. I assume you\u2019re developing on Windows locally, which doesn\u2019t have that kind of permission system./nThanks a lot @airtower-luna\nThis solved it/nThank you so much! This solved the issue for me too! Any tips on how to do this by default on a Windows machine for bash scripts?/nAny tips on how to do this by default on a Windows machine for bash scripts?/nThanks @airtower-luna\nThat fixed it for me/nThis one worked very well for me too, thanks/nHi guys, how about ubuntu?\nI am trying to ssh to AWS EC2 but my deploy.sh is permission dennied/n"
    },
    {
        "title": "Workflow run with an environment is not always a deployment",
        "url": "https://github.com//orgs/community/discussions/5463",
        "upvotes": "212",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 9,
        "replies": 0,
        "comments": 3,
        "body": "From https://docs.github.com/en/actions/reference/environments#referencing-an-environment:/nWe have the same use case: we would like to run terraform plan using environment-specific secrets without this being registered with GitHub as a deployment. A simple solution that would work for us would be to have a boolean jobs.<job_id>.environment.deployment to toggle whether a deployment should be created. Usage would look like:/nYeah the deployments view is kind of useless when every other action, dependabot included, shows up as a deployment when it most definitely is not..../nDuplicate discussion: https://github.com/orgs/community/discussions/36919/n"
    },
    {
        "title": "Composite workflows should support timeout-minutes",
        "url": "https://github.com//orgs/community/discussions/50481",
        "upvotes": "210",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 35,
        "replies": 0,
        "comments": 0,
        "body": "Bug/n"
    },
    {
        "title": "Remove \"Deploying to <environment>\" text GitHub Actions",
        "url": "https://github.com//orgs/community/discussions/40898",
        "upvotes": "202",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 24,
        "replies": 2,
        "comments": 9,
        "body": "/nHi there @dil-kpogany and welcome to our community! Thank you for the feedback!/nThis is really misleading and it must be possible to remove or change it./nAgreed. Alternatively, please let us customize the message./n+1/n+1/n+1/n+1/n+1/nIs your problem similar to this? People are waiting for decoupling deployments from environments for ages now. I kind of stopped believing it will happen at all./n"
    },
    {
        "title": "Actions failed to push to Github packages",
        "url": "https://github.com//orgs/community/discussions/32265",
        "upvotes": "178",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 31,
        "replies": 2,
        "comments": 1,
        "body": "GitHub Actions build that uses a http://ghcr.io container has started failing with denied: permission_denied: read_package. We have permissive access for our GITHUB_TOKEN and haven't changed anything recently.\nWe discovered this problem at 7:30 yesterday and submitted a ticket. The result was that it took 5 hours to respond, and 8 hours to fix it.\nStarting at 7:10 today, we have the same problem again!/nAlso experiencing this issue. Seems similar to last night's incident(s)./n"
    },
    {
        "title": "Set environment variable based on git branch",
        "url": "https://github.com//orgs/community/discussions/25301",
        "upvotes": "173",
        "tags": [],
        "rections": 3,
        "replies": 0,
        "comments": 8,
        "body": "Hi community,/nHave you considered just rendering the yaml files using a template and a small script? then whenever you make changes to the workflow you do it to the template and rerender/nDid you try to use/nThank you @bomb-on and @ssboisen, I just took another look at the docs and found a syntax to set ENV vars that persist between steps:/nHi @mklappir, I\u2019m doing the same thing pretty much already, as I\u2019m reading from github.ref, which is pretty much the same as GITHUB_REF. Extracting the part after the last slash is a neat trick, but the endsWith macro serves me just as well./nSolution above works, but is being deprecated:\n/nIf you use PowerShell then this should do the trick:/ngitgub.ref_name and $GITHUB_REF_NAME has the information you need without having to use endsWith()/nFWIW, ref_name appears to be a recent addition. It was certainly not available at the time when endsWith was suggested./n"
    },
    {
        "title": "sudo apt install fails with Failed to fetch http://security.ubuntu.com/... 404  Not Found [IP: ...",
        "url": "https://github.com//orgs/community/discussions/26649",
        "upvotes": "155",
        "tags": [
            "Actions"
        ],
        "rections": 6,
        "replies": 2,
        "comments": 7,
        "body": "See e.g. the latest build:/nTry sudo apt update before installing./nmy problem solved. thx u so much/nThanks Alot <3/nNow, its\u2019 working\nThanks/nthis still works and u are my savior/nResolved this in docker by running:/nNice!! Thanks for adding the additional option @steveipkis + welcome to the community forum :slight_smile:/n"
    },
    {
        "title": "Unexpected Git error on GitHub Actions: RPC failed; HTTP 408 curl 18 HTTP/2",
        "url": "https://github.com//orgs/community/discussions/55820",
        "upvotes": "154",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 40,
        "replies": 38,
        "comments": 19,
        "body": "Bug/nI you want to have a look to the complete logs: https://github.com/scalastic/scalastic.github.io/actions/runs/5008728644/jobs/8976906598/nWe have the same error here:\nhttps://github.com/SoftInstigate/restheart-website/actions/runs/5013979152/jobs/8987705668/nSame here:\nhttps://github.com/aminvakil/aur/actions/runs/5009690513/jobs/8988928436#step:11:177\nerror: RPC failed; HTTP 408 curl 18 HTTP/2 stream 7 was reset/nHaving the same issue/nHaving the same issue/nHave tried a number of things to get around this issue but nothing seems to work. I though maybe the repo was to large, but reducing the size and trying again hasn't had an impact. This action has been working many times a day for months with no issue, until yesterday... not sure how to address short of just completely rewriting the workflow, but even then I'm not sure the same thing still won't happen./nHaving the same issue, changes to one specific file fails to push everything with the same error mentioned in the main discussion, if you revert that file change it git push works, so there is definitely something going wrong./nExact same issue since recently +1/nIn our case, the workflow has been running for months without any issue and the last successful execution was last week on May 12th 2023. So, I think the problem can't be the content of our repository, which has not changed significantly over the last year, but definitely some recent modification of the execution environment of the GitHub actions.\nYesterday I also opened a ticket with Github support, but I have not received any feedback so far./nSame issue recently +1\nworkflow did run for month./nIs github going to be this way or is this a bug? Is there an official response regarding this mater?/nSame issue since recently, waiting for an official response./nI just got this error on my system as well, seems it's not related just to GHA./nI made a brand new repo specifically to try avoid this frustrating bug that seemingly is only effecting some repos. Github let me make 1 commit, but no more after that./nThanks for the fix @Jason2866\nI have incorporated it into my own fork./nThe same issue is preventing packages from being packaged on @archlinux./nFrom yesterday the issue is disappeared from my GitHub action and now it is working as normal. Are you experiencing also the normal situation again or the git on the GitHub runners works occasionally (sometimes good and sometimes bad)?/nI assume this means we can remove the below fix work-around then?/n"
    },
    {
        "title": "project_card support on projects (new)",
        "url": "https://github.com//orgs/community/discussions/62113",
        "upvotes": "147",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 8,
        "replies": 6,
        "comments": 6,
        "body": "Question/nWhen will this be available? Really need it for my team./nI'm eager to implement this feature in our team as well, which automates the assignment of testers when a specific status change occurs in GitHub Projects./nHoly cow, did GitHub really disable Classic Projects but not update Actions to support V2? I just ran into this and it completely breaks our team's SDLC automation.../nSame issue here! We need a hook for this automation!/nTake my upvote for this one, this is such a basic trigger for automation./nThis is already available in Enterprise, so it is possible. The coding job is done, GH just needs to make it available./n"
    },
    {
        "title": "When a Github Actions workflow fails, can I notify multiple recipients via email?",
        "url": "https://github.com//orgs/community/discussions/43415",
        "upvotes": "145",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 15,
        "replies": 0,
        "comments": 5,
        "body": "Question/nI have similar requirement. Were you able to solve this issue?/nAny updates on this ?/nI need this too./nThis feature was required even nowadays!\nNotification settings an option to put all teams or manage this on repo settings.\nThis information is very importante to leads and devops teams to solve issues and track activity./n+1, multiple people work on pipelines/n"
    },
    {
        "title": "Debug logs for the if condition of skipped jobs",
        "url": "https://github.com//orgs/community/discussions/20640",
        "upvotes": "1288",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 12,
        "replies": 3,
        "comments": 5,
        "body": "Coming from:/nMy jobs are being mysteriously skipped even though I'm sure the if condition should evaluate to true. I have debug logging turned on but the only information the GitHub UI gives me is:/nI made an emulator for GitHub Actions, which shows you debug output of job level if conditions.\nhttps://github.com/ChristopherHX/runner.server\nYou might be able to use it for troubleshooting issues with job level if conditions, I'm unaware of compatibility issues with job if conditions compared to the official GitHub Actions Services./nI struggled with this for a few hours. Everything seemed like the if conditional on my \"test\" job should have evaluated to true, but the job was always being mysteriously skipped. For me, it had to do with how I set and accessed the should_run variable being used in the job's if conditional. Here are some examples of my failed and working configs:/nI'm disappointed that this has not been prioritized by the GitHub Actions team when it's a feature Azure DevOps Pipelines had half a decade ago./nI think its really bad practice to require users to modify the actions with additional jobs just to debug why a job was skipped. It makes the process really slow since you now need to go through code review process, just to debug, and you may potentially break the action for other users in the process. Being able to see why a step was skipped directly when running the action would speed up development a lot. Especially since github actions can be complex and powerful, the debugging tools need to reflect that./n"
    },
    {
        "title": "Feature request: Shell script as type of action",
        "url": "https://github.com//orgs/community/discussions/26031",
        "upvotes": "1078",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 8,
        "body": "In short, the ability to write actions using shell script as well as todays node and docker./nHi @judoole,/n@judoole wrote:\nI find the commiting of the node_modules a bit cumbersome and makes the repos bloated./nLikewise, lots of hoops to jump through just to run some simple cleanup scripts./nI wrote my first action which boils down to shelling out from node to a bash script. \u00a0Lots of hoops to jump through, and even more if I wanted to use the core modules (setting up a build step)! \u00a0/nVery much agree with this. I would also like to see other action runners like Python, for example. There doesn\u2019t even need to be a toolkit for these other languages. Someone would probably create one using the javascript actions/toolkit as a reference implementation./nI was also wondering the same thing./nIf anyone is interested, I have created an easy workaround until GitHub Actions provide support for simple shell actions./nGuess this is now solved with https://docs.github.com/en/actions/creating-actions/creating-a-composite-run-steps-action/n"
    },
    {
        "title": "Higher CPU count virtual environments planned?",
        "url": "https://github.com//orgs/community/discussions/26570",
        "upvotes": "551",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 4,
        "body": "Hiya! I couldn\u2019t find any information laying around in the existing GitHub actions documentation about higher CPU instances being available. I was wondering if anyone knew of plans to offer build agents with higher CPUs in the future? Sadly I have a test suite that takes 35 minutes to run in GitHub Actions because it\u2019s highly parallel, and 2 CPUs doesn\u2019t scale well./nYes, we\u2019ll have more compute options available in the future.\u00a0 Our first offering here will be the ability to provide self-hosted runners, so you can bring your own compute needs to GitHub Actions.\u00a0 We\u2019ll explore additional offerings after that./nIs there any update on this? For building android apps, it would be great to have 4 or 8 cores so that it can go faster./nWould love to have upgraded plans for more cores too. Any updates?/nLooks like this was just released https://github.blog/changelog/2022-09-01-github-actions-larger-runners-are-now-in-public-beta//n"
    },
    {
        "title": "Github Actions CI/CD pipeline (branch -> master -> release tag)",
        "url": "https://github.com//orgs/community/discussions/26115",
        "upvotes": "485",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 8,
        "body": "HI there,/nI am facing the same issue. It\u2019s quite a show stopper, as we\u2019re not able to migrate our CI/CD workflows from some rival platforms./n9/6/2019: This is no longer relevant - it was a bug that has been fixed, see responses down below./nThis is a bug. It should be fixed this week./n@jeremyepling Thanks! That is great!/nThe fix is deployed. Now tags will only apply to pushed refs that match that tag.\u00a0/nThey recently added events filter for webhook events so that you can have this instead:/nIt has been deployed indeed :slight_smile: my old solution is no longer required. To build for all branches and not for tags, I now use:/nThanks for that, I\u2019m adapting to it now. I have to say, things are improving rapidly :slight_smile:/n"
    },
    {
        "title": "Skip output 'AWS_ACCOUNT_ID' since it may contain secret",
        "url": "https://github.com//orgs/community/discussions/26636",
        "upvotes": "477",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 39,
        "replies": 3,
        "comments": 15,
        "body": "Hi everyone/nHi @jonathan-be21,/nHi @weide-zhou,/nHi @jonathan-be21,/n@weide-zhou thank you for your help so far./nHi @jonathan-be21,/n@weide-zhou no, the display shows only:\n##[warning]Skip output \u2018AWS_ACCOUNT_ID\u2019 since it may contain secret/nHi @jonathan-be21,/n@jonathan-be21 I got this issue, too.\nBut I found the root cause./nHi Folks, I got this problem too. And my output has nothing related to the AWS as well as any kind of secrets./nAlright, I guess I found the issue./nconfigure-aws-credentials/nThanks for sharing! Have you worked around this somehow?/nYes, for me. Because the value that been masked is not really a secrete, So I just removed it from Github Secretes and putted it into repo directly./nI\u2019ve opened an issue on the configure-aws-credentials repo to request that this be documented/naws-actions/configure-aws-credentials/n"
    },
    {
        "title": "Is it possible to require all GitHub Actions tasks to pass without enumerating them?",
        "url": "https://github.com//orgs/community/discussions/26733",
        "upvotes": "415",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 11,
        "replies": 17,
        "comments": 8,
        "body": "Is it possible to configure required status checks in a repo to say \u201call GitHub Actions tasks must pass\u201d, instead of needing to select individual GitHub Actions tasks by name?/nUnfortunately there isn\u2019t a way to do this. I\u2019ve had this issue in the past as well where I had a path exclusion filter set up to not run build workflows on non-code changes and they similarly blocked merges. I had to end up doing this as a workaround./noh sad. Yeah I guess it is just something we\u2019ll have to deal with. Not a big deal! Overall I\u2019m still really liking GitHub Actions./n@jameslamb I think another work around would be to create a job that \u201cneeds\u201d the previous job:/noooo cool idea! That\u2019s very clever, I like it. I think that would solve what I\u2019m looking for, thank you./nhere\u2019s the PR [ci] add an allgood job for easy [required] builds by graingert \u00b7 Pull Request #3351 \u00b7 microsoft/LightGBM \u00b7 GitHub/n@graingert it was discovered that when dependencies don\u2019t succeed, that check job is marked as skipped which auto-merge treats the same way as success. I solved this problem with https://github.com/re-actors/alls-green./nHow can we add/remove Details link ?\nHow can we re-direct to some url using Details link ?/nI run an app, Mergery, that does this./n"
    },
    {
        "title": "maven dependency cannot be resolved.",
        "url": "https://github.com//orgs/community/discussions/53262",
        "upvotes": "362",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 41,
        "replies": 5,
        "comments": 9,
        "body": "Bug/nsame error here Unknown host repo.maven.apache.org: Name does not resolve/nme too same error. how to fix it ?? any gradle version cannot resolve maven dependency/nFor anyone having trouble with maven central DNS failing today ..... you can set manually in hosts file as a temp fix\n146.75.124.215 repo.maven.apache.org\n(c) Thomas/nSame error here. No plugin can be resolved./n\nI faced the same error./nWork-around is to specify a repo in pom.xml/nThis Worked for me/nSeems this issue is resolved now, currently works without any configurations before accessing maven repository./nBug/n"
    },
    {
        "title": "Syntax error when input of type 'number' are forwarded by 'workflow_dispatch' to the reused workflow",
        "url": "https://github.com//orgs/community/discussions/67182",
        "upvotes": "338",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 2,
        "replies": 1,
        "comments": 8,
        "body": "Bug/nAlso having this problem, any suggestions ?/nJust experienced that bug as well - still no reaction on this? :-(/nsame issue here, guys this is crucial :|/nExact issue in my repo's workflow.\nPerhaps a workaround can be setting the type to string, leave conversion to inside the workflow.\ud83d\ude15/nSame problem here - https://github.com/OxlaCom/Oxla/actions/runs/7543017434/nSame here. This is clearly a bug that needs picking up./nI ran into this yesterday as well. I tried all sorts, even found the old GHA bug where one couldn't pass caller workflow's inputs. variables into a called workflow's with block, which has long since been resolved.\nBut, yes, it seems like at some point between being input into the first workflow and trying to pass into the second workflow, a number stops being a number and it is just passed around as a string.\nSo, on.workflow_call.inputs.variable-name.type: number is clearly a big no, doesn't work. \u274c \ud83d\ude2c/nAs a workarround I use the fromJson expression./n"
    },
    {
        "title": "Add ability to obtain the job id from single leg of matrix run",
        "url": "https://github.com//orgs/community/discussions/40291",
        "upvotes": "289",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 4,
        "replies": 2,
        "comments": 5,
        "body": "Product Feedback/nHi there @jdolitsky and welcome to our community! Thank you for the feedback!/nThat would be totally helpful because now you need to do a lot of magic to get the numeric job id (as shown in the URL)./nThere is a github action that does exactly this, and also outputs the full html_url as it is returned from the GitHub API: https://github.com/marketplace/actions/github-actions-job_id-parser/nI was using ReeganExE/github-action-job-id which seems to work on all OS compare to the mentioned above, but a problem is that a pairing based on ${{ strategy.job-index }} does not work consistently as for example I have a few single jobs running before the main job with the matrix... :(/nHaven't tested, but what you need might available now as github.job: https://docs.github.com/en/actions/learn-github-actions/contexts#github-context/n"
    },
    {
        "title": "Actions hanging on Starting your workflow runs...",
        "url": "https://github.com//orgs/community/discussions/26956",
        "upvotes": "282",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 15,
        "body": "Anyone else experience it?.. our whole CD pipeline is stuck :\\/nWe\u2019re also seeing this/n@roni-frantchi wrote:/nI\u2019m also seeing this across several different workflows being triggered by different users in our account. Has been like this for at least a few hours./nOur actually starts after a few hours, or never\u2026/nYep. Same here\u2026 \ud83d\ude26/nsame here and still ongoing/nSeeing this as well \ud83d\ude26/nSame. somewhere between 20min and 4 hours before it\u2019ll actually start. The dangerous part is because it\u2019s queued but not started PRs don\u2019t show the checks and thus appear passing when no tests have been run./nHi,/nFor what it\u2019s worth \u2013 I\u2019m getting this now again. It worked fine just a few hours ago./nThanks for the ping\u00a0@zellski, this issue should be resolved. If you are still having issues please contact us at https://github.com/contact and we\u2019ll take a look./nThanks Andrea \u2013 yeah, turns out I\u2019d just screwed up the contents of \u201cruns-on\u201d line, which fails the workflow without feedback:/nAny update on this?/nExcuse me, is this question solved?/nAlso experiencing this. Added a GitHub action on a branch. It is not available on the master branch (yet). Wanting to start with a pull request./n"
    },
    {
        "title": "Github Action: Support for workflow level env for reusable workflows",
        "url": "https://github.com//orgs/community/discussions/6110",
        "upvotes": "261",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 2,
        "body": "Currently it is not possible to pass values from env context (workflow level) to reusable workflows. By enabling support for workflow env context together with resuable workflows would result in one being able to define variables once that is used by multiple reusable workflows./nThis is absolute must have. Right now I am needing to define a tag version 7 times. This should simply defined once as a workflow env variable then provided to the reusable workflow via the with section. Being limited to only the ${{ github.* }} set of functions seems like a major oversight./nnot being able to use env variables as input to reusable workflows is very limiting. this blocks us to create generic reusable workflows./n"
    },
    {
        "title": "How to detect a pull request from a fork",
        "url": "https://github.com//orgs/community/discussions/25217",
        "upvotes": "258",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 4,
        "replies": 1,
        "comments": 4,
        "body": "I have a project that uses cypress dashboard. To access this we use 20 runners (our max concurrency) and a secret token./nI found the following works (ensure you replace org/repo)./nThis also seems to work which is more generic, than actually naming the repo:/nIn case it\u2019s useful for someone, I wanted to filter pull_requests which does not have write permissions, which are:/nHi, you can now check if fork directly using the boolean provided in the payload:\nNot fork:\nif: \"! github.event.pull_request.head.repo.fork \" \nFork:\nif: \" github.event.pull_request.head.repo.fork \"/n"
    },
    {
        "title": "Return workflow run id in API response for workflow dispatch event",
        "url": "https://github.com//orgs/community/discussions/17389",
        "upvotes": "236",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 12,
        "replies": 0,
        "comments": 4,
        "body": "When sending workflow dispatch event through API (https://docs.github.com/en/rest/actions/workflows#create-a-workflow-dispatch-event), the response body is empty./nRelated: https://github.com/orgs/community/discussions/27226/nHello GitHub team! we're using GH workflows extensively, and inability to get workflow run ID when dispatching a workflow is critical for us. Would you please share some of your ideas on when this issue could be tackled from your side?/nFound this helpful action as a workaround https://github.com/marketplace/actions/return-dispatch/nAffilitiation: I acknowledge that I am a major contributor to this GitHub Action./n"
    },
    {
        "title": "Support saving environment variables between steps",
        "url": "https://github.com//orgs/community/discussions/26407",
        "upvotes": "233",
        "tags": [],
        "rections": 2,
        "replies": 1,
        "comments": 10,
        "body": "With https://github.community/t5/GitHub-Actions/YAML-folded-multiline-strings-interpreted-as-multiple-commands/m-p/30876#M593 solved, the only thing standing in the way of reusing a lot of commands between Linux/MacOS and Windows when building C++ with CMake is an option to keep environment variables between steps (currently the environment is reset after each step)./nUsing set-env I was able to achieve the desired result./nThanks for creating that script.\u00a0 I would be a little careful with that script as you are stomping on PATH rather an updating it with append-path.\u00a0 In most cases it probably won\u2019t be an issue but you never know.\u00a0/nI\u2019ve been going round in cycles with this as I had my set-env like/nLink has moved to:/nHow do I actually use these variables?/nThe set-env command sets an environment variable, so you have to access it via the env context:/nThis is being deprecated due to a vulnerability - see https://github.blog/changelog/2020-10-01-github-actions-deprecating-set-env-and-add-path-commands//nThis method was deprecated due to a security vulnerability please see Support saving environment variables between steps for the new method./nIt\u2019s also possible to use job-scoped environment variables, no? See this link: https://kevsoft.net/2020/04/25/creating-a-job-scoped-computed-environment-variable-in-github-actions.html/nYes, but if you need to set an environment variable dynamically in a step, then you need to use environment files./n"
    },
    {
        "title": "feature_request: user input(intervention) during job running",
        "url": "https://github.com//orgs/community/discussions/14230",
        "upvotes": "228",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 8,
        "replies": 3,
        "comments": 1,
        "body": "Hello ,/nThanks for the feedback! At the moment, you can use workflow_dispatch inputs to collect user data at the beginning of a run, but not during a workflow run. I'll add this feedback to the backlog to consider how we might be able to support this scenario. Thanks again!/n"
    },
    {
        "title": "Actions/cache: Cache not being hit despite of being present",
        "url": "https://github.com//orgs/community/discussions/27059",
        "upvotes": "216",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 182,
        "replies": 22,
        "comments": 28,
        "body": "Hi,/n@rj722\u00a0,/n@rj722\u00a0,/nThis doesn\u2019t make sense to me. Seems like the cache should be dependent on the repo and the keys. Not on the branch. And in my experience, it only gets a cache hit on the same commit when I re-run the workflow. It never seems to get a hit even on the same branch. This is pretty silly./nOh, so it\u2019s scoped to the specific tag for runs triggered by a tag push as well. This is even more silly. It means that no tag build can use cache. Why do they scope it to the branch???/nHey. How did you figure out it is scoped to the tag as well?/nhi! \n/nMakes no sense to cause a cache miss if it's from a non-default branch. That makes the cache much less effective. This essentially causes any workflow that you develop and presumably cache in a PR immediately cache-miss when it's merged into the default branch./nThis caching behavior should at minimum be configurable, if not straight up not branch specific./nI really dont see any improvement to use a cache inside the same branch, and that don't work with the default branch either ... only bullshit.\nIf I make a cache I want to use every time I want .../nKeeping things isolated by branch makes sense when you don't want the cache in one branch polluting the cache in another branch. For example, if I have a node project and I open a PR that adds, updates, or deletes a new node module to the project, then someone else on my team opens a PR that triggers the same workflow, a repo-level cache would likely cause issues./nWe have a real use-case where again circleci got it right and github got it wrong./nSo what's the solution ? Is my understanding that for some arbitrary reason it won't run on/nAfter doing everything fine, and even testing the cache manually in a test branch, the cache suddenly isn't being hit, what is going on?/nIs there any solution to this? It seems like people would like to configure the scope for cache but it also seems it's not configurable in any way. I've recently encountered this limitation myself as well./n@BrightRan as you guys can see many of us are pretty frustrated by not being able to share cache between branches. After 3 years, do you still not have a plan to add this functionality to the cache action? I should be allowed to set the branch restrictions, not you guys by default./nHi,/nHandling cache hits at the repository level seems like a more sensible approach. We can easily customise cache keys by incorporating the branch's reference name into the key. The current default behaviour can be a bit confusing and unconventional or at least there should be a way to override this behaviour.\nI'm curious about how tags function in this situation, as each tag essentially acts as a unique branch each time.\nThis could make our builds much faster, but it looks like GitHub wants to charge us for it intentionally./nClassic GitHub stupidity. It doesn't work for releases as it's always has a different tag which means no cache hit. It makes no sense. I used the hash of package-lock.json in the cache key. It's safe to cache it and use it even for different branches./nThank you for this gigantic resource waste by design/ninteresting design choice!/nBased on everything that's been discussed above, it does look like it might just be better not to use actions/cache, but implement your own, where you store caches in an S3 bucket or something. \ud83e\udd37\ud83c\udffb/nugh... why is it like this. I'm running into the same issue, but theres a difference.\nI have a CI workflow when I create a PR which stores caches (per branch in some instances)\nI have another workflow that runs manually when I want to deploy to specific staging environments./n...and of course, GitHub just ignores us, they have nothing to say./nI have a feeling that since this discussion was tagged as \"Answered by BrightRan\", no one from the core Github team will ever read our comments!\n/nIn my case, I found a workaround for my Yarn dependencies:/n"
    },
    {
        "title": "Error accessing Maven central from ubuntu-20.04 runner",
        "url": "https://github.com//orgs/community/discussions/53258",
        "upvotes": "212",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 16,
        "replies": 18,
        "comments": 9,
        "body": "Bug/nI'm having the same issue as well./nsame error./nsame error here/nsame error here Unknown host repo.maven.apache.org: Name does not resolve/nOh no!/nSame/nOMG. SAME ERROR HERE\nCould not GET 'https://repo.maven.apache.org/maven2/org/springframework/boot/spring-boot-dependencies/2.7.0/spring-boot-dependencies-2.7.0.pom'./nHi y'all \ud83d\udc4b/n"
    },
    {
        "title": "Is GitHub Actions going to be killed soon?",
        "url": "https://github.com//orgs/community/discussions/26312",
        "upvotes": "210",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 9,
        "body": "So I was looking into a workflow that stopped working and noticed that the problem was at uploading the release. No problem let\u2019s see how the release upload works\u2026Oops, GitHub has archived the release asset upload action. And the release create action\u2026 And the download is also practically unmaintained\u2026 There\u2019s no currently actions for these provided by the community./nGitHub Actions is still going strong, in my opinion. You can look at the public roadmap and see what all we have delivered and what is coming in the future./nDid you notice how no one uses GitHub Actions seriously? It\u2019s just used in toy workflows and doesn\u2019t do anything real./nHey @ericoporto! Always up for a lively debate.  I was wondering if you could provide me some details on why you think GitHub Actions isn\u2019t taken seriously and doesn\u2019t do anything real.  It is currently the #1 CI system used on GitHub, and I can personally attest to working with many customers to implement GitHub Actions, both from a CI/CD perspective, as well as a general workflow.  That is one of the strengths of GitHub Actions, is the ability to trigger off of any event that GitHub can throw, which allows you to automate beyond just CI/CD?/nNo dogfooding from either GitHub or Microsoft, navigate their repos and you will see they simply don\u2019t use it. Basically no one ships releases from it, people only runs basic tests in it. Look any big cross platform project and see it\u2019s never used./nHey @ericoporto Thanks for the feedback.  I\u2019ll also qualify that everything I say is my personal opinion. :slight_smile:/n0 of these use a community maintained action and 0 of these have a release pipeline./nHey @ericoporto! All good feedback thank you. I\u2019m going to reach out to the Actions team, to see if there is any information that can be shared on why those actions were archived. I\u2019ll report back here if I find out anything./nfwiw, I know of a bunch of Microsoft repositories that use my check-spelling action, including:/nA lot has matured in GitHub Actions since my initial post here, I haven\u2019t actually switched fully to GitHub Actions, still juggling between GA, Cirrus CI, Circle CI and AppVeyor, but at least I have been able to use GitHub Actions in more complex and useful workflows now./n"
    },
    {
        "title": "Unrecognized named-value: 'env' error for jobs.<job_id>.container",
        "url": "https://github.com//orgs/community/discussions/17311",
        "upvotes": "202",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 1,
        "replies": 1,
        "comments": 3,
        "body": "Describe the bug\nUsage of env in jobs.<job_id>.container results in invalid workflow./nsubscribed to get an updates/nI think this is key to foster service containers usage./nThis seems to also affect jobs.<job_id>.environment./n"
    },
    {
        "title": "Feature request for workflow logs: Always keep last workflow run log",
        "url": "https://github.com//orgs/community/discussions/17672",
        "upvotes": "178",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "When viewing old projects it's a hassle to not see any logs for the last workflow run if they have expired. Sometimes we need\nto look at old stuff and figure out how it ran and what was done./nI think this would be a quite valuable feature for a lot of GitHub Action users. In my case I have services which are rolled out infrequently (several month between rollouts) through GitHub Actions. If something fails in a rollout it was helpful to view the log of the last successful rollout to fix the issue. I support this feature request!/n"
    },
    {
        "title": "How to checkout a private submodule from a github action?",
        "url": "https://github.com//orgs/community/discussions/25516",
        "upvotes": "173",
        "tags": [],
        "rections": 2,
        "replies": 3,
        "comments": 5,
        "body": "Apparently the $GITHUB_TOKEN only has permissions for the current repo (which makes sense) \u2013 is there a way to allow access to another private repo?/nYou should be able to set a custom token when using the checkout action. So, if you have a token that you know will have access to both your current repo as well as the submodule(s), you can run a step like:/nCool yeah that makes sense. I only wish there were a way to generate a custom token with restricted access to only a couple of repos \ud83d\ude15 I guess I\u2019ll probably make a bot account with limited permissions and go with that./nSadly they broke that with actions@v2 so beware when updating! You now have to use something like this if you want to keep using SSH URLs instead of HTTPS:/nHow to generete the token btw?/nAs per actions/checkout#287 (comment), it is now possible to use actions/create-github-app-token to create a token usable by actions/checkout as such:/n"
    },
    {
        "title": "Ability to use submodules for easy sharing of Actions + Workflows",
        "url": "https://github.com//orgs/community/discussions/10892",
        "upvotes": "155",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 23,
        "replies": 7,
        "comments": 5,
        "body": "\ud83d\udc4b\ud83c\udffb\nHey GitHub Team!\nFirst time writer, long time user. Figure it was about time I added to the overall discussion of GitHub features./nHi @saudeon - I must confess that I find git submodules a bit...  frustrating to use, and I would love to find a solution that is a little less...  difficult.  How much do reusable workflows help here, and what sort of pain points do you still have with them?/n+1 for the submodules to reuse the .github configs. See github.com/BigWhaleLabs repositories \u2014 we keep reusing the same .github folder across a couple dozen of repos, this is just unmainainable :(/n+1 same here. special actions (release, pr createion etc) on special conditions needs to be redefined in every process. even its the same for all repos./nreusable templates would be great, is there any update on this?/n+1, I have the same issue. Would be great to have the ability to share GitHub actions configs across repositories/n"
    },
    {
        "title": "[Bug] GitHub Actions does not set job output because it wrongly detects a secret",
        "url": "https://github.com//orgs/community/discussions/37942",
        "upvotes": "154",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 14,
        "replies": 16,
        "comments": 17,
        "body": "We are using the build outputs to pass the hash of artifacts between two jobs, which is necessary for creating SLSA provenances./nHi there @behnazh-w and welcome to our community! Thank you for asking a great question \ud83d\ude42\nWhile you are waiting for a reply to your question, here are a few things you can do:/nHey @behnazh-w - I'm keen on helping ensure GitHub Actions works for SLSA provenance generation./n@steiza Thanks for helping out./nI am having the same issue while exporting as job output the first 7 chars of github.sha and a random generated UUID using uuidgen./nThe issue still persists w/ github.com. Is there a work around?/nThis is very annoying. Outputs should not be ignored if there is a potential secret, because build outputs can be IDs and the detection meachanism is flakey./nto the next job, and GitHub will not set the output because it was treated as a secret. But in fact, it is just a regular variable/nAny solution yet? I'm having the same issue when passing Azure resource group name to the next job, and GitHub will not set the output because it was treated as a secret. But in fact, it is just a regular variable./nFWIW I am also having this issue with an AWS ARN. It is considering the Account ID in the ARN a secret and so ignoring it as job output. Very annoying./nI am also having the same issue with an AWS ECR Image URI. I am trying to separate the (1) build-and-push-to-ECR job from the (2) deploy-ECR-image-to-App-Runner job. Job 2 needs the Image URI from Job 1./nI am using artifact as workaround for the moment./nI used artifacts as a workaround of this problem but now i'm reaching quota limitation of artifacts (even if retention is 1 day). Same as https://github.com/orgs/community/discussions/37942#discussioncomment-6434547 I use job outputs for standard variables and not secrets.\nThis issue should definitely be fixed.../nnone of the variables are derived from secrets, but still, main_image output is suppressed/nSame issue here, have been debugging for a stupid amount of time. It seems like some outputs will be filtered but others may not. It is still a black box and no one knows how GitHub decides whether an output is sensitive or not./nIs anything being done to resolve this?/nHaving the same issue, value of environment variable MACHINE is changed from e2-medium to e2-medium*** - not just in the log output, but even when used in simple a run action (i.e. bash script) - this certainly does not make sense at all./n\ud83e\udd15  Same issue for/n"
    },
    {
        "title": "Substring function?",
        "url": "https://github.com//orgs/community/discussions/26625",
        "upvotes": "147",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 32,
        "replies": 17,
        "comments": 5,
        "body": "Hello there,/nUnfortunately, there\u2019s currently no built-in substring function. As a workaround, you can use another action and set the substring as an output variable:/n@jclemthank you very much :slight_smile: Using outputs from one step as inputs to another will work perfectly fine as a workaround!/nThank you, github-script action is awesome, if you take a closer look at what it can do, you can do some fun things like:/nNow you can have named runs based on github context, a built-in substring function would be very useful. For example using {{ github.sha }} in the name makes it unreadable as the sha is so long. It would be great to be able to cut that to 7 characters inside the custom run name/nI'm also looking for a way to obtain the first 7 of the github_sha. I was first surprised that this value didn't exist in github contexts or environment variables, and secondly surprised that github yaml doesn't have any substring or length function./n"
    },
    {
        "title": "How to mount file from repository to the service container's volume?",
        "url": "https://github.com//orgs/community/discussions/42127",
        "upvotes": "145",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 19,
        "replies": 5,
        "comments": 9,
        "body": "Question/nThat depends on what you actually want to achieve, as in which data (or directory) do you want to share with the service container?/nJust to add my $0.02 in the hopes that someone from github is watching:/nAgreed.  For our use case, we need to publish pre-seeded database containers to use for non-prod environments.  Typically with something like mysql we'd do this by running a mysql service while allowing /var/lib/mysql to be mounted locally, then after the seed, stop the service and use that folder to build a fresh mysql container which ends up being published./nI have a similar use case. I am migrating a docker-compose over to service containers. All the config files for testing are in the repo and are required to be mounted into the containers. The workaround of running the containers manually along with the bridge network makes the workflow messy. Abstracting it to an action keeps it clean but I would much prefer to use the services syntax and hold the container spin up to be triggered by a follow up action./nI also have similar usecase. I want to perform checkout repo before I can start service container.\nI donot want to use docker-compose within github action. Service containers work great for me except for this limitation where I cannot pass configurations to the service container via volume./nI am running into this issue now. My previous team used git-labs and this was 100% possible. It was possible with Bitbucket also./nI'm surprised this is still an issue. We're also affected by this. There's all sorts of edge cases with a manual docker run like making sure you don't accidentally leak credentials, waiting for the service to be healthy, etc./nI've found it's actually much simpler to use a docker-compose configuration to run services, define dependencies, wait for service health, env var configuration for containers, etc.  It keeps the pipeline syntax clean and offers a more familiar, less verbose and syntaxtually clean approach./nI've been using the following workaround to do this for a couple years now, but I can't seem to find the original link where I got the idea/syntax, which is what led me to this thread. If it helps anyone, here are my snippets. In this case, I'm using the Mosquitto MQTT service for integration tests, and want to mount configuration and password files rather than disabling authentication./n"
    },
    {
        "title": "All workflow_dispatch to only run from a specific branch set at the repo level",
        "url": "https://github.com//orgs/community/discussions/19779",
        "upvotes": "1288",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 1,
        "comments": 1,
        "body": "Hi,/nHi @scott-doyland-burrows, did you find a solution to this? I am facing a similar issue./n"
    },
    {
        "title": "Env variables in uses",
        "url": "https://github.com//orgs/community/discussions/25246",
        "upvotes": "1078",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 67,
        "replies": 8,
        "comments": 12,
        "body": "It would be nice to be able to use enviornmental variables in a uses varaible. This will allow for easy changing of versions for actions such as checkout./nIn order to enact policies like only using actions defined in the org or repo we can\u2019t allow actions to dynamically change at runtime.\u00a0 So using any sort of dynamic value in uses is not something we will be able to support./nThis makes it more work to update multiple jobs to a newer version of an action or even different workflows since you could in theory just have the maintainers put the versions in a github secret and call it on all their workflows and update everything at once though i think its still better to just do it as a global env variable in the script so it is easier to see and modify in pull requests. If you do not thing this is something that will ever be support then i guess we can go ahead and mark this as solved then./nHi,/nThe counter argument to stability/safety, is that master changes every time there\u2019s a commit. That sounds like a problem to me./nIs there any work being done on this at the moment?/nSurely, you could allow variables in the version (or tag?) part of uses and still maintain this property?/nThere is no way that some random shell script written by an average Joe like me is safer than the services and docker jobs written by knowledgeable people a GH!/nHello,/nThis is also something I'm interested in, and from the other responses, it doesn't sound like the \"for security\" argument holds much water/nI wanted to accomplish this that sounds super intuitive to me, but sadly I couldn't:/nSmall update on my issue:/nThis would be a nice feature to help us reference the reusable local actions inside a reusable workflow/n"
    },
    {
        "title": "Can I run github actions on my laptop?",
        "url": "https://github.com//orgs/community/discussions/25711",
        "upvotes": "551",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 3,
        "body": "Is there a way to run the github action on my laptop?/nAfter you create an action, It could not run directly in your local laptop. You need to test it out in workflows. \u00a0https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-a-javascript-action#testing-out-your-action-in-a-workflow/nThe solutions does not answer the question:/nIf you want to test/debug an individual action (not the entire workflow) you can use github-action-ts-run-api JS package. But it\u2019s mainly for actions authors who want to write integration tests for their actions and run them both locally and on CI./n"
    },
    {
        "title": "How to conditionally include/exclude items in matrix (eg. based on branch)?",
        "url": "https://github.com//orgs/community/discussions/26253",
        "upvotes": "485",
        "tags": [],
        "rections": 5,
        "replies": 0,
        "comments": 8,
        "body": "I have a matrix like this:/nHi\u00a0@dantup\u00a0,/nThanks - that would probably work, but my workflow is quite large and maintaining two of them wouldn\u2019t be ideal. Is it possible this may change in future? To do something similar on Travis, you can have a top-level if block:/nI\u2019m looking for something similar - I\u2019m actually trying to only run the job if the matrix option matches a particular value - unfortunately it seems that\u2019s not an option at the job level, so I\u2019d have to do it at the step level, which defeats the purpose/nI\u2019m looking for something similar as well: out of my 4 target configurations Ubuntu, MacOS, Android and iOS I would like to specify that only Ubuntu configuration should be ran on regular daily check-ins into say master (to save me precious minutes), while all 4 configurations should only be ran when I create a version tag (since I also need binaries released for each of the versions). The condition for inclusion of a specific configuration might become more complicated later, but this should be a useful enough use case scenario for you to consider./nI think I have now found a workaround for excluding matrix options based on branch. The idea is to simply add the github.ref variable to the matrix and then exclude it:/nDynamic matrix can be used according to this example: https://docs.github.com/en/free-pro-team@latest/actions/reference/context-and-expression-syntax-for-github-actions#example-6./nThanks. Your strategy worked for me! In case anyone wants to have a look, here\u2019s the addition: Disable `pr` env in `main` branch by joaomcteixeira \u00b7 Pull Request #31 \u00b7 joaomcteixeira/python-project-skeleton \u00b7 GitHub/nSimilar here, thank you! I use the following to run only the (fast) linux/amd64 docker build in pull requests:/n"
    },
    {
        "title": "Stuck on \"starting your workflow run\"",
        "url": "https://github.com//orgs/community/discussions/26581",
        "upvotes": "477",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 19,
        "body": "Is there something wrong with\u00a0https://github.com/atlsynth/site-src/blob/master/.github/workflows/main.yml\u00a0? I have not had any runs proceed past \u201cstarting your workflow run\u2026\u201d The first one, started over two hours prior to this posting, is still showing that message. And I don\u2019t see any way to debug or stop these runs./nHi there! It looks like you have a small typo in ubuntu-latest \ud83d\ude42/n\ud83e\udd26\u200d\u2642\ufe0f\u00a0Awesome. Thank you for seeing my dumb mistake./nHello guys,\nActually i\u2019m facing the same issue,\nto know more about my details please follow the below link\nactions/setup-ruby#26/nHad the exact same typo as you did \ud83e\udd26\u200d\u2642\ufe0f./nI agree. I definitely see this as a bug and hope someone on the team recognizes it as such./n@jsumners\u00a0@artalus Definitely. We have a couple improvements coming to help with this. Shouldn\u2019t be this confusing when there is a typo!/nExcellent./nAm still having this issue, using one of the info dump snippets on herehttps://help.github.com/en/articles/contexts-and-expression-syntax-for-github-actions#github-context. Was working before\u2026/nSimilar situation for me. Jobs that used to work are currently stuck in the \u201cStarting your workflow run\u2026\u201d state./nSame issue here./nSame here as well. Tons of jobs queued./nIs there any way to check github action service status?/nI\u2019m having trouble with this as well. I\u2019m trying to automate movement of newly created issues into a project and the run is stick on \u201cStarting your workflow run\u201d.\u00a0https://github.com/terraform-providers/terraform-provider-vsphere/blob/master/.github/workflows/issues.yml/nSame issue here./nSame for me./nI confirm./nThe issue with mine was specifying one job in an array as needs.\nneeds: [job1] got my runner stuck until I replaced it with needs: job1./nSame issue for me today. Except the script was working fine 15mn ago and there was no change in the script itself./nSame, it just takes a loooong while to get any runners today. Here\u2019s hoping github\u2019s on the case./n"
    },
    {
        "title": "Pip dependencies not getting cached even after successful restore",
        "url": "https://github.com//orgs/community/discussions/26096",
        "upvotes": "415",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 14,
        "body": "Hi folks./nI modified my workflow file a bit like the following:/nHi @sayakpaul\nDo you have a link to the public repository or a minimal example repository that shows this behaviour?\nBy the way, could you please add ls ~/.cache/pip/ before \u201cTrain model and log wandb metric\u201d step to check if pandas has been installed in the previous run?/n@niconbwthanks for your reply. Here\u2019e the branch where I tested this: https://github.com/sayakpaul/wine/tree/wandb-integration.//nHi @sayakpaul\nThe reason for this problem should be that the specified cache path is incorrect. You could try to specified cache path, such as:/nThank you for the pointers, @niconbw. Could you also elaborate as to why the message \u201cCache restored \u2026\u201d was there in my logs? Am I missing out on something?/nHi @sayakpaul\nWe can find that you are using the ~/.cache/pip path in the cache@master action, but pandas  has not been installed under this path. Even if you save the cache under this path(~/.cache/pip), you still cannot find the module (such as pandas) when you restore the cache successfully./nFair enough @niconbw. Thank you for your guidance./n@niconbw I tried your suggestions but I am still not sure if caching is indeed being reflected. Here are the logs: https://github.com/sayakpaul/wine/runs/975167639?check_suite_focus=true./nHi @sayakpaul\nPlease try again with the following yml:/n@niconbw you probably forgot to include python train.py./nHi @sayakpaul\nsorry. Please add python train.py back in your side./n@niconbw I appended the necessary stuff in the YAML file and I got it to working:\nhttps://github.com/sayakpaul/wine/runs/979690608?check_suite_focus=true./nHi @sayakpaul\nYou\u2019re welcome. It\u2019s my pleasure to help you./njobs:\nrun:\nruns-on: ubuntu-latest/n"
    },
    {
        "title": "Add Python 3.8 support",
        "url": "https://github.com//orgs/community/discussions/25815",
        "upvotes": "362",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 4,
        "body": "Python 3.8.0 was released yesterday, 2019-10-14:/nThanks for the feedback! I\u2019ve taken your suggestion and passed it along to the appropriate teams. Thanks again for reaching out \ud83d\ude00/nPython 3.8 is now available in GitHub Actions./nAlmost!/nPython 3.8 is now available on all three: Ubuntu, Windows and macOS./n"
    },
    {
        "title": "JavaScript actions support for node18 or node20",
        "url": "https://github.com//orgs/community/discussions/53217",
        "upvotes": "338",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 5,
        "replies": 2,
        "comments": 9,
        "body": "Product Feedback/nCan we expect some feedback from product management on this important topic?/nNode.js 16, which is currently the only supported version for GitHub JavaScript actions, is planned to enter End-of-Life status on Sep 11, 2023 according to the Node.js Release Schedule. Support for a later version of Node.js by GitHub JavaScript actions needs to be made available in good time ahead of this retirement date./nhttps://github.blog/changelog/2023-05-04-github-actions-all-actions-will-run-on-node16-instead-of-node12/ from May 4, 2023 says \"GitHub Actions: All Actions will run on Node16 instead of Node12\"/nAlso see (and subscribe to, if interested) the linked issue: actions/runner#2255/nThis has been provisionally answered in actions/runner#2257 (comment) by @fhammerl/n@MikeMcC399 @TomasHubelbauer looking for node18 support as well (node20 even better!). Did small PoC with an ugly workaround (wrap js action into composite action): https://github.com/DariuszPorowski/node-js-action\nIt works, but that may be a kind of a temporary workaround for action maintainers only, not users.\nDefinitely not a supported solution, and I don't know the potential negative/side effects./nThis has been answered in actions/runner#2704, where it says \"From here, we plan to skip over node 18 and hop on the node 20 LTS release. \"/nSee actions/runner#2619 (comment)/n"
    },
    {
        "title": "Run step on (if branch/tag is)",
        "url": "https://github.com//orgs/community/discussions/25216",
        "upvotes": "289",
        "tags": [],
        "rections": 1,
        "replies": 4,
        "comments": 8,
        "body": "Currently, I do not believe there is a way to run a step (or even a job) if a branch matches a certain pattern. It is only possible to run an entire workflow on a master/tagged branch, but this requires duplicating the workflow just to add another step for releasing/publishing. I could also create an action for the build/test steps, but both creating an action and duplicating the code seem superfulous and more likely to cause errors since someone could forget that both files need to be edited./nHi @bhowell2,/n@bradenmthanks for the response (and noted on the if expression!). Contains does not do pattern matching, but it could definitely work. Using contains would require people to name their release tags something that is unlikely to occur elsewhere (luckily tags are generally for some type of releases anyway). As you put it \u201crelease\u201d is a pretty good indicator that the tag is for a release. Many currently use something more of the form \u201cv*\u201d or maybe just a semantic versioned number (e.g. 1.0.1), but probably wouldn\u2019t be a huge deal for people to adjust this by adding \u201crelease\u201d, \u201cmilestone\u201d or whatever in the tag. This would be much less of a problem anyway if workflows could be reused/referenced which would be preferred to using the IF condition at all./nYou can use bash substitutions:/nFor those looking at this article today and onward, please use the new declaration for setting environment variables:/nYou could fork https://github.com/fkirc/skip-duplicate-actions to get branch-specific skipping. With such a fork, it should be doable with less than 5 lines of code./nThis is epic, thank you for sharing the $GITHUB_ENV trick!/nJust FYI for anyone else using this as a reference, the values should be refs/heads/master not ref/head :slight_smile:/nNote that this should be single quotes around release. Otherwise you will get an invalid workflow warning. For example:/n"
    },
    {
        "title": "[Request] Add environment support to Reusable Workflows on GitHub Actions",
        "url": "https://github.com//orgs/community/discussions/6782",
        "upvotes": "282",
        "tags": [
            "Enhancement",
            "Actions",
            "ProductFeedback"
        ],
        "rections": 6,
        "replies": 2,
        "comments": 2,
        "body": "I would like the ability to have environment support on Reusable Workflows on GitHub Actions so that I can cleanly and safely refer to environment secrets./nAnswering my own question here:  this is already possible - but it is not intuitive./nHaving to design your inputs to work around lack of native environment passing support is not ideal./n"
    },
    {
        "title": "Ubuntu 20.04 and grub-efi-amd64-signed",
        "url": "https://github.com//orgs/community/discussions/47863",
        "upvotes": "261",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 13,
        "replies": 1,
        "comments": 10,
        "body": "Bug/nAlso getting this error here/ni have this issue too/non 22.04 as well./nIt's fixed! Yeah!/nThis seems to have returned again this week for us./nSame/nSame here (although it's seems to be fine with Ubuntu 22.04.3)/nAlso seeing this on 22.04.2./nThis is nightmarish. Having the same problem on all 20.04 machines we are building (using MAAS). So far the only reply I have gotten is: \u201cIt looks like you don't have an EFI partition in order to boot. Therefore, you do not need to worry about this error.\u201d \ud83e\udd2f/nI have this after upgrade 22.04 > 23.10. No fix just yet./n"
    },
    {
        "title": "Naming conventions: Underscore vs. Hyphen",
        "url": "https://github.com//orgs/community/discussions/39547",
        "upvotes": "258",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "Question/nYes I'd like some opinion on this too. I'm a fan of snake case using underscores but I'd be willing to switch if using kebab case hyphens is best practices./n"
    },
    {
        "title": "GitHub Actions workflow not triggered with path/**",
        "url": "https://github.com//orgs/community/discussions/25285",
        "upvotes": "236",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 14,
        "body": "I define a workflow that will run on push to master if anything in sam-highlighter directory changes:/nI don\u2019t see the workflow you linked to anymore. Is this still an issue? If so, can you tell me which workflow is the one you\u2019re having a problem with?/nHere is a more recent commit:\u00a0SamChou19815/website@1a1643a/nYou expect that pattern to cover arbitrarily-nested directories, right?\u00a0 I tried it out earlier, and I don\u2019t believe that\u2019s supported right now./nTry changing the above to/nI have tested using only one asterisk and it gives the same result as two asterisks. Only files directly in the folder will trigger the action but not a file which is nested, for instance: main-site-frontend/another-folder/changed-file.txt will not trigger the action/nI think that the pattern is using Go Path, which does not seem to have any support for nested directories./n@svalluru-aaiis right, Go path.Match does not support matching nested directories./nWe have a new syntax for branch, tag and path filtering\u00a0https://github.blog/changelog/2019-09-30-github-actions-event-filtering-updates/./nI\u2019m currently evaluating moving more of our CI/CD workload to GitHub Actions. Our project is a Monorepo with more than 100 nested projects. It would be extremly helpful if I could add\u00a0/nWe are working on an update to the path matching that will support the more standandard globbing patterns.\u00a0 Please keep an eye on the GitHub changelog for the update./nHere it is!!!/nUnfortunately, when I type paths-ignore, Github is complaining about it, not working./nHow can we debug path matching? Currently if the workflow doesn\u2019t start, we\u2019re just left staring at the Actions screen with one big question: WHY?\nCan we somewhere get a log of how the changed files in a commit are matched against the paths?/nOr, for that matter, the inverse - why did a workflow run when it should not have? It would be nice to see a list of files, filters they matched and the workflow decision./n"
    },
    {
        "title": "Triggering GH Actions when card moved in project",
        "url": "https://github.com//orgs/community/discussions/40848",
        "upvotes": "233",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 13,
        "replies": 4,
        "comments": 9,
        "body": "Question/nI was looking for the same thing. There seems to be only support for the Classic projects./nI've been searching everywhere but it appears they've abandoned the functionality./nso are there any ways to trigger GH actions when something changes in a V2 Project Item?/nIt looks like maybe the second item on this roadmap issue will bring this functionality into the new Projects./nAny plans? This works in classic projects, but you can't create them anymore.../nChecking in to see if there any progress on this. Could really use a functioning trigger for Projects Beta/nIt would be nice if we could get projects_v2 and projects_v2_item added to workflow triggers. i don't see it on the roadmap anywhere./nThe project_card event with the moved type seems to be exactly what you're asking for: https://docs.github.com/en/enterprise-server@3.8/actions/using-workflows/events-that-trigger-workflows#project_card/nI've found out that we have this at the ORGANIZATION level, but not at the PROJECT level (we are in the Teams plan):\n/n"
    },
    {
        "title": "Improve UI when working with Actions and Status Checks",
        "url": "https://github.com//orgs/community/discussions/12511",
        "upvotes": "228",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 9,
        "replies": 1,
        "comments": 5,
        "body": "Recently, I have came across two places in the GitHub UI that were related to Actions and weren't optimally done:/nHi @Laegas - sorry that you feel that this isn't optimal. We really appreciate you taking the time to give us detailed feedback about the gaps that you've identified and suggest some improvements! I'll talk this over with the team and make sure that we have improvements on the backlog./nThe text field is really what complicates it/nMay I suggest writing some examples of expected values next to the input field? Even better would be a full documentation page somewhere on docs.github.com./nAny response? I see that the Microsoft rep who previously answered is no longer at the company. What's the best way to get visibility on this issue from current employees?/nThis continues to be a problem./n"
    },
    {
        "title": "Unable to download artifact(s): Unable to download and extract artifact: Request timeout",
        "url": "https://github.com//orgs/community/discussions/81413",
        "upvotes": "216",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 11,
        "replies": 3,
        "comments": 10,
        "body": "Product Feedback/nHi, I am seeing the same, is there any solutions!/nSame here:/n[EDIT - I found my issue]\nI was running jobs in parallel, and I was actually trying to download the artifact from second job, BEFORE the first job that creates it was finished./nAlso seeing this a LOT after moving to v4 of the action/nSounds like something I reported years ago: actions/toolkit#1235. It was with older artifact APIs but the underlying problem appears to be the same./nSeeing a lot of this (on every which includes ~20 jobs that download artifacts) after upgrading to v4. To be clear, we do wait for the producing job to complete with needs: <job that uploads artifact>./nI'm also experiencing the same timeout issue./nAlso seeing this./nThis seems to be much more stable/reliable now! I'm able to run 60+ artifact upload/downloads without a single failure/nThanks for sharing this feedback! We pushed out a fix last week to address the timeout issues folks were experiencing with the artifact actions. We're also actively addressing it on the backend as well. If you're still experiencing this issue regularly, can you please open up a new issue in actions/download-artifact? Thanks again!/n"
    },
    {
        "title": "Calling a sibling composite action using the same ref",
        "url": "https://github.com//orgs/community/discussions/41927",
        "upvotes": "212",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 2,
        "replies": 1,
        "comments": 4,
        "body": "Suggestion/nTo @oblivioncth's point on the workaround, this is possible but not ideal. From an experience standpoint, I think I would want <org>/<repo>/<path> to reference the current git ref if in the same actions repo./nI did identify a slightly cleaner way to do the same thing:/nIt'd be really good to see github improve this by supporting/nTo summarize the answer from @mbrancato and some github documentation, here is the code that I used at my work.\nIf we take the action repo layout as/n"
    },
    {
        "title": "Github actions: Stuck in \"Expected \u2014 Waiting for status to be reported\"",
        "url": "https://github.com//orgs/community/discussions/26698",
        "upvotes": "210",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 69,
        "replies": 9,
        "comments": 17,
        "body": "Hi everyone,/nHave those workflows been triggered for that PR? If a check is required but that check doesn\u2019t get triggered (e.g. because of a path filter, or because it has been renamed) the \u201cexpected check\u201d will block forever./nYeah the action\u2019s are triggered whenever a Pull Request is created./nI don\u2019t see any workflow runs by those exact names in the Actions tab of that repository, it and it looks like the \u201cApplication testing / Running React-Testing-Library and Jest tests\u201d job has been changed to use Node 16 only now, instead of 12.x and 14.x./nHmm that is strange./nHmm seem\u2019s like it\u2019s wait for actions which simply don\u2019t exist and haven\u2019t for a while./nHmm seem\u2019s like it\u2019s wait for actions which simply don\u2019t exist and haven\u2019t for a while./nI\u2019m confused now./nI\u2019m talking about branch protection rules. I can\u2019t see exactly which rules exist in your repository (that\u2019s part of the repository settings, so not available to me as a random other user), but I can see those checks are shown as \u201crequired\u201d in the PR. That means there is a branch protection rule that says those jobs must have passed before the PR can be merged./nAh gotcha./nIn my case, there was a : somehow accidentally tacked onto the required job name. Not easy to figure out!/nfollowing on from this question:\nI have a required test akin to check_file_tests_if_file_changed which then runs a workflow file with multiple test jobs,/nIn my case, I had \"path filters\" on the PR. I wanted the deployment only happen if only tests were changed (src/main/test/** was ignored when triggering). However, we marked working deployment as a must. Thus, even if not triggered in some cases, it was required./nI've run into a similar issue. A community contributor put forth a pull request (Diapolo10/iplib3#105) to a project I'm maintaining, but the unit tests and linter do not run in the actual pull request./nIn my case there were merge conflicts and it turned out that \"Workflows will not run on pull_request activity if the pull request has a merge conflict. The merge conflict must be resolved first.\", like stated here: https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#pull_request/nIn my case, this seemed to be a transient issue where the workflow didn't run (couldn't see it in the list of checks) but the result was still being awaited. I ran the following commands to force another push to the PR:/nI'm seeing this issue quite often. In my case it seems to be a happening when we amend a commit and force push to the branch while there are previous jobs still running. The action runs are cancelled, but sometimes they stay lingering their \"waiting for status to be reported\" and we cannot do anything to re-trigger them. I have tried everything that crossed my mind, from re-running the actions to force-pushing, but the status of the check won't change. When this happens in a check that's required it prevents the PRs from being merged./n"
    },
    {
        "title": "Actions not running",
        "url": "https://github.com//orgs/community/discussions/57444",
        "upvotes": "202",
        "tags": [
            "Actions"
        ],
        "rections": 0,
        "replies": 5,
        "comments": 11,
        "body": "Bug/nI added some new workflows and cannot get them to show up at all in the Actions tab or via gh workflow list ... perhaps related? In my case, these workflows are triggered by these events: workflow_dispatch, scheduled/nWe are also experiencing issues in Actions where scheduled actions are simply not queueing up at all./nI am having the same problem. When I push to repo, actions don't get triggered./nSame here, I pushed code but nothing happens with the setup on: [push, workflow_dispatch] in workflow. By the way, six hours ago, everything is fine./nI'm also experiencing issues with workflows not running on pushes to my repository/nSimilar to this i've pushed up a new branch to a repo, and i'm unable to view the newly created branch in the github action:/nSame problem here: actions that trigger on push are not running/nSame problem, led me to push multiple nonsensical commits to verify this. SAD :(/nOur repository actions are getting triggered now./nIt's broken. I posted the same concern 2 weeks ago, and now, here we go again .../n"
    },
    {
        "title": "GitHub Actions: Filter on release",
        "url": "https://github.com//orgs/community/discussions/27053",
        "upvotes": "178",
        "tags": [
            "Actions"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 11,
        "body": "Currently, on:release doesn\u2019t support any filters (for example, on:pull_request supports branches filter). Would be nice if something like following gets supported:/nTo be relevant with webhooks (as it refers to in actions documentation), I would suggest :/nHi\u00a0@sidvishnoi,/nYou can now filter the release event using types, for example:/nAwesome! Can\u2019t wait to try it out!/nAre you planning on supporting additional filters?/nI guess you can use the step conditionals to filter by tag value? Not sure. Sorry I\u2019m not a GitHub support engineer./nFiltering on the actual job and/or step is exactly what I\u2019m doing right now. However, since I have a monorepo there are quite a few workflows that get triggered on the \u201crelease\u201d event only to be discarded a few moments later./nDoes anybody know what exactly the difference is between the published, unpublished, created, edited, deleted or prereleased types?/nIt\u2019s not easy to find, but it\u2019s documented here: https://docs.github.com/en/free-pro-team@latest/developers/webhooks-and-events/webhook-events-and-payloads#release/nThis syntax would be awesome for monorepos!\nIs there any news if this is going to be implemented? and if not could someway to cancel a action without yielding a error?/nThis is the solution we have however, it is not as good as allowing some type of filter in the on: clause as it creates builds in the actions list that start and immediately complete as opposed to not listed like actions that are skipped due to the on clause/n"
    },
    {
        "title": "Show and allow the use of actions not in trunk",
        "url": "https://github.com//orgs/community/discussions/11843",
        "upvotes": "173",
        "tags": [
            "Enhancement",
            "Actions",
            "ProductFeedback"
        ],
        "rections": 19,
        "replies": 7,
        "comments": 5,
        "body": "When creating a branch, I may require to create new workflows, adding a new workflow to .github/workflows. I want to be able to see this workflow when I go to my Actions tab, and I want to be able to execute these new workflows./nCan you give me more details about exactly what you're doing - what sort of triggers you're adding to this workflow - and what you expect to happen?  Our documentation should indicate the necessary things for a trigger to occur:/nHi @tyrann0us, I have asked the engineering team to get more details on this request.\nQuick Tip (you might know this already): To see what\u2019s planned next for Actions, visit our public roadmap/nThis is super confusing. We just hit this and only had a clue of the issue being \"Some events also require the workflow file to be present on the default branch of the repository in order to run.\". At a minimum, please just tell us which events need to be in the workflow branch. GitHub Actions testing is already hard enough as it is!/nIs there any update on this?/nHow can we develop in Trunk? Where are my Workflows in my Development branch? An update would be nice./n"
    },
    {
        "title": "Reached artifact limit?",
        "url": "https://github.com//orgs/community/discussions/27095",
        "upvotes": "155",
        "tags": [],
        "rections": 1,
        "replies": 0,
        "comments": 16,
        "body": "We\u2019ve started seeing failures in a 1/2 hourly CI process that created 4 artifacts (each with a single HTML file with unit test results)./nI saw this same error earlier too, and then my build got stuck. Seems like there\u2019s some kind of outage with actions right now./nThis looks like a bug. Looking into this. Will update soon. Thanks!/n@davidjdixon\u00a0@pixelmatrix Could you each send me the repository this is happening on (owner + name)?/nAlso running into this issue here\u00a0https://github.com/qawolf/examples/commit/f3e2f49400e0f60d4bf495d5ccd55a60bd2cc7c1/checks/nNo problem. Done./nI\u2019ve had this happen to me too./nThanks everyone. This is now resolved./nYou need to add new step:/nYou means fixes this bug? Or you updates docs? Even that, Currently there are no way to remove artifacts to reclaim the storage./nHi @mscoutermarsh,\u00a0I\u2019m still experiencing this issue. Could you provide more details on the resolution?/nStumbled into this issue today, super annoying\u2026\u00a0/nInteresting, so I figured out, that under\u00a0https://github.com/settings/billing\u00a0it says how much artifact space you have, it\u2019s 1GB in my case, and I ran out of it. But I don\u2019t see a way to delete artifacts\u2026/nSame here. Our team was already a bit over the limit, so I\u2019m a bit confused why it only started giving errors now, after we\u2019ve already been allowed to go over the limit and get charged./nI am also seeing storage going up but no way to delete old artifacts./nFor anyone still looking for a solution, there is a workaround. It might seem a bit dirty, but it works. Instead of pushing your artifacts using the upload-artifact, just push it to a special private repo. Worked just fine for me :slight_smile:/nwe are still getting this same problem on our private repo http://github.com/kylemath/EEGEdu/n"
    },
    {
        "title": "How to restrict execution of GitHub Actions workflow on tags creation only",
        "url": "https://github.com//orgs/community/discussions/24925",
        "upvotes": "154",
        "tags": [
            "Actions"
        ],
        "rections": 0,
        "replies": 1,
        "comments": 13,
        "body": "Hey guys!/nI was just running into this. I solved just using a full ref path:\u00a0/nShould it be with tags instead of branches?/nTags is just shorthand for refs/tags so branches: refs/tags/* is the equivalent and will do exactly what you wanted. I\u2019ve been testing it for a bit this afternoon and it\u2019s working./nWorked like a charm, thanks a lot\u00a0\u00a0@pilotconway\u00a0!/nI just ran into this myself - seems like a bug in Actions itself? The branches workaround seems fine for now but not properly descriptive IMO./nI agree, I have a couple work flows I really want to do something like, on _any_ tag push or these specific branches, but the docs don\u2019t have a good way to mix and match like that either. I\u2019m not sure if its not enough documentation or a lack of understanding on yaml on my part.\u00a0/nIn fact it seems it works half and half, as in:/nThis is a bug that should be fixed this week. It should only trigger when a tag is pushed./nThat are wonderful news. Thanks a lot!/ndid you manage to fix this error ?/nThis is still an issue for me, using the following syntax:/nAround here I can see the correct behavior (only execute only when the tag is pushed) when I fork the repo to my personal account, but it is triggered for every push on the organization\u2019s repo./nThis doesn\u2019t work. It runs on every single commit regardless of whether the commit was tagged. Double-quotes, single-quotes - doesn\u2019t matter./n"
    },
    {
        "title": "Manual triggers with workflow_dispatch on tag",
        "url": "https://github.com//orgs/community/discussions/26642",
        "upvotes": "147",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 6,
        "replies": 3,
        "comments": 12,
        "body": "At the moment, manually running workflow from UI can select which branch to run. Can we also get to select a tag?/nThis would be super nice. Waiting for this feature \ud83d\udd79\ufe0f/n+1 on this feature implementation/nThis is actually supported in the API, but not in the UI./n+1 on this feature too/n+1 It would be nice to have!/n+1 on this feature too!/nYou can now select tags from the UI./nHello, how can run this from the UI for the old tags? I\u2019m getting the message:/nWhat is an \u201cold\u201d tag?/nI meant every existing tag/nDoes the state of the code at the selected tag have a workflow with a workflow_dispatch trigger? If not, then I\u2019m afraid that you can\u2019t manually start a workflow run unless you add one and update the tag./nAny updates on this ? It would be great to manually run a workflow from any tag in a deployment use case./n"
    },
    {
        "title": "Option to limit workflow runs to those defined on the main branch",
        "url": "https://github.com//orgs/community/discussions/53430",
        "upvotes": "145",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 8,
        "replies": 0,
        "comments": 0,
        "body": "Product Feedback/n"
    },
    {
        "title": "Only allow merge from development into main",
        "url": "https://github.com//orgs/community/discussions/56942",
        "upvotes": "1288",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 9,
        "replies": 0,
        "comments": 0,
        "body": "Question/n"
    },
    {
        "title": "[Feature Request] Dynamic Job Name based on Inputs",
        "url": "https://github.com//orgs/community/discussions/63118",
        "upvotes": "1078",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 3,
        "replies": 2,
        "comments": 1,
        "body": "Product Feedback/n@zirkelc I've added this to our workflow and it works as expected. e.g.\nwith the below it would use the value from name and not just deploy in the UI./n"
    },
    {
        "title": "Passing an array literal to contains() function causes syntax error",
        "url": "https://github.com//orgs/community/discussions/27223",
        "upvotes": "551",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 2,
        "body": "Not sure if this is a bug or if I am doing it wrong?/nUnfortunately the expression syntax doesn\u2019t support JSON. An array would have to dereferenced from some object in the context - e.g. github.event.my_array/nThere\u2019s also the ability to do it as follows:\ncontains(fromJson('[\"monarch\", \"bloom\"]'), github.event.repository.name)/n"
    },
    {
        "title": "Make the \"Actions\" tab public",
        "url": "https://github.com//orgs/community/discussions/24989",
        "upvotes": "485",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 7,
        "body": "There should be an easy way for the public to see the workflow jobs./nAgreed - we\u2019re working on it.\u00a0 Thanks!/nThis seems to have been released. Thanks!/n@teohhanhui wrote:/nThis feature was present for a while but was removed for security reasons./nCould you elaborate on this?/nI can see how making the logs public might cause security concerns.\u00a0 So how about instead having a public page that shows a summary of the build without showing the logs.\u00a0 For example, it could just list each job and step name, with either a green checkmark or a red X to indicate whether that job/step passed.\u00a0/nPublic logs should be an option, this is just kind of anti-collaborative. Why is this not simply a per project option if there are concerns? If projects can\u2019t manage to keep their CI logs clean fine let them hide them, but my CI only accesses public resources and the entire docker script is in the repo itself, so it couldn\u2019t be more pointless to hide the logs. And it really hurts collaboration when I mention a bug I saw in CI on some external bug tracker, and then I can\u2019t link it. It\u2019s also silly to me that the entirety of the CI setup script and the entire project code is already google \u201cscraped\u201d, but then it\u2019s suddenly a problem when the action logs of building openly available code are public? I don\u2019t get it./n"
    },
    {
        "title": "Is it possible to use the same workflow in different repositories?",
        "url": "https://github.com//orgs/community/discussions/26327",
        "upvotes": "477",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 7,
        "body": "I have a lot repositories with the same architecture and very similar code and I would like to use the same workflow in each of them. There is some way to do this without duplicating a lot of yml files and not to have to modify all of them when I need to change the workflow?/n@raqyuste\u00a0,/nNot yet. It\u2019s on our roadmap to handle this. Definitely important./nOkay. Many thanks, this would be very useful.\u00a0/nAmazing! Definitely needed.\u00a0/nIs your roadmap shared anywhere publicly?\u00a0\u00a0/nThis ability is desperately needed. Especially as workflows get more complex, custom actions are nowhere near powerful enough to counter the problem of workflow duplication. Are there any updates on when this might be available? Also, as has been asked in this thread already, is there any kind of public roadmap to give a sense of what the priorities are?/nIs this yet implemented?\nIt is been 2 years but didn\u2019t find any relevant links to this.\nPlease guide me if it is already implemented/n"
    },
    {
        "title": "Matrix variable does not work in needs keyword",
        "url": "https://github.com//orgs/community/discussions/25364",
        "upvotes": "415",
        "tags": [],
        "rections": 12,
        "replies": 2,
        "comments": 7,
        "body": "I have a build matrix over a certain amount of build types. Then I want to create a job that tests those builds but each test job depends on the build of the same type so I tried:/nGithub workflow yml doesn\u2019t support use ${{matrix.xx}} in needs keyword. I would suggest you to specific all jobs name into the matrix job > needs keyword./nThat will work but it\u2019s not perfect as it will delay the workflow since if build-normal is faster to run than build-extra, test-normal should start straight after build-normal and not only after all build types have finished. I understand this is a limitation and therefore will accept your answer./nYou can simplify it to just specify needs: [build], but yes I haven\u2019t found out a way to for it to start the next job until ALL of the matrix jobs have complete./nHum, I am confused and I am getting a different behaviour where GitHub Action waits for all builds to be finished before moving./nSame confusion over here. Just because the Windows runner is slow I shouldn\u2019t have to wait for test feedback on the Linux runners. \ud83d\ude15/n3 years later and we still do not have an answer./nIt would be really useful to be able to start linux tests before the very slow mac runners are done. Is there any way to make that work?/n"
    },
    {
        "title": "Display job summaries in PR checks view",
        "url": "https://github.com//orgs/community/discussions/16451",
        "upvotes": "362",
        "tags": [
            "Enhancement",
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 2,
        "body": "The new job summaries feature for Github Actions is great for providing a more visual feedback on workflow results./nThe issue currently is that even if you add a summary, discoverability of it is very poor and other developers won't necessarily have the reflex to go to the summaries to see if their code is good or bad, as long as the checks pass./nWould be nice for the option of the details link to direct to the summary page. That's something we are having to make workarounds for/n"
    },
    {
        "title": "How to setup GitHub action in a self hosted VM instance ?",
        "url": "https://github.com//orgs/community/discussions/25553",
        "upvotes": "338",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 4,
        "body": "Hi,/nHello,\u00a0Jyotir, I\u2019m afraid this capability doesn\u2019t exist yet./nAny updates on self-hosted runner availability and pricing?/nAny more timeline updates here, we are ready to switch but this piece will be critical./nFollow this to add self-hosted runner to github:\u00a0https://github.blog/2019-11-05-self-hosted-runners-for-github-actions-is-now-in-beta//n"
    },
    {
        "title": "Plans to support global workflows in .github repository",
        "url": "https://github.com//orgs/community/discussions/24998",
        "upvotes": "289",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 5,
        "replies": 0,
        "comments": 11,
        "body": "I just found out about this awesome GitHub feature https://help.github.com/en/github/building-a-strong-community/creating-a-default-community-health-file/nHi\u00a0@derberg\u00a0,/nThanks a lot for a hint. Sorry for posting it in a wrong location. I just sent a feature proposal. Thank you again/nhi\u00a0@derberg, I have read in one of the discussion that GitHub Actions development team is working on enabling workflows on organization level.\u00a0\u00a0/n@ibakshay Can you post the discussion where you saw this?/nso, I was tired of waiting and could not imagine editing the same workflows in 37 repos manually, so I created a GitHub Action that supports exactly this, global workflows/nThis feature would be a huge improvement to GitHub Actions. If this feature ever makes the cut, I have one request/ndid you try my action as a workaround?/nNice workaround. However, I\u2019d really would like GitHub to support this natively!/nDefinitely. I would be more than happy to throw away my action. Even a day after writing it, but yeah, what else we can do, going to each repo and doing changes manually repo-by-repo would be just crazy/n@hermanbanken if you follow Conventional Commits and update commit_message for this action along the lines of ci: Update global workflows  you could easily exclude that in your microservices deployments./nThis should be a feature request, it is so annoying to not be able to configure a global workflow for every issue added to a repository, so you have to go to each repo and configure what should happen to the issue. That's ok, but imagine having dozens of repos and having to configure the same action for all of them./n"
    },
    {
        "title": "GITHUB_REF and GITHUB_SHA no longer work",
        "url": "https://github.com//orgs/community/discussions/25207",
        "upvotes": "282",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 6,
        "body": "I was working on finishing my workflow, when suddenly I started seeing nonsensical errors. It turns out GITHUB_REF and GITHUB_SHA are no longer getting set!/nThanks for letting us know, and sorry for the inconvenience.\u00a0 We\u2019re working on this now./nCan you post an update here once this starts working again?/nThis should have been fixed now\u00a0@svenstaro\u00a0\u00a0\ud83d\ude47\u200d\u2642\ufe0f/nThanks. Just tested, it\u2019s indeed working./nAre you sure this is working? I didn\u2019t get any value for GITHUB_REPOSITORY today./nI also had issues with GITHUB_REPOSITORY, but it looks like github.repository might work?/n"
    },
    {
        "title": "Variable Management in Github",
        "url": "https://github.com//orgs/community/discussions/25755",
        "upvotes": "261",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 12,
        "body": "Currently moving from an on-premise pipeline composed of Bitbucket, TeamCity and Octopus Deploy to Github and loving having a single platform where I can define everything as code - so far so good. But to my surprise and coming from Octopus Deploy, variable management is really a big pain point and pretty much a deal breaker for many teams. And I\u2019m a little puzzled as why this is not discussed more in the community (I may have missed it), making me thing we might have missed something./nThose features, at least when it comes to managing secrets, are available, but only with GitHub Enterprise Cloud./n@spol-vt could you provide a link with reading material in the docs to that extended variable management capabilities?/n@lirantal Environments - GitHub Docs/nThe secrets per environment are nice if you an enterprise plan. The thing I miss the most is that you can\u2019t have variables that are readable\u2026 Why only have secrets? \ud83d\ude05/n@spol-vt  - So some of the feature set is partly there, in terms of secrets, but not on an organization level though where you can\u2019t scope to environments. We share a ton of variables today via Octopus Deploy, scoped for the various environments, ready to use. This could be resolved in others ways than inheritage (submoduling, npm/nupkg etc), so I\u2019m not seeing this as the biggest challange. Not having a unified and context specific \u2018view\u2019 of you variables in you workflow(s), in the really big pain point, where you have to declare all environment specific varibles per environment prior to deploying./n@lirantal - regarding composed actions, that might be an idea going forward. Depending on what kind of initiative is going on around the community, I might start to build a variable framework based on the ideas of Octopus Deploy - e.g. variables in a json structure, scopes to environment/workflow/jobs/steps, supports variable substitution and context aware depending on the environment you are deploying to, workflow etc. But I really want to make sure this is not on the backlog for GH, as I want to use vanilla GH if possible \ud83d\ude11/nMakes sense, yeah :slight_smile:/nI ended up building a \u201cpre-processing\u201d tool for GHA workflows tailored to my company. This included variables, an equivalent to YAML anchors and pre-populating jobs with common steps. Downside is we have to remember to re-run this process every time we change the input workflow, but it makes it much simpler to manage./n@dorner interesting way to go about it. If you are allowed to share any details about your current implementation (publicly/privately), that would be greatly appreciated for inspirational purposes./n@jnus you can see a cleaned-up version of it here: https://github.com/dorner/gha-config This version probably doesn\u2019t work per se because I scrubbed some of it, but that\u2019s the general approach./nSo I\u2019ve been working on an action, json-variables, for this particular GH issue, and while its still work in progress before I publish it, I thought I might share it here and maybe get a little input./nFyi - v1.0 of the action just released \u2192 json-variables \u00b7 Actions \u00b7 GitHub Marketplace \u00b7 GitHub/n"
    },
    {
        "title": "Allow Parallel Jobs to run on the same runner",
        "url": "https://github.com//orgs/community/discussions/14483",
        "upvotes": "258",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Hi,/n"
    },
    {
        "title": "Sorting or Grouping of Workflows in the Actions area",
        "url": "https://github.com//orgs/community/discussions/62553",
        "upvotes": "236",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 1,
        "comments": 2,
        "body": "Product Feedback/nyep, this has become a problem for us so we're looking at other ci/cd tools/nSalem/n"
    },
    {
        "title": "Triggering actions by other repository webhooks",
        "url": "https://github.com//orgs/community/discussions/26384",
        "upvotes": "233",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 6,
        "body": "Hi, I\u2019d like to ask if there\u2019s a way of triggering actions from other repository webhooks without leaving GitHub platform./nYou can put a client_payload in a repository_dispatch and use that information during your run.\u00a0 However, you still need a way to send that event which is going to require your own webhook for now.\u00a0 This sort of automatic dependency building is something we are looking at for the future but the potential scale concerns are significant./n@chrispat i cannot see client\\_payload documented anywhere:/nUnfortuately the docs are lagging a bit.\u00a0 If you simply add something like/nFor anyone landing here and needing a more specific example:/nHello,\nThe following line works for me:\ncurl -XPOST -u \"${{ secrets.PAT_USERNAME}}:${{secrets.PAT_TOKEN}}\" -H \"Accept: application/vnd.github.everest-preview+json\"  -H \"Content-Type: application/json\" https://api.github.com/repos/xxx/yyyy/dispatches --data '{\"event_type\": \"build_application\"}'\nwork only default baranch https://api.github.com/repos/xxx/yyyy/\nHow to use non-default brunch ?/n@github, has there been any movement on this?/n"
    },
    {
        "title": "Feature Request: schedule with inputs",
        "url": "https://github.com//orgs/community/discussions/74698",
        "upvotes": "228",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 1,
        "replies": 1,
        "comments": 1,
        "body": "Product Feedback/nFor future readers, this can be made somewhat nicer by (ab)using env:/n"
    },
    {
        "title": "Get user email from GitHub action",
        "url": "https://github.com//orgs/community/discussions/40405",
        "upvotes": "216",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 17,
        "replies": 2,
        "comments": 6,
        "body": "Product Feedback/nYou generally shouldn't try to use the user's email address as the author email of a commit they didn't make. The actions/checkout documentation recommends a mail address that should make the commit visible as having been created by an Actions workflow./nI see that there is https://docs.github.com/webhooks-and-events/webhooks/webhook-events-and-payloads#pull_request and under user object, there is email and name, but they are not populated. Anyone know how these are populated?/nany update regarding this?!/nI'm also interested in a an official way of doing this./nIs there any reason why GitHub doesn't expose the user's email in the GitHub Action Context? Would be great if we can retrieve the user's username & email based on who triggered the event (pull request, new commits, workflow_dispatch)./nYou can obtain the default @users.noreply.github.com email of the actor from the event payload, contained in the github context./n"
    },
    {
        "title": "Have a new workflow run from a PR (none main branch) before committing into main branch possible?",
        "url": "https://github.com//orgs/community/discussions/25746",
        "upvotes": "212",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 57,
        "replies": 15,
        "comments": 20,
        "body": "Hi,/nYou can trigger off of a pull request event in your workflow file:/nThanks for looking!/nI believe that Github does not yet support running workflows that only exist in a none main branch. Am I correct?/nThanks for the support!/nMy apologies, just found that I have the paths, in which the changes at the moment do not full-fill as I\u2019m only working in workflow./nfor workflow_dispatch, you HAVE to have a version of the file in the main branch./nBut workflow_dispatch will only run the workflow version that\u2019s checked into the main branch, right?/nAhhh, see that is where things get interesting.  To initially make it show up on the Actions tab, and so that you can trigger it manually, it has to be checked in to the main branch./nok, got it. thanks./nThat I don\u2019t know I\u2019d have to test it and see. The docs don\u2019t say. Logically it makes sense that yes it would have to be on the main branch for repository_dispatch to work/nAs far as I can tell with my limited experience with repository_dispatch, it only runs workflows on the default/main branch when triggered by a push on a non-default branch. Would love to be proven wrong. :slight_smile:/nThis is what I\u2019d love:/nI was struggling with this too. I followed what I picked up from this thread and did the following:/nFwiw, as long as the repository is public, you can create a public fork and set your public fork\u2019s default branch to the version which has the code you want to demonstrate. (And possibly w/ the same name as the expected destination branch, instead of the name of the feature branch in your fork as used for your PR.)/nSeems like you either need to have it first in main or create a fork like described by @jsoref./nI\u2019m still unsure about how to test a newly implemented workflow before integrating it into the default branch. \ud83e\udd14 Is there an approach to experimenting with a new workflow and verifying different commands/images, etc., without needing to merge every modification into the master beforehand for testing?\u201d/nMost workflows can be tested on your computer with act. I still would like to see this implemented for edge cases./nI would like to be able to test workflows with a workflow_dispatch and a choice input on a branch before merging it to the main branch.\nSeems to me this is currently impossible, but I'd be happy if someone proves me wrong ;-)/nHow can such a simple thing be SO SCREWED up on Github?? I simply cannot understand how completely messed up GH actions are. It is absolutely NORMAL for any developer to NOT push things directly on main, I do not want to mess up my main branch only to develop a new action. Unbelievable./n"
    },
    {
        "title": "How to write multi-line condition in if",
        "url": "https://github.com//orgs/community/discussions/25641",
        "upvotes": "210",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 32,
        "replies": 3,
        "comments": 6,
        "body": "I used '>' to describe a multi-line condition in if./n@kei-yamazaki,/n@brightran,\nThank you for your reply./n@kei-yamazaki ,/nJust an FYI for anyone wondering:/n[FYI to people that just found this  discussion]/n[FYI to people that just found this  discussion]\nIn the meantime it seems to work to combine | and ${{ ... }} in multiline if-conditions (on GHE 3.0.10):/n"
    },
    {
        "title": "Why the workflow does or doesn't run on pull_request event?",
        "url": "https://github.com//orgs/community/discussions/46022",
        "upvotes": "202",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "Question/nSo, I've got an answer from the support./n"
    },
    {
        "title": "Cannot disable \"successful\" Action notifications",
        "url": "https://github.com//orgs/community/discussions/28367",
        "upvotes": "178",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 10,
        "replies": 5,
        "comments": 4,
        "body": "Starting earlier today, I've been receiving web notifications for successful action jobs. These are super annoying as I utilize my notifications for items requiring attention./nwhy it's disabled ?/nI had the same issue and was absolutely flooded with notifications the last hours, super annoying./nI can confirm I also started seeing this issue today. I also experienced this weird behavior in the settings web UI. Will see if it resolves things./nI can confirm being flooded with notifications - I had disabled these in the past./n"
    },
    {
        "title": "Matrix job failes are overriden by the passing ones",
        "url": "https://github.com//orgs/community/discussions/70437",
        "upvotes": "173",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Question/n"
    },
    {
        "title": "Create matrix with multiple OS and env for each one",
        "url": "https://github.com//orgs/community/discussions/25468",
        "upvotes": "155",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 5,
        "body": "I\u2019m trying to create something that share the same commands, and each OS can configure the commands via env variables. Is such thing possible ? I\u2019m trying with this approach but it\u2019s failing:/nI am very glad to see you here. According to your scenario, I would suggest you use including configurations in a matrix build./nThank you very much\u00a0@yanjingzhu\u00a0/nJust tested this configuration and have to say it does not work. Take a look at screenshots:/nCorrect workflow is:/nAs far as I\u2019ve seen in a little experiment on my own, using the same key multiple times under include (here: ubuntu-latest) overwrites the job configuration and the last entry wins. That is, the matrix is configured for 1x macOS and 2x Ubuntu, but first Ubuntu configuration is overwritten by the second, so both end up with TARGET: x86_64-unknown-linux-musl etc./n"
    },
    {
        "title": "Crypto-mining attack in my github actions through pull request",
        "url": "https://github.com//orgs/community/discussions/25609",
        "upvotes": "154",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 9,
        "body": "Hello,/n\ud83d\udc4b Welcome!/nI got an answer from support, they confirmed that these kind of attacks happens and they took countermeasures quickly even before I reported it (that was them that flagged and removed the nasty user and pull request)./nThanks for the update and I\u2019m really glad to hear that. I know these attacks can be alarming./nGlad it got resolved and that it was a proactive response./nI\u2019m confused how this is an \u201cattack\u201d, or at least who it\u2019s attacking./nI\u2019m confused how this is an \u201cattack\u201d, or at least who it\u2019s attacking./nIt would be nice to exclude folders like .github from pull requests opened by non-collaborators./nCryptocurrency is a type of digital currency that uses encryption techniques to regulate the generation of units of currency and verify the transfer of funds. While it offers many benefits, such as decentralized control and increased privacy, it also poses certain risks to investors and users. Despite the risks, cryptocurrency can bring good profits. I trade on [removed by moderator] for several years now, and thanks to a lot of experience, trading brings me a consistently high profit./nI believe github added some controls to prevent actions from being run on public repositories. I do know these are not new as I implemented them a while ago at my org: https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/enabling-features-for-your-repository/managing-github-actions-settings-for-a-repository#controlling-changes-from-forks-to-workflows-in-public-repositories./n"
    },
    {
        "title": "How to create dynamic matrix value?",
        "url": "https://github.com//orgs/community/discussions/27150",
        "upvotes": "147",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 5,
        "body": "hello,/nCurrently, we have no any way to make the values of a matrix parameter can be dynamic./nIm actually really keen on this idea./nYou can now build a dynamic matrix with fromJson()\n/nthank you!\nwill check the latest workflow feature./nI got dynamic matrix working by passing in a json object. An example here: dockerfiles/ci.yml at 6701b8cffc3b3628ad72b541d2c36ac87e1e9b8f \u00b7 frezbo/dockerfiles \u00b7 GitHub/n"
    },
    {
        "title": "Variable secret name",
        "url": "https://github.com//orgs/community/discussions/25334",
        "upvotes": "145",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 12,
        "body": "I need to get the secret, but the secret name will vary from branch. Some like:/nGitHub automatically redacts secrets printed to the log, but you should avoid printing secrets to the log intentionally.\nhttps://help.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets#accessing-your-secrets/nI\u2019m not issuing with the echo./n@tiagogouvea,\nYou want to set the value of a variable as the name of a secret and then access the secret via this variable, right?\nI\u2019m afraid it is difficult to achieve this request. Because when using the expression syntax ( ${{ }} ) to access a property of contexts, it does not support to access the property name via a variable in the expression, we need to explicitly provide the property\u2019s full name directly in the expression./nThen it can\u2019t be done. \u2639\ufe0f/n@tiagogouvea something like this should work:/n@cschleiden , I tried as your suggestion, but get an empty value. It seems does not work./nCould you post your workflow?/n@cschleiden ,/n@brightran: env variables are case sensitive, you have a mismatch between SECRET_NAME and secret_name. Changing your first example to this works for me:/n@cschleiden,/nIn addition, the ref name is also in the github context. So something like this/nIt\u2019s really simple!/n"
    },
    {
        "title": "Required workflows should have a less strict run mode",
        "url": "https://github.com//orgs/community/discussions/43890",
        "upvotes": "1288",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 11,
        "replies": 5,
        "comments": 10,
        "body": "Product Feedback/nI was thinking the same thing. Having everything as required makes sense for some, but not all use cases./nI had the same feeling after I did my tests. When I read about this new feature, I thought, \"yeah, a feature that allows me to add all the necessary Workflows without creating a new workflow in each repo\". But then I saw this is more a way to create required status at the org level./nI'd love if this functionality provided a toggle to turn the required checks on/off./nAlso have use cases for being able to apply workflows to multiple repos in an org without making it a \"required\" check. Pretty please, GitHub :)/nAs an addition, all jobs inside a required workflow are made required (even if they don't run)./nAnd something else that would benefit from a setting to make checks optional is support for different types on: pull_request. These can be supplied in the workflow and it will work actually:/nThe distinction between organization-wide required workflows and checks that are marked as required using a branch-protection rule is also confusing. Take this picture for example:/nTo add another scenario where the strictness is an annoyance: we have some automation that updates documentation and indices, triggered on pushes into the default branch./nSame concern from my side.\nWe need another type of workflows which can be configured by Org owners to run for certain repositories, but do not have them as required.\nThey shouldn't block ability to merge even if they failed for some reason./nHi \ud83d\udc4b ,/n"
    },
    {
        "title": "Add user-wide secrets for Actions",
        "url": "https://github.com//orgs/community/discussions/4136",
        "upvotes": "1078",
        "tags": [
            "Enhancement",
            "Actions",
            "ProductFeedback"
        ],
        "rections": 20,
        "replies": 3,
        "comments": 3,
        "body": "I currently use Drone CI, and the one thing that I really love about it is the ability to use user-wide secrets./nYou know you can set them at the organization level, right? Still want to have them for a user as well, or even a team level: that would help as well and saves you the hassle of using them on the organization level and then adding each repo that can use it to the allow list of the secret./nThis is probably one of the sole reasons I'm avoiding Actions for my builds/nI used to use the Azure DevOps pipelines, it has a variable group feature, it would let me manage my secrets across different pipelines.\nCurrently, there's the organization secret, maybe we could have a user secret too?\nReally hope for that, thanks./n"
    },
    {
        "title": "Define multiple workflows in one yaml file",
        "url": "https://github.com//orgs/community/discussions/25342",
        "upvotes": "551",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 7,
        "body": "I tried to define multiple workflows on one yaml file using yaml document separator --- and it did not work. Is this by intention or did I miss something?/nAt the moment, that\u2019s not supported.\u00a0 You\u2019ll need a single workflow per yaml file./nOkay. Too bad, but thank you for your quick answer :slight_smile:/nHi, are there any plans to support this feature in the future ?/nAgree that this would make for cleaner code, especially when doing things like this!/nAny update on this feature? Just tried to do the same thing and got a parsing error. Not sure why this would be an issue when it is native yaml functionality, and certainly would lead to much cleaner code!/nAny update on this feature? Still not working./nping! this is useful/important (unless I am missing an alternative way) when defining a shared set of workflows and wanting to include them all in a bunch of repos in same org/n"
    },
    {
        "title": "[Feature Request] Runners should recognize and report an out of memory situation",
        "url": "https://github.com//orgs/community/discussions/50571",
        "upvotes": "485",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 3,
        "replies": 0,
        "comments": 1,
        "body": "Product Feedback/nIs this the correct place for this feature request? I see a lot of upvotes (thanks!) probably coming from the issue in actions/runner where I linked this. It would really be nice to know if this was seen by the team and maybe put on the road map. Let me know if there are any questions or concerns!/n"
    },
    {
        "title": "Possible to use conditional in the \"env\" section of a job?",
        "url": "https://github.com//orgs/community/discussions/25725",
        "upvotes": "477",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 35,
        "replies": 7,
        "comments": 4,
        "body": "I have several use cases where the environment variables for a job change depending on if I am on the master branch or not, or for example if the build up to the point has failed./nThere is no support for a ternary operator, but there are workarounds. You can try the following:/n@bagel-dawg,/nThanks! I\u2019ll try out both solutions and select one./nI would recommend fromJSON('{\"false\": \"danger\", \"true\": \"good\"}')[job.status == 'success'] because it is more explicit and is a clean solution. With this pattern you can also do more sophisticated mapping like fromJSON('{\"Linux\":\"so\",\"macOS\":\"dylib\",\"Windows\":\"dll\"}')[runner.os]./n"
    },
    {
        "title": "Feature Request |trigger action on \"Pull Request Approved\"",
        "url": "https://github.com//orgs/community/discussions/25372",
        "upvotes": "415",
        "tags": [
            "Enhancement",
            "Actions",
            "ProductFeedback"
        ],
        "rections": 35,
        "replies": 8,
        "comments": 5,
        "body": "I have a workflow that I have completely built out, only to find out that the actions api doesn\u2019t support \u201cpull-request: approved\u201d (or some variant)./nA native solution was found:\nhttps://github.community/t5/GitHub-Actions/GitHub-Actions-Manual-Trigger-Approvals/m-p/58137/highlight/true#M10446/nHi\u00a0@everops-alex\u00a0,/nThis workaround seems not to work if you want have multiple different workflows. I\u2019m deploying to two environments with different yml-files from branches test and master. In following situation it bugs:/nThis would be very helpful because adding the custom check on jobs if: github.event.review.state == 'approved' makes the Actions tab noisy/nAdding to this: It looks like concurrent jobs are canceled if people leave a review which seems to trigger another run. Following scenario:/n"
    },
    {
        "title": "job.name expression not evaluated when job skipped",
        "url": "https://github.com//orgs/community/discussions/13261",
        "upvotes": "362",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 24,
        "replies": 3,
        "comments": 2,
        "body": "See original issue that was closed actions/runner#1215./nThank you for the feedback./n@chrispat Any update on this?\nTrying to change in the UX the job name dynamically\n/n"
    },
    {
        "title": "Run workflow _only_ on merge_group",
        "url": "https://github.com//orgs/community/discussions/51120",
        "upvotes": "338",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 9,
        "replies": 5,
        "comments": 4,
        "body": "Question/nHaving exactly the same problem. We want to have end-to-end testing only triggered when a PR is ready to be merged into the main branch and not before. After all PR checks succeeded and resolved all the PR comments when I click green add to merge queue button, there are no additional checks running and I just get an email notification that it was merged./nI have nothing to add, just that this would be a really valuable feature for my team. The use case:/nThis would be a very valuable feature for us as well ; the use case is like that of the original author. The job performs a deployment, and we would like this job to run only when someone submits a PR for merge to main and we would like the PR to be cancelled if the job fails. merge_queue seemed to be the right answer, and I attempted something identical to option 1 outlined above, without success./nOne way that works for me is:/n"
    },
    {
        "title": "Feature Request: Pre-trigger action - Dynamically populate choice options for manual workflow trigger dialog",
        "url": "https://github.com//orgs/community/discussions/44799",
        "upvotes": "289",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Product Feedback/n"
    },
    {
        "title": "Confused with \"runs-on\" and \"container\" options",
        "url": "https://github.com//orgs/community/discussions/25534",
        "upvotes": "282",
        "tags": [],
        "rections": 8,
        "replies": 1,
        "comments": 3,
        "body": "I have just started experimenting with the CI/CD functionality of GitHub Actions, and I fail to understand the \u201cruns-on\u201d and \u201ccontainer\u201d options./n>\u00a0Why both \u201cruns-on\u201d and \u201ccontainer\u201d are required when I want to run a container, and what exactly does this mean? Let\u2019s say for example that I have \u201cruns-on: ubuntu-latest\u201d and \u201ccontainer: centos-latest\u201d. Does this mean that my requested centos-latest image will run on an ubuntu-latest virtual machine? Why do I even have to specify the host operating system (ubuntu-latest) if I plan to use a container and do everything I want to do there?/nExcellent explanation! Thank you so much my friend!/nSearching for exactly this explination - many thanks for explaining so cleanly/n"
    },
    {
        "title": "Disable Re-run jobs button",
        "url": "https://github.com//orgs/community/discussions/28179",
        "upvotes": "261",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 4,
        "replies": 0,
        "comments": 2,
        "body": "Is it possible to disable the \"Re-run jobs\" button for a selected workflow in GitHub Actions?/nI too would like to know an answer./n@torrocus It's been over a year since you made this issue, so no idea if you need this anymore, but in the event someone else comes across this issue and is curious, here's a solution:/n"
    },
    {
        "title": "Action trigger when PR base branch is updated?",
        "url": "https://github.com//orgs/community/discussions/64119",
        "upvotes": "258",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 3,
        "body": "Product Feedback/nWe understand your need for a workflow trigger on updates to the base branch. Unfortunately, as of now, GitHub Actions does not natively support this specific trigger. However, you could consider using a scheduled workflow or a webhook to periodically check for changes to the base branch and trigger the necessary actions./nI would like to have this functionality too./nThe edited action type will trigger on base branches changes (https://docs.github.com/en/webhooks/webhook-events-and-payloads?actionType=edited#pull_request) but it is not a great solution because it will also trigger on PR body changes, which is weird because the kind of things you'd automate on base changes are very different from the things you'd do on PR description changes./n"
    },
    {
        "title": "uses keyword does not evaluate expressions ?",
        "url": "https://github.com//orgs/community/discussions/44832",
        "upvotes": "236",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 3,
        "comments": 3,
        "body": "Question/nIt is possible to evaluate expressions in the value of the uses field in a GitHub Action. However, it looks like the issue you're encountering might be related to the syntax of the expression you're using./n@rudolph9 To use the value of an input in the uses field, you will need to pass it as a parameter to the action. One way to do this is to use the with keyword./nIs it possible to evaluate an expression in the value of uses?/n"
    },
    {
        "title": "Workflow context when triggered by issue_comment",
        "url": "https://github.com//orgs/community/discussions/25917",
        "upvotes": "233",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 7,
        "body": "Hi!\u00a0 I am writing a simple bot that will run status checks when a comment (something like \u201c@MYBOT build\u201d) is made on a pull request./nComments on issues and pull requests will have the ref set to the default branch.\u00a0 However, you should be able to inspect the full\u00a0github event context\u00a0for the information about the pull request in question./nYeah, thanks for the reply.\u00a0 I can indeed get the pull request number from the event, but I can\u2019t get the PR ref directly from the event which means I need to do an API call to figure out what branch to checkout.\u00a0 Complicates the workflow but it\u2019s doable./nWe have a similair issue. It would be really great to have something like/nTrying to set this up myself now. Did you ever get it working?/nThis is what I tried,/nI\u2019d suggest using this workflow package: https://github.com/Khan/pull-request-comment-trigger/n@ethomson So I always need to merge my changes in default branch first?/n"
    },
    {
        "title": "Add labels to workflow_dispatch runs",
        "url": "https://github.com//orgs/community/discussions/13689",
        "upvotes": "228",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 10,
        "replies": 3,
        "comments": 2,
        "body": "I have a workflow that launches some integration tests by me. To reduce code duplication it is one composite workflow that takes inputs to select the test suite./nThanks @daltonv - we've talked about this problem a bit and I appreciate this additional information. We do have this on the backlog but I'll make sure that this is captured because I think that this is a good illustration of the problem./n\ud83d\udc4b - Runs triggered via workflow_dispatch will now show the branch it was triggered on. Thank you!/n"
    },
    {
        "title": "Share volumes between GitHub Actions jobs",
        "url": "https://github.com//orgs/community/discussions/5379",
        "upvotes": "216",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "When working with GitHub Actions it's very convenient to have multiple jobs to perform various tasks. This allows to create more complex and flexible workflows where some jobs are performed concurrently while others are being awaited for. This also helps to improve the performance of the workflow by parallelizing the work./nTechnically you can also uses outputs to share things. I'm not sure offhand what the restriction on size is./n"
    },
    {
        "title": "Support context/matrix variables and Composite Actions inputs in steps of type 'uses'",
        "url": "https://github.com//orgs/community/discussions/9049",
        "upvotes": "212",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 3,
        "replies": 4,
        "comments": 5,
        "body": "It is currently not possible to use variables from the matrix (in a regular workflow), or inputs (in a Composite Action) to define the Actions to be used in steps of type uses. The workflow won't start because of a parser/syntax issues: the 'uses' attribute must be a path, a Docker image, or owner/repo@ref./nThanks for the feedback - you're right that at the moment we resolve actions before we expand any of these.  It's something that we can explore in the future./nYou might be able to cheat by defining a local composite action.yml on the fly having expanded the matrix manually w/ the pieces you need and then doing a uses to that local action.yml./nI return to this issue every few months (working on a couple of years!). We're trying to build out a reusable set of steps and workflows in Github Actions, and one of the stumbling blocks is that composite actions can't reasonably refer to \"library\" actions in the shared actions repository./nHi,/nAs a work around to test an github action I used the following code:/n"
    },
    {
        "title": "Deployment by Tag ref to make the Tag/Release the subject on environments page",
        "url": "https://github.com//orgs/community/discussions/17292",
        "upvotes": "210",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 1,
        "comments": 8,
        "body": "When using the Github deployments API to CREATE deployment with reference to a tag, the deployment will feature other subjects like either a commit SHA or Pull-Request./nWould be very useful for us!/nAnd deployment should be referenced under Release/nWe actually just spend a lot of time trying to figure out why it didn't show our tag./nThis would be such a good behavior!\nI use teamcity for deployments which triggers when a new release/tag is created.\nI also update the deployments in github based off of that build./nI think this discussion here is the mentioning the same thing? https://github.com/orgs/community/discussions/39377/nI did not found your question and also asked about this around a year ago but no answer so far too. Would be great to see actual ref used for deployment instead of some pull requests or commits you did not use when making deployment./nIt appears that the deployment history will either show the PR branch name/PR #, or just the short commit hash of a deployment trigger - is that correct? In the screenshot below, the top deployment was made from a feature branch (no PR opened against it) and it shows just the commit hash./nWe have an on-demand workflow that deploys a given commit. Whenever we do that we see the latest merged PR in the Deployments/History tab. Therefore we never look at the deployment histories tab. We should be able to give a commit/tag to show in the deployments page./n"
    },
    {
        "title": "Actions Monorepo Support",
        "url": "https://github.com//orgs/community/discussions/9537",
        "upvotes": "202",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 2,
        "body": "I\u2019d prefer for each project within my monorepo to have its own .github directory and workflows, which will be executed based on the paths modified within the commit./nThanks @rawkode for the feedback.  I agree that there's some improvements that we could make for monorepos, I'll put this on our backlog./nIs there any update on this feature request ? @ethomson/n"
    },
    {
        "title": "Need better permissions for GitHub Packages from GitHub Actions",
        "url": "https://github.com//orgs/community/discussions/9840",
        "upvotes": "178",
        "tags": [
            "Actions",
            "Packages",
            "ProductFeedback"
        ],
        "rections": 1,
        "replies": 10,
        "comments": 1,
        "body": "The main benefit of private artifact feeds like GitHub Packages is distributing packages internally in an organization.  Currently this is very difficult in GitHub Actions because GITHUB_TOKEN is repository scoped.  While GITHUB_TOKEN should not ever be able to write another repository, it should be allowed to read any repository's packages within the same Team/Organization./nThanks for reaching out.  We have added support for the org-level container package which means that you can use GITHUB_TOKEN to pull and push images that have visibility outside the repo.  One can set the visibility  of the package to internal, public, or private. If visibility is set to internal another repo will be able to pull the package using GITHUB_TOKEN.  We are working on adding this functionality to other packages types./n"
    },
    {
        "title": "How to implement an \"after success\" action?",
        "url": "https://github.com//orgs/community/discussions/27141",
        "upvotes": "173",
        "tags": [],
        "rections": 1,
        "replies": 1,
        "comments": 6,
        "body": "I have the following action, named \u201cNode CI\u201d, which runs on every push:/nPut them both in the same workflow, and add:/nHow would one implement an \u201celse\u201d script, such as using if for success, and something else for failure (what I\u2019m trying to do)/nAny solution to the if/else problem?/nTake a look at the Workflow Conclusion Action./nThis is how I implemented if/else with slack notifications for my failed builds:/nThis is a great solution. You can also do it with curl:/n"
    },
    {
        "title": "GitHub Container Registry points to incorrect README",
        "url": "https://github.com//orgs/community/discussions/25665",
        "upvotes": "155",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 5,
        "replies": 4,
        "comments": 10,
        "body": "Hi!/nDo you know if is there a way to set a custom path for this README?/nThere\u2019s no way to do this right now but we plan to enable this in the future. We\u2019ll likely look for the documentation metadata label when we support this./nHello @clarkbw, is there any news on this subject?\nIs there a public feature request or something similar that you could follow to be kept informed about updates on this topic?/nSame problem here, it would be great to link to a different README using the org.opencontainers.image.documentation label./nI'm facing the same issue and wanted to ask whether there is a possibility to customize the README.MD for a package on ghcr.io?/n+1/nExample of usecase : mono repository pattern/nI assume there has been no progress on this yet, but apart from that, it looks like this discussion is tagged with the Actions instead of the Packages label, can any of the moderators update it?/nWould love to see this, we have 22 packages in this repo and it's very confusing in a monorepo setup for users/nJust ran into this. My use case is to not show the README.md at all for the Docker image. It would be nice to be able to configure this/n"
    },
    {
        "title": "How to prevent running actions on push when pull_request is also specified?",
        "url": "https://github.com//orgs/community/discussions/25654",
        "upvotes": "154",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 6,
        "body": "I\u2019m using the classical configuration:/nHey! I am trying to understand exactly what you are looking for here. Is it fair to say that your desired workflow is: \u201cBasically on every push or force-push, no matter where to (a branch with or without PR) I want the build to run.\u201d or am I misunderstanding something?\u00a0/nWhat I want is:/n> Hey! I am trying to understand exactly what you are looking for here. Is it fair to say that your desired workflow is: \u201cBasically on every push or force-push, no matter where to (a branch with or without PR) I want the build to run.\u201d or am I misunderstanding something?\u00a0/n\u00a0 > The workflow on pull request is building a pre merged code from dev to master (refs/pull/id/merge)/nThank you so much, this totally clears things up \ud83d\ude47\u200d\u2640\ufe0f/nHave you figure out the answer? It\u2019s happing to me as well. I don\u2019t want multiple builds(for push and PR) when PR is already created/n"
    },
    {
        "title": "Provide workflow file name (or id) in environment variables",
        "url": "https://github.com//orgs/community/discussions/10052",
        "upvotes": "147",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 3,
        "comments": 2,
        "body": "Currently we can get the name of the workflow using GITHUB_WORKFLOW, but there is no env var for the workflow file name. This is important in the case where we want to use the API call to list workflow runs. The workflow_id param accepts either a workflow id or a workflow file name, neither of which are provided in the context of a workflow run./nHmm, thanks for the feedback.  This seems like an oversight that we can remedy./nAnd a GITHUB_WORKFLOW_FILE or GITHUB_WORKFLOW_PATH will be useful to configure the paths when setting the triggers:/n"
    },
    {
        "title": "Is there a way to run GitHub Actions against a temporary private fork created from a Security Advisory?",
        "url": "https://github.com//orgs/community/discussions/35165",
        "upvotes": "145",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 15,
        "replies": 1,
        "comments": 6,
        "body": "Is there a way to run GitHub Actions against a temporary private fork created from a Security Advisory?/nThis is a significant pain point for Keycloak and limits the usefulness of the GitHub Security Advisory product overall./nThis same problem came up for me in a separate, partially-related discussion:/nThis limitation is also very problematic for the Quarkus project. It makes this feature close to unusable as we really need to make sure the tests are passing before merging and running them locally is not really an option./nHere's this feature request on the GitHub product roadmap: github/roadmap#627/nHere's what I just posted in the Security Advisories Feature Requests & Improvements thread./nAdding my voice, we have been frustrated by this lack for a long time. We need CI in temporary private repositories. There are security concerns when adding it, but the current situation is also a security problem: The release process constantly risks being disrupted by problems CI would have discovered. So we risk security fixes being made public quite some time before the fix is actually usable, granting more time for bad actors to exploit before fixes are installed./n"
    },
    {
        "title": "Long workflow names are truncated in UI",
        "url": "https://github.com//orgs/community/discussions/14398",
        "upvotes": "1288",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 3,
        "replies": 0,
        "comments": 4,
        "body": "Hi,/nThanks @scott-doyland-burrows - we don't have any work in flight to change this but I'll put this on the backlog and discuss with the design team. I appreciate the feedback./nChiming in as this impacts my day-to-day flow a fair bit./nThe same problem. I have about 50 workflows with names contains 30-35 letters./nThe same problem. API call returns me 3 jobs with truncated name terragrunt-workflow / Plan (provisioning-maradiy-io, provisioning-development, provisioning/terragrunt/provisioning-mar...  and I can't identify which I should to select by name.\nAPI should return full job name and truncate on UI./n"
    },
    {
        "title": "API Endpoints for Fork pull request workflows from outside collaborators Option?",
        "url": "https://github.com//orgs/community/discussions/35808",
        "upvotes": "1078",
        "tags": [
            "Actions",
            "APIandWebhooks",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 4,
        "body": "I am looking for some API endpoints to GET / SET the Fork pull request workflows from outside collaborators option shown in the screenshot below for both an organization and a repository. I thought they'd be in https://docs.github.com/en/rest/actions/permissions, but I don't see them there./nJust reached this. Any update on this?/nis there a way to get these settings via API ??/nHaving such a setting would be very handy/nI scanned permissions and workflow runs today, and it doesn't look like it's possible yet./n"
    },
    {
        "title": "Cannot set default.timeout-minutes",
        "url": "https://github.com//orgs/community/discussions/25472",
        "upvotes": "551",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 1,
        "replies": 0,
        "comments": 5,
        "body": "Looking at https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#defaults it seems like I should be able to define a default timeout-minutes that will be applied to each job, however, when I have:/nIt might be a syntax issue \u2013 could you try something like this?/nThanks for the response! We are able to set the value at the job level, but this requires setting the timeout for every job we add./nCould you clarify which keys are able to be set in defaults ?/nAha, I see, thanks for clarifying. I was thinking that defaults.run was simply expanded documentation for that default but I see that it is the only supported option. I think the documentation could be clearer to that point. I\u2019ll fill out the feedback form./n@jszwedko Today I tried/n"
    },
    {
        "title": "Vars context not accessible in composite action",
        "url": "https://github.com//orgs/community/discussions/49689",
        "upvotes": "485",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 4,
        "replies": 0,
        "comments": 5,
        "body": "Question/nIf you want to use a variable in a composite action, you need to pass it as an input parameter./nvars context is not meant for secret values.\nIt is a UX bug, isn't it?/nI had to do the following:/nThis is particularly obnoxious since secrets are accessible. Also because shared workflows do inherit vars and secrets. Forcing the use of input instead of allowing the use of vars makes this less powerful without any clear explanation of why the decision was made./nBumped into this too, I would really appreciate some detailed explanation of the rationale behind this strange current behavior or perhaps a plan to remediate it by allowing vars and secrets access from composite actions \ud83d\ude4f/n"
    },
    {
        "title": "Specifying startup arguments for GHA service containers",
        "url": "https://github.com//orgs/community/discussions/52675",
        "upvotes": "477",
        "tags": [
            "Actions",
            "General"
        ],
        "rections": 9,
        "replies": 0,
        "comments": 1,
        "body": "General/nIt was answered in 2020 on https://github.com/orgs/community/discussions/26688#discussioncomment-3252877 by a engineer was was on the Code to Cloud team at the time, it's not possible./n"
    },
    {
        "title": "Error: docker-compose command not found",
        "url": "https://github.com//orgs/community/discussions/116610",
        "upvotes": "415",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 3,
        "replies": 3,
        "comments": 4,
        "body": "Bug/nI've been getting this sporadically today as well. To test that I wasn't going insane (because seemingly nothing changed with the code) - I reran the job with no new commits, submitted commits with comment changes and it seems to pass or fail at random times. I do use docker-compose so that could be the issue. I'll check out the discussion. Thanks for the link!/nComment of appreciation for this issue and leading us to a fix! \ud83e\udd18\ud83c\udffb/nChange docker-compose to docker compose it's work/nChange docker-compose to docker compose it's work/n"
    },
    {
        "title": "How to set a default value for a workflow_dispatch variable?",
        "url": "https://github.com//orgs/community/discussions/26322",
        "upvotes": "362",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 45,
        "replies": 1,
        "comments": 6,
        "body": "I see people using workflow_dispatch github.event.inputs as I am here: ltabus/up.yml at 8e896bb75330757e440fe7f429aaa9ead7cfd90e \u00b7 kaihendry/ltabus \u00b7 GitHub/nUnfortunately, this is not possible. There is no way for you to define inputs on a push event. The github.event.inputs context will contain key value pairs only if the workflow was triggered by a workflow_dispatch event./nI keep on getting bitten by this issue. I want to deploy to staging by default. And then/n@kaihendry  Have an approval on production environment. Then staging deploys and waits for production to be approved/nWhile not DRY, this is a possible workaround:/nI just ran across this issue myself. I want to define inputs as per workflow_dispatch with default values that are defined when using other event triggers./nI guess you are not alone. I need this too, in case i have branch push and i would like the values to be there.\nHow is Github Actions going to replace Azure DevOps with so many lacking features? I wonder\u2026/n"
    },
    {
        "title": "Increasing Limits for GitHub Secrets",
        "url": "https://github.com//orgs/community/discussions/49539",
        "upvotes": "338",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "Question/nAgreed/n"
    },
    {
        "title": "Accessing Composite Action within Reusable Workflow from called workflow repo",
        "url": "https://github.com//orgs/community/discussions/18601",
        "upvotes": "289",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 3,
        "replies": 0,
        "comments": 4,
        "body": "Composite Actions can be sourced from either an explicit public repo/nRaised discussion #18602 for a way to reference own reusable workflow's repo via a context or similar./n@HariSekhon Thanks for initiating the discussion./nWhile the input works, it breaks dependabot workflows. Well, it's not that it breaks them, but rather, that dependabot won't bump your inputs when bumping an action./n+1.\nI create some composite actions and store it in the same repository as my reusable workflows. Having the ability to refer to the composite actions with the same commit (e.g. ${{ github.workflow_sha }}) would be very helpful to develop and test the actions & workflows more productively/n"
    },
    {
        "title": "Check pushed file changes with git diff-tree in GitHub Actions",
        "url": "https://github.com//orgs/community/discussions/25950",
        "upvotes": "282",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 10,
        "body": "My goal is to fetch a list of files that were modified between 2 commits (or in 1 commit) using the git diff-tree plumbing command, and I want to do this inside a GitHub Actions workflow on the ubuntu-latest runtime./nPlease remove/reset the \u2018fetch-depth\u2019 for \u2018actions/checkout\u2019, output works fine then for the command \u2018git diff-tree\u2019. /nThank you for the quick response and making the extra effort of looking inside one of my repositories. A fetch-depth of 1 is definitely the issue here. Increasing it solved my issue./nHi\u00a0@weide-zhou, thanks for your response./nSolved with:/nI am trying to compare against the target branch instead of previous commit. Is there something that would work like this?\u00a0/nThis almost works for me. I\u2019m trying to find occurences of a string. Maybe you can help./nCan you send link to repo/yaml?/nIn case you\u2019re still looking for answer @shotor or if someone has the same issue, this \u201cbad object\u201d error is happening because of the default config for actions/checkout@v2:/nPrevious answer (by @pozil) fetches full repository and it may be slow on big repositories. My solution is to fetch with depth 1 by using actions/checkout and fetch later manually. Also my solution works for both Pull Requests and normal pushes to branches./nDue to some issue I had on PR's I want to share my solution for the PR part (PUSH is CP from a solution above)./n"
    },
    {
        "title": "apt-get update failing with \"Conflicting distribution\" error",
        "url": "https://github.com//orgs/community/discussions/25256",
        "upvotes": "261",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 16,
        "body": "I have a GitHub Action workflow that runs an apt-get update. The job\u2019s runs-on is ubuntu-18.04. I get an error like this:/nHave this problem too, workflow was fine yesterday./n/me too/nI see the same problem too\u00a0https://github.com/kubernetes/minikube/pull/6723/checks?check_run_id=459207826/nI also have the same problem/nI also face this problem !!\u00a0/nAlso facing the same issue!/nAslo getting this error, my docker builds are failing \ud83d\ude26/nAlso running into this issue, seems to be a problem with the microsoft repos that are included by default with github actions. This should hopefully be solved soon. It seems to happen every so often with the microsoft repos, last time i had a sync error message from one of their repos and had to rerun the action at a later time./nThere is an issue with a xenial reference being included in the microsoft-prod list. You can work around it with the following step at the start of any job that involves an apt-get update:/nThe problem seems to be solved, my workflow is now working again!\u00a0/nLooks like it is, my workflows are now completing./n@zombiezen\u00a0,/nCan confirm this has been fixed. Running my workflow again succeeded. Thank you!/nHm, I\u2019ve restarted my job twice, just now, and I still see errors. Am I the only one?/nusing Ubuntu 20.10 and I\u2019ve got the same error. Tried sudo apt-get update: it reads the packages list, but the I am showed the following error:/nFYIO, I experienced the same issue a third time again with Ubuntu 20.04 (latest): Fix syntax slip \u00b7 LinqLover/squeak-tracedebugger@45212e9 \u00b7 GitHub\nAfter ~1h, the issue was resolved by itself, but maybe any hubber out there has an idea how to improve the reliability of these services in the future. :slight_smile:/n"
    },
    {
        "title": "Feature request - Environment Deployments with payload",
        "url": "https://github.com//orgs/community/discussions/19304",
        "upvotes": "258",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 12,
        "replies": 4,
        "comments": 4,
        "body": "Being able to add custom task and payload properties to the Deployment so that we can leverage Deployment webhook events and external deployment protection rules. This will allow us to use attestations and external approvals based on more than just the repo, environment and sha./nProbably breaking some rule now. Bump!/n1 year bump! \ud83d\ude05/nJust ran into this issue. Odd that using Github's actions for deploys locks us out of using other Github deploy features/n"
    },
    {
        "title": "[REQUEST]: Allow skipping environment approval on specific branches",
        "url": "https://github.com//orgs/community/discussions/112177",
        "upvotes": "236",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "Product Feedback/nA partial self-correction - I realized that in option 1, you can avoid a security vulnerability if you apply a branch requirement on the version of the environment that does not have an approval requirement. That would prevent workflow authors from swapping them. However, the points about redundant environment variable/secret management and clunky semantics of what an \"environment\" is at that point still stand./n"
    },
    {
        "title": "Running a bash script",
        "url": "https://github.com//orgs/community/discussions/26403",
        "upvotes": "233",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 20,
        "replies": 7,
        "comments": 6,
        "body": "Hi there,\nWhat is the simplest way to create a workflow that runs a bash script?\nI understand I can create a separate action which runs the script and use it in my workflow. I have done that for action shared among multiple repositories./nWith that setup the path to the script is relative to the root of your repository, so if your script is .github/script.sh that\u2019s all that\u2019s needed in the run step. Remember that the file must be marked as executable, or you need to explicitly call bash with the script as parameter./nTo be more explicit, you can write ./.github/script.sh./ncall bash with the script as parameter./nThanks for your help./nwhat say i want to pass in a value (say from a gh secret) to the shell_script how would I do that?/nI use like this:/n"
    },
    {
        "title": "Action run being trigger multiple times",
        "url": "https://github.com//orgs/community/discussions/25029",
        "upvotes": "228",
        "tags": [],
        "rections": 10,
        "replies": 2,
        "comments": 7,
        "body": "I have added an Action on: release and on each release, it being trigger 3 times in parallel\u2026\u00a0/nThis is due to GitHub events not really being singular but being loosly a set of events that can happen to a given resource.\u00a0 If you look at the documentation for the release event\u00a0it will be triggered when a release is published, unpublished, created, edited, deleted and prereleased./nI got bit by this; I\u2019m having two parallel runs instead of 3 though. But to be clear on my end, released is being triggered on both \u201ccreated\u201d and \u201cpublished\u201d release event./nHello, the \u201crelease\u201d event is triggered by multiple actions:\u00a0published, unpublished, created, edited, deleted and prereleased. By default, all of these will trigger the workflow. You can specify which type of actions should trigger your workflow, for example:/nI have the same issue but with the \u201cpush\u201d event: the action is executed twice in parallel. In the documentation, there are no different activity types for push. Why is my action triggered twice?/nI hate to say that, but I have the same issue \ud83d\ude26/nThis also happens with me. I have three jobs, one for each system, but they run twice each, totalizating 6./nI'm still experiencing this issue, even tho i've already specified/n"
    },
    {
        "title": "Actions stopped working according to schedule",
        "url": "https://github.com//orgs/community/discussions/119603",
        "upvotes": "216",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 1,
        "replies": 0,
        "comments": 4,
        "body": "Bug/nI am having the same issues with my jobs scheduling as well. Not running as scheduled or massive (6+ hour) delays. Glad to hear I am not alone./nwith this setup:/nWith this setup, this has yet to be scheduled in almost 3 hours./nim also facing similar issues, im syncing data with github action, use something like 0 * * * *, but huge delay in recent 1 day. often delay for several hours./n"
    },
    {
        "title": "How to set timeout for deployment review confirmations?",
        "url": "https://github.com//orgs/community/discussions/55614",
        "upvotes": "212",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 7,
        "replies": 0,
        "comments": 2,
        "body": "Question/nWould also like the ability to change the default 30 day timeout, or ideally have the jobs not fail when 30 days has passed./nAnyone figure this one out? Experiencing the same thing./n"
    },
    {
        "title": "GitHub Actions - no way to get PR number on push event?",
        "url": "https://github.com//orgs/community/discussions/27071",
        "upvotes": "210",
        "tags": [],
        "rections": 31,
        "replies": 6,
        "comments": 10,
        "body": "Hey there,/nHi @timhaines\u00a0/nIt works! I used squash-and-merge to merge a PR, and you are able to use the SHA-1 of the squash-merged commit on master to get its PR nuber, which I didn\u2019t expect to work./nJust FYI, this API is not supported for production use.\nQuote from\u00a0https://developer.github.com/v3/repos/commits/#list-pull-requests-associated-with-commit\u00a0\n_ Warning: \u00a0The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact\u00a0GitHub Support\u00a0or\u00a0GitHub Premium Support__._/nThanks @gimenete !! However, I think it only works for the first commit of a pull request because it\u2019s not possible to find pull requests for the next GITHUB_SHA. After managing it with Git commands to find the first commit I realized that GITHUB_REF had the format refs/pull/<PULL_REQUEST_NUMBER>/merge so I got the number from it. Please, I think it would be interesting to have an environment variable from GITHUB such as GITHUB_PULL_REQUEST like TRAVIS_PULL_REQUEST on Travis CI. Thank you so much!/nThis worked for me:/nThank you so much @sirago !! The same solution with another access way:/nStill not work for me\u2026 tried both way\nmy trigger is:\non:\npush:\nbranches:\n- \u2018**\u2019/nHi @razzinger , please, try this trigger for pull requests to be able to get the pull request number:/nHi @timhaines,/nIf anyone is wondering how to get a complete, yet working, yml file, here it is:/n"
    },
    {
        "title": "Allow workflow on deployment_status filtering for state and environment",
        "url": "https://github.com//orgs/community/discussions/33210",
        "upvotes": "202",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "We have workflows that need to run when the deployment_status state is success, failed, or error. We also want to run specific workflows only when a specific environment is successfully deployed. Today we accomplish this with an if condition on the job, but this still triggers the workflow and we see dozens of runs that do nothing creating a lot of noise in the workflow view./nThis is something we'd really like as well, the envionment + status + branch filter.\nExample use case: you are deploying to dev via third-party system (GHA only start the deployment, but can't follow wait for it to finish) and want to deploy to prod only if that succeeds. When using a workaround with if, list of checks per commit is going to have \"skipped\" when anything that doesn't match the condition is deployed, leaving a bad developer experience where one part of deployment is in one place, while the other part should be searched for manually on the \"Actions\" tab ://n"
    },
    {
        "title": "Missing Development Dependency Indicators for GitHub Registry Response for Ruby Packages",
        "url": "https://github.com//orgs/community/discussions/43861",
        "upvotes": "178",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 32,
        "replies": 28,
        "comments": 12,
        "body": "Bug/nWe are facing the same issue too. GitHub Registry server is returning development dependencies in the metadata when it shouldn't./nSame here, +1!/nIt looks like the https://x-access-token:ghp_XXXXX@rubygems.pkg.github.co/myorg/specs.4.8.gz response from the GitHub Private Registry server is incorrect. Putting together a sample to post here./nSame here, can confirm that unpacking the gem and inspecting the metadata everything seems correct but the compact index returned from the package api is including development dependencies./nConfirming we are seeing the same issue.  Here are our observations:/n@nbibler we have identified the issue & working on the fix. Will update here once the fix is deployed/n@ankitkaushal01 we're now running into the following errors (already during normal bundling, which used to work before)/nSeeing this as well with a different version number/nHaving the same issue/n@ankitkaushal01 would it be possible to revert the fix so at least normal bundling works again? As it is right now our entire devops pipeline is broken including deploys etc./nEdit: Note I saw this before the above reversion.  But keeping it here for posterity.\nEdit2: The problem is back/nare you folks still facing \"Malformed version number\" & \"gem version conflicts with development dependencies\" these issues ?\n@dweinand @andreas-venturini @jedrekdomanski @joshvince/n"
    },
    {
        "title": "Run a matrix element only if a condition is true",
        "url": "https://github.com//orgs/community/discussions/9044",
        "upvotes": "173",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 18,
        "replies": 7,
        "comments": 4,
        "body": "Describe the enhancement\nA way to define when to run a matrix. Similar to a jobs and steps, matrices would have and if: ... rule/nThanks for the feedback - I definitely see the value in this.  I'd like to give some thought to more advanced workflows, like what you're describing, in the new year.  I appreciate this example./nHi @maximousblk, @ethomson,/nI would personally like to see matrix available in jobs.foo.if, which I guess could cover this use case as well./nAnother option might be to dynamically generate the matrix https://tomasvotruba.com/blog/2020/11/16/how-to-make-dynamic-matrix-in-github-actions//n"
    },
    {
        "title": "Manual Jobs",
        "url": "https://github.com//orgs/community/discussions/25274",
        "upvotes": "155",
        "tags": [],
        "rections": 2,
        "replies": 1,
        "comments": 6,
        "body": "It would be great if GitHub actions could support running jobs manually./nThe workaround I use for manual workflows is to set the trigger to the repository_dispatch webhook event, and then send a POST request to it locally./nUnfortunately this only allows you to trigger the build on the default branch, not on custom branches./nI\u2019m not sure if this works for your use case, but I think you could have the workflow be triggered on the default branch, but then contain a checkout action that checks out your desired non-default branch, etc./nHi all, I\u2019m not entirely sure if this is appropriate or not to self promote here, but my buddy and I built an extremely basic MVP for handling this exact situation, because we wanted this feature as well:/nAnother option is a slash command style \u201cChatOps\u201d solution./nnow, You can approve or reject jobs awaiting review./n"
    },
    {
        "title": "Environments for private repositories",
        "url": "https://github.com//orgs/community/discussions/25221",
        "upvotes": "154",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 4,
        "replies": 3,
        "comments": 11,
        "body": "/nSame question for private repositories in a Pro plan. Have a lot of them and I see no Environments available still\u2026\nI have been waiting for the environments feature, and surely expected that \u201cgenerally available\u201d would mean available for also private repositories./nSame boat here, been waiting for a long time already and they seem to forget \u201cprivate repositories\u201d\u2026/nIt appears to be available only for enterprise and for public repos. I seriously hope they reconsider and make this available for private repos on Teams and other plans. It is pretty core, bare bones CICD necessities./nSame here as a paid pro user. Really hope we could use this environment feature ASAP. It\u2019s already 2022./nThis is really frustrating. I\u2019m having the same issue. I don\u2019t need all of the GitHub Enterprise features for the current project. I just need to be able to define a development and a production environment./nIt\u2019s incredible to me that 2 years later this is still a thing. Get with it GitHub, release environments for all users who pay for your service. Of all providers, I would expect that you understand the necessity of environments from a fundamental level during software development. Sounds like it is time to find another provider who\u2019s more in tune with the development cycle./nI am looking into GitLab.com just because of this thing./nI could not believe my eyes when I learned that it's GH Enterprise feature only. Seriously it should be enabled on GH Teams plan as it's a core CI/CD feature./nIm not able to find the https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment#environment-protection-rules on environments created on private repositories on our paid Teams plan. Is this a feature that require the enterprise plan?/nFinally \ud83d\ude00/n"
    },
    {
        "title": "Scheduled workflow missing github.event.repository context",
        "url": "https://github.com//orgs/community/discussions/12269",
        "upvotes": "147",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 7,
        "replies": 4,
        "comments": 4,
        "body": "On GitHub actions, the github.event context for a scheduled job is like:/nThanks for the feedback, we'll take a look! \ud83d\udc40/n+1/nI created a repo to dump workflow contexts for various event types at https://github.com/dhimmel/dump-actions-context. Here are some of the fields beneath the github context for a scheduled event (workflow logs):/nHello! Just wanted to let ya'll know this feature is now live.  Check out the changelog.  Thanks!/n"
    },
    {
        "title": "Add label names filter to pull_request_target on labels",
        "url": "https://github.com//orgs/community/discussions/14407",
        "upvotes": "145",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 12,
        "replies": 3,
        "comments": 3,
        "body": "Please inspect the following workflow:/nThanks for the feedback @yahavi. At the moment, as you note, there's no way to handle this at the workflow trigger level, but I'll put this on the backlog./nI would also like to have this feature. Is there currently a workaround?/nAny update here, when this feature would be available? Or alternatively, having if: on the top level is also an improvement./n"
    },
    {
        "title": "Trigger a workflow from another workflow",
        "url": "https://github.com//orgs/community/discussions/26294",
        "upvotes": "1288",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 2,
        "replies": 5,
        "comments": 7,
        "body": "I remember seeing somewhere that you could trigger a different workflow from another workflow?/nYep, you can c****reate a repository dispatch event to trigger a workflow from another workflow./nThis action\u00a0might help you if you want to use an repository_dispatch event workflow to achieve this./nSo I could also use this across repositories? That\u2019s handy, as I would like to automatically update specific files in a repository when I update them on another./nCan this be achieved by using GITHUB_TOKEN yet?/nSame requirement on my end. can this be done with the GITHUB_TOKEN instead of a PAT? or perhaps some other mechanism which has a limited security concern Vs the PAT ?/nWe have the same drive to move away from PAT tokens as they are difficult to scope well and are tied to a single user (not to mention using up a paid user seat in your org)/nIt is now possible to do this with GITHUB_TOKEN - https://github.blog/changelog/2022-09-08-github-actions-use-github_token-with-workflow_dispatch-and-repository_dispatch//n"
    },
    {
        "title": "Multiple choice/Checkbox as input for manual workflows.",
        "url": "https://github.com//orgs/community/discussions/40421",
        "upvotes": "1078",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "Question/nHi there @de3129 and welcome to our community! Thank you for asking a great question \ud83d\ude42\nWhile you are waiting for a reply to your question, here are a few things you can do:/n"
    },
    {
        "title": "Annotation limitation",
        "url": "https://github.com//orgs/community/discussions/26680",
        "upvotes": "551",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 6,
        "replies": 1,
        "comments": 5,
        "body": "I am trying to create a linting tool which runs as a GitHub action, however I keep running into limitations on GitHub actions./n@olivernybroe\u00a0,/nYep and that limitation is why I cannot show the errors as annotations, as 10 annotations is a really low limit./n@olivernybroe\u00a0,/nIt\u2019s possible to output Markdown summaries now, which can be used to generate nicely formatted reports:/n@olivernybroe have file a feature request? If yes could you link it here?/n"
    },
    {
        "title": "Startup Failure",
        "url": "https://github.com//orgs/community/discussions/26746",
        "upvotes": "485",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 16,
        "replies": 1,
        "comments": 19,
        "body": "I\u2019m getting startup failure on my action, repeatedly./nHi @bytejunkie, welcome to the GitHub Support Community! Is this on a forked repository, or a repository you share with other people? It could be that the GitHub Actions app hasn\u2019t been installed on this repository (something that happens automatically when a workflow is created) and that\u2019s causing this error./nhi @thomasshaped,/nI am interested in the solution, because I have exactly the same error in my repo. I just startet using github actions, first I tried one workflow on my own. Then I tried the \u201cgreetings\u201d example workflow. Both say \u201cStartup failure\u201d without any further information./nI fixed this problem by creating a new repo and added only a readme.\nThen I used one of the example-actions (in this case it was \u201cGreetings\u201d), copied the master branch from my old repo and edited the action afterwards.\nWorks fine now.\nBut I still do not understand why it does not work in my previous repo./ndid you maybe move your repo from one computer to another? i did (windows to mac) and its about this time that it stopped working./nWe\u2019ve been having the same problem for about 3 days now. There have not been any changes to the workflows. We can\u2019t get any information out other than the message \u2018Startup failed\u2019./nI also encounter this issue when I added the default github action, which only \u201cecho Hello, world!\u201d/nI am facing the exact same error too. Its been hours I have been trying to see what the issue may be./nIt looks like it\u2019s related to actions./nOk\u2026so at least for us, the mystery may be solved. \ud83d\ude26/nSorry for the delay everyone, there was some investigation that took some time to track down what\u2019s going on here. In the mean time it looks like @markbirbeck has stumbled onto the actual issue here before I could report back! \ud83d\ude06/ni can confirm that changing the setting highlighted above has worked on my repo too./nThanks @thomasshaped./nI am facing the same issue and tried the option but luck\u2026/nHaving the issue for the last hour or so as well. It\u2019s not the option because I switched it to \u201clocal actions\u201d and get a different error message. The error I get is just \u201cAn unexpected error occurred when executing this workflow.\u201d/n@jcs090218 @chalonverse Looks like GitHub Actions is having a problem.\nhttps://www.githubstatus.com//nI realized that! Thank you!/nFor those coming to this thread;/nI also encountered a \u201cStartup Failure\u201d as the result of a syntax error.  In my case I had spaces in the job name:/n"
    },
    {
        "title": "Support Deployment Environment field for Reusable Workflows",
        "url": "https://github.com//orgs/community/discussions/18085",
        "upvotes": "477",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 1,
        "replies": 0,
        "comments": 1,
        "body": "Feature Request to allow the environment field to be set on a calling reusable workflow, eg:/nThis would be a very nice upgrade to shared workflows!  Also to call out a very important relation to this, having the vars expression context available in the with inputs.  That way a shared workflow can be truly generic./n"
    },
    {
        "title": "Self-hosted runner security with public repositories",
        "url": "https://github.com//orgs/community/discussions/26722",
        "upvotes": "415",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 15,
        "replies": 4,
        "comments": 16,
        "body": "Documentation [1] says:/nYeah, you are right. If your workflows is not triggered by pull request event, then dangerous code on fork repos could not run on your self-hosted runner./nThanks! Then I suggest to change wording in documentation to be less scaring, and maybe add validation in runner which prints big bold warning whenever self-hosted runner is triggered in PR event in public repo./nI\u2019m not sure this is safe. What happens if someaone creates a PR modifying the workflow to run on pull_requests?/nOnce a repo has been forked you aren\u2019t in control of changes on the fork right? So it seems fine to me as long as the malicious code is not run on the main repo/n@vivekteega Yeah, you are right. Please pay attention to pull requests from fork repo to your main repo. A workflow on pull_request event will get premerged code of forked repo to main repo and the codes in forked repo could be run in your self-hosted runner.\u00a0/nThank you for this info. I was very spooked as well by the big warning in the docs. I\u2019m considering deploying a self-hosted running and just making a big comment in the workflow to say \u201cDO NOT TRIGGER ON PRs\u201d./nWe\u2019re investigating using self hosted runners at my work, but we\u2019ve got hundreds of public repos so this issue is quite a blocker for us - something like @kousu suggests where you can prevent forked repos using self hosted runners at an organisation level would be very helpful./nWhat with a situation, where we have a public repository and would like to run the tests with some physical device, e.x. webcamera?\nMy original thought was to create a self-hosted runner and attach the device physically to it, but as the docs specified, it\u2019s dangerous to use self-hosted instances on public repositories.\nAre there any alternatives?/nI am sorry to tell you that there is no alternatives. To test with physical device , you need to use self-hosted runner.\nIf it is possible for you, I would suggest you to use a private repo./nI think a good feature is if in the future we could trigger a workflow when an authorised user comments on an open PR. At the current moment it is hard to see how to deploy a self hosted runner in my development as ideally I would like to run CI before I push any new code to any of my branches./nYeah I like the suggestion from @bdevierno1 . I would be great if the action can be triggered only by comment (e.g. /test) that is coming from one of the people that are part of the OWNERS file. Would that be possible?/nI think it would also be useful to have different event types for \u201cinternal\u201d and \u201cexternal\u201d pull requests, where \u201cinternal\u201d means pull request originates from the same repo with workflow. If workflow is triggered by internal PRs only it would require having write access to repo to run code on self-hosted runner./nBut isn\u2019t it more dangerous that was discussed before in this thread?/nYou are correct, I tested this myself./nI don't understand what is not safe about running on self hosted when it's not a fork, but a commit to a branch or PR from a branch on the same repository. And I thought there were already such conditionals in the case of github actions secrets./nI'm using a standard GitHub provided runner for PRs where it runs tests and validates that a Linux build passes./n"
    },
    {
        "title": "Workflows do not have access to defined variables when runnning by dependabot",
        "url": "https://github.com//orgs/community/discussions/44088",
        "upvotes": "362",
        "tags": [
            "Bug",
            "Actions",
            "Dependabot"
        ],
        "rections": 16,
        "replies": 1,
        "comments": 4,
        "body": "Bug/nSee also #44322: this is the same behavior for Pull Request created from a fork repository./nYes, it is surprising how variables have only made it to the Actions subsection of Secrets and variables, but not to Codespaces or Dependabot./n@ashokirla, I thought I'd surface this discussion since you wrote the blog post announcing this functionality.  Does GitHub have plans to make the configuration variables accessible to dependabot and codespaces?/n\ud83d\udc4b The changes to support Actions Variables for dependabot actor PRs was deployed. Every workflow triggered by dependabot actor would have access to Actions Variables./n"
    },
    {
        "title": "GHA visualization graph considered harmful",
        "url": "https://github.com//orgs/community/discussions/18035",
        "upvotes": "338",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 3,
        "replies": 0,
        "comments": 3,
        "body": "TL;DR: The job dependency visualization graph box provides no value, but actively hinders you from getting to the relevant data. It's counterproductive and should be removed, hidden by default or, as a last resort, moved to the absolute bottom of the page)./nTo add to this, it would be beneficial if there were a way to use the workflows to customize how the visualizer will display certain jobs or collections of jobs. Now that Reusable Workflows can be up to 4 layers deep, jobs that reside within those workflows can cause the visualizer to expand greatly, especially if building a continuous workflow that deploys to multiple environments in a dependency chain./nI raised this issue separately with GitHub before I knew of this discussion. In our case the particular issue was that new users were not finding our artifacts, since they are hidden below the graph and scrolling the page - or indeed learning that it is even scrollable - is extremely difficult for the uninitiated as magicus describes.\nSo far Github has closed this as working-as-intended so we've just updated all of our documentation with instructions that will hopefully help new users to scroll the page and find the artifacts./nPersonally, I have resorted to using an adblocker and am blocking the element containing the visualization graph. But as you say, it does not help newcomers. :-(/n"
    },
    {
        "title": "Start \"services\" in a job that has a reusable workflow",
        "url": "https://github.com//orgs/community/discussions/58243",
        "upvotes": "289",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 12,
        "replies": 0,
        "comments": 1,
        "body": "Question/nI bumped to this problem as well.\nWe have a pretty complicated reusable workflow for releasing our projects.\nHowever, even if build and release lifecycle is similar for all the caller projects, every of them might require their own set of service containers: Redis, RabbitMQ, MySQL etc./n"
    },
    {
        "title": "Ability to specify workflow_dispatch input defaults via url query parameter?",
        "url": "https://github.com//orgs/community/discussions/28505",
        "upvotes": "282",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 1,
        "comments": 1,
        "body": "Given a workflow file version_bump.yml with the following workflow_dispatch inputs:/nHey @dsherret, did you find a way to do this?\nThanks!/n"
    },
    {
        "title": "Boolean inputs act differently in workflow_dispatch and workflow_call",
        "url": "https://github.com//orgs/community/discussions/9343",
        "upvotes": "261",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 6,
        "replies": 2,
        "comments": 4,
        "body": "Hello,/nThanks @AvivPeledTalon - I agree that this difference is a bit confusing.  The reason is because when workflow_dispatch was conceived it was all strings, and it learned about boolean types after-the-fact.  To allow people to declare existing \"boolean\" inputs as actual boolean inputs, they remained strings./n@AvivPeledTalon We have rolled out improvements and here is the blog post\nhttps://github.blog/changelog/2022-06-10-github-actions-inputs-unified-across-manual-and-reusable-workflows//nhi @ajaykn ,/n"
    },
    {
        "title": "Add option to notify only on completed workflows",
        "url": "https://github.com//orgs/community/discussions/12057",
        "upvotes": "258",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 1,
        "comments": 1,
        "body": "Today, there is an option to disable emails for successful workflows./nThis is good feedback, @lpulley, I appreciate it.  We'll take a look at improving this for workflows that are cancelled by concurrency./n"
    },
    {
        "title": "Button to remove all cache entries of a repo?",
        "url": "https://github.com//orgs/community/discussions/36878",
        "upvotes": "236",
        "tags": [
            "Enhancement",
            "Actions",
            "ProductFeedback"
        ],
        "rections": 4,
        "replies": 2,
        "comments": 1,
        "body": "Hi!/n@mkurz the inactive caches in a repository get auto cleaned up after 7 days (or earlier if repo's caches is above quota of 10GB storage). Can you please help with the use case for \"delete all\"./n"
    },
    {
        "title": "GitHub Actions Feature Roadmap",
        "url": "https://github.com//orgs/community/discussions/27218",
        "upvotes": "233",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 5,
        "body": "There are certain features and requests I routinely see for GitHub actions and after searching the forum can find no apparent solution. Is there a public location with a feature roadmap of what new features are in progress and approximate timelines for them? For example, organization and team level secrets and their management?/nCurrently , Github Actions doesn\u2019t provide a Feature Roapmap to public . Secrets API will be published at the end of this month./nI\u2019d really like to have some visibility of what\u2019s on the GA roadmap./n@dexterlakin Thank you for pointing this out.\u00a0 For the request for GA roadmap , could you please share your idea in the Feedback form for GitHub Actions ?/n@yanjingzhu I\u2019ve raised the feedback now./nFor anyone else that missed it you can find the public roadmap here now:/n"
    },
    {
        "title": "Required workflows only trigger on pull_request events",
        "url": "https://github.com//orgs/community/discussions/43889",
        "upvotes": "228",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 8,
        "replies": 0,
        "comments": 2,
        "body": "Product Feedback/nAgree. And also allow the required workflow to run on push and schedule events as well./nCan this not be solved by setting an if in your required workflow? Eg:/n"
    },
    {
        "title": "Trigger a required workflow on all PR's when applied on repo",
        "url": "https://github.com//orgs/community/discussions/44516",
        "upvotes": "216",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 1,
        "comments": 1,
        "body": "Product Feedback/nIt is possible to trigger a workflow on an existing pull request (PR) or manually, but it requires additional configuration./n"
    },
    {
        "title": "github actions/checkout@v3 got 403 error",
        "url": "https://github.com//orgs/community/discussions/65335",
        "upvotes": "212",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 7,
        "replies": 7,
        "comments": 13,
        "body": "Question/nyes my github runner on ali cloud also fail to wget to (https://api.github.com/repos)/nSame here, with my ali cloud instance on Virginia. Could someone take a look?/nAlso the same with runner in Singapore./nSame problem with runners in Hongkong alicloud./nI have also encountered this problem. Can someone help me solve it?/nSame here.  Our runner is hosted on Aliyun Hong Kong./nSame here. Self-hosted runner with Hong Kong server. Keep getting 403 error./nsame here in Ali cloud at Thailand/nSeems to be related to this: https://github.com/orgs/community/discussions/65227/nI have logged a support ticket with Github. I'm guessing that nobody else other than me and github support can see the ticket but here is the URL for reference: https://support.github.com/ticket/personal/0/2312134/nFollow the document, https://docs.github.com/en/actions/hosting-your-own-runners/managing-self-hosted-runners/using-a-proxy-server-with-self-hosted-runners/nCan everyone use it normally now? I still have a problem here/nI got a contact back from github support, it has been fixed and I have verified that it's working for me now./n"
    },
    {
        "title": "How to run steps after a failing step",
        "url": "https://github.com//orgs/community/discussions/26739",
        "upvotes": "210",
        "tags": [],
        "rections": 1,
        "replies": 0,
        "comments": 4,
        "body": "Scenario:/nhere you go:/nCan I assume by default all steps have an implicit\u00a0/nYes, https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#job-status-check-functions/nYou can use the following status check functions as expressions in if conditionals. If your if expression does not contain any of the status functions it will automatically result with success() . For more information about if conditionals, see \u201cWorkflow syntax for GitHub Actions .\u201d/n"
    },
    {
        "title": "Run matrix job on macos and on ubuntu in container",
        "url": "https://github.com//orgs/community/discussions/26756",
        "upvotes": "202",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 9,
        "body": "Let\u2019s consider the following workflow:/nI definitely understand the motivation here.\u00a0 I\u2019m not sure that just ignoring the container key on macOS runs will necessarily be the solution, but we\u2019ll look at how to simplify this for you so that it\u2019s more DRY./nJust wanted to say this would be very helpful for us as well. Is there anyway currently we can write the yaml so that the container field is included conditionally, only for the linux builds? That would basically solve the issue for us I think./nYes, the solution here would be for GitHub Actions to allow something like:/n@pmatos I like your suggestion! It\u2019s concise, clear, explicit, and consistent. @ethomson what do you think?/nFor the record, I have exactly the same problem and would really enjoy a solution, like what @pmatos suggests!/n@ethomson any update on this?/nHi all,\nI tried a solution with a matrix job, but ending with a \u201ca step cannot have both the uses and run keys\u201d unfortunately./nI have the same problem./n**Is your feature request related to a problem? Please describe.**\n/n"
    },
    {
        "title": "Add trigger for expressing \"on pull request merged\"",
        "url": "https://github.com//orgs/community/discussions/10699",
        "upvotes": "178",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 16,
        "replies": 7,
        "comments": 2,
        "body": "I have an action that executes on a pull request into main, with the condition that the action only triggers when the pull request is merged./nHi @thclark - thanks for the report.  I agree that this is the best way to accomplish this now.  We'll put this on the backlog to improve./nI liked it./n"
    },
    {
        "title": "How can I test if secrets are available in an action?",
        "url": "https://github.com//orgs/community/discussions/26726",
        "upvotes": "173",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 11,
        "replies": 3,
        "comments": 14,
        "body": "I\u2019d like an action to run on PRs from the main repo, but not from PRs from forked repos./nSecrets are not passed to workflows that are triggered by a pull request from a fork. As you said , your PRs are within the main repo. Then the secrets could be passed in workflow.\u00a0/nTo clarify, I\u2019d like my CI to run all the jobs and pass when run from the main repo. When someone sends a PR from a forked repo, I\u2019d still like the subset of jobs that don\u2019t require secrets to run and CI still to pass.\u00a0/nI was able to get it working by testing every step of the job for the existence of the environment variable associated with the secret.\u00a0 See\u00a0firebase/firebase-ios-sdk#5180./n@paulb777 I checked your PR, you use secrets as the value of environment variables. You could set the env in job level.\u00a0 Then the env could be used in your scripts directly. In bash, use it in syntax $var_name/nThanks\u00a0@yanjingzhu. Setting the secret environment variables at the job level is much cleaner./nYou can only use the env context in the value of the with and name keys, or in a step\u2019s if conditional./nThis might not be what you\u2019re after, but you can disable individual steps by putting the secret into a job\u2019s env and then using/nYou can make an entire job optional based on the presence of a secret if you had a previous job that set a job output: https://gist.github.com/jonico/24ffebee6d2fa2e679389fac8aef50a3/nThanks jonico, I\u2019ve created a more specific example here:\nhttps://github.com/GabLeRoux/github-actions-examples/blob/e0468ce2731b08bd8b1f7cd09d0b94c541310693/.github/workflows/secret_based_conditions.yml/nThis did the trick for me:/nIt may be a little cheeky but this is what I did at my org. I run a job before my main CI job that checks if all my secrets are in place. It normally does other things too but I took that out for the example below./nThank you all for the workarounds, but this is ridiculous, there should be a top level github.secrets_present variable or something similar.  I don\u2019t understand why these extremely basic issues haven\u2019t been addressed by github./nI solved it the following way:/nhttps://stackoverflow.com/questions/70249519/how-to-check-if-a-secret-variable-is-empty-in-if-conditional-github-actions also suggests a workaround for this issue./n"
    },
    {
        "title": "[BUG] Strange \"No space left on device\" IOExceptions on GitHub runners?!?",
        "url": "https://github.com//orgs/community/discussions/26351",
        "upvotes": "155",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 13,
        "body": "Hi,/n@jens-maus\u00a0,/nThanks for the reply. I just returned from my vacation and I noticed that my nightly builds still fail with these strange \u201cNo space left on device\u201d errors. See for example here:/n@brightran And see/compare the following two runs of GitHub Actions on the very same commit id while the first one run without the \u201cNo space left on device\u201d error and the second one failed!?!?/nHi\u00a0@jens-maus,/nHi\u00a0@elbrenn\u00a0/nIn practice the runners have higher specs than we guarantee to make sure we are delivering on our promises.\u00a0 It\u2019s possible that a previous version had more than 20GB or that your other runs used less for some other reason./nThanks for the links. It\u2019s a pity that the GitHub runners are obviously not supporting more than 20GB disk space because apart from that problem I am quite happy with GitHub Actions./n@jens-maus\u00a0,/n@brightran\u00a0,/nYou don\u2019t have to remove docker/nIf you want to keep swap and only need docker and some basics, you may want to remove a bunch of pkgs./nThanks in my case those steps saved ~30GB in ~4mins\n/nThanks for posting the solutions ITT.  I just hit this issue today. It manifested as a stalled runner, with no output in the web interface./n"
    },
    {
        "title": "Github workflow for nextjs: unhandledRejection ReferenceError: Headers is not defined",
        "url": "https://github.com//orgs/community/discussions/72835",
        "upvotes": "154",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 43,
        "replies": 14,
        "comments": 4,
        "body": "Hi,/nif you look at the output of the step before build, you will see the potential issue - you install node 16, nextjs dropped the support of it in v14. if you want to use node 16, then use next 13, otherwise bump the node version\n/nuse nodejs 20 work correctly/nhow do you changed the node version for to deploy  ?/nChanging correct node version works! In my case, it was v18+/n"
    },
    {
        "title": "Release uploads fail too often",
        "url": "https://github.com//orgs/community/discussions/9121",
        "upvotes": "147",
        "tags": [
            "Actions",
            "APIandWebhooks",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "Hello! In our project, we use the GitHub API (well, Octokit) to upload release artifacts from a GitHub Action. I assume this is quite normal, however we the uploads fail very often with ECONNRESET./nSame here. In https://github.com/Shadowsocks-NET/QvStaticBuild/actions, nearly 2/3 of recent workflow runs failed because of this. For my other projects, about half of the release attempts were botched by this, and had to be re-run by hand./n"
    },
    {
        "title": "Dynamic matrix yaml syntax error",
        "url": "https://github.com//orgs/community/discussions/25475",
        "upvotes": "145",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 6,
        "body": "I\u2019m suddenly getting \u201cYou have an error in your yaml syntax\u201d when using a dynamically generated matrix./n+1 Been going crazy for the last hour trying to figure out how I was able to break this./nSame here. Our GitHub Actions broke without any change from our side./nWe are having problems as well/n@sindrig @croydon @jvisker This started working again for me this morning.  I didn\u2019t make any changes on my end.  Would be nice to get some kind of explanation from GitHub, but I feel like this didn\u2019t affect enough users for them to make a statement./nSame for us. I opened a ticket with GitHub support last night and got a reply 4 hours later that they thought this was fixed./nThis should be fixed now, unfortunately there was a very brief time window when the parser reported a syntax error for this./n"
    },
    {
        "title": "Workflow fails when running steps in a container",
        "url": "https://github.com//orgs/community/discussions/25094",
        "upvotes": "1288",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 12,
        "body": "I\u2019ve just started setting up a workflow for one of my Elixir projects. I began with a simple workflow that just echos text in the shell. Here is that worklow:/nI\u2019m having the exact same issue currently. Did you find a work around?/nI haven\u2019t figured out a solution yet. GitHub must be having issues because now the workflow isn\u2019t even running./nI\u2019m having the eact same one as well.\u00a0/nI have the same issue. It works when you use \u201c-slim\u201d images. Somehow, the alpine container is not detected as running./nEither of these work. I prefer the \u201cslim\u201d one, because in the alpine one (in this form) all commands get thrown together in one github actions step./nThis solved it for me too. Seems Alpine images has a bug in the runner./nI had the same issue, i tried to look into what is happening a bit and it mounts tools from the host into the container and then overwrites the entrypoint with node to run setInterval to keep the container running./nKudos for the research :slight_smile: it does seem weird that they don\u2019t just tail to dev/null to keep the container up, that\u2019s a pretty standard way of operating./nThis is most definitely not \u201csolved\u201d. Using the alpine variant of the official Docker images (in my case php) seems to be causing a failure./nI am actually working on making this exact change. In earlier versions, we were running actions such as git checkout by default, and they were written in JavaScript, so naturally we had a higher level of dependency on Node here. After shedding that, we now have legitimate scenarios like the ones described here that shouldn\u2019t need Node at all. Expect that update soon!/nThis should now be fully supported/nIs it possible to run same commands in three docker containers with elixir 1.9, 1.8 and 1.7 using matrix strategy?/n"
    },
    {
        "title": "How to use private Docker registry?",
        "url": "https://github.com//orgs/community/discussions/26534",
        "upvotes": "1078",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 3,
        "replies": 2,
        "comments": 10,
        "body": "I found multiple issues about this topic but they\u2019re old and kinda not exploring the point that I want./nWhen using the syntaxes\u00a0 jobs.<job_id>.container.image or jobs.<job_id>.services.image to set a Docker image as a container\u00a0(or service container) for a job, the Docker image can be the Docker base image name or a public docker Hub or registry. You can\u2019t use the image from a private Docker registry./nFWIW, I\u2019ve had success with the workaround to use an internal repo action, as mentioned in\u00a0https://github.community/t5/GitHub-Actions/Github-Actions-new-Pulling-from-private-docker-repositories/m-p/32024/highlight/true#M986, where I first login to AWS ECR, pull the private image, then use the local action to effectively \u201cdocker run\u201d with the private image./nuse the local action to effectively \u201cdocker run\u201d with the private image./nI don\u2019t think that\u2019s supported./n@karrtikr this is what I use, which might not help you since I use cake build at the tail end:/nhere is my solution for self-hosted runner for pulling private images from AWS ECR: Github Actions (new) Pulling from private docker repositories/nThis works for me:/nLooks like support for private registries/nI was not aware of that, thanks. This really solves the problem./nUnfortunately, this only partially solves the issue. ECR only allows passwords up to 12 hours. We typically use amazon-ecr-login in order to get around this, however this action doesn\u2019t provide the passwords and the passwords would only be available after that step./n"
    },
    {
        "title": "Why are actions down on a weekly basis ?",
        "url": "https://github.com//orgs/community/discussions/55069",
        "upvotes": "551",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 3,
        "replies": 0,
        "comments": 1,
        "body": "Product Feedback/nHey  @maximelebastard/n"
    },
    {
        "title": "Cannot delete a deployed environment even after deleting the app that created it",
        "url": "https://github.com//orgs/community/discussions/11464",
        "upvotes": "485",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 2,
        "replies": 5,
        "comments": 7,
        "body": "I have a deployed environment (Vercel) that I would like to remove from a repository. The app has been disconnected from the repository and in fact the whole Vercel account was deleted./nHi, I'm also having the same issue. Can I get some hints on how you managed to solve this issue?/nI am also facing this issue. The docs are out of date still./nSame issue here/nHi everyone!/nF! , THE GITHUB DOCS ARE OUT OF DATE!/nI was able to deleted the environments just after delete the Vercel app and delete all deployments one by one  via api https://docs.github.com/en/rest/deployments/deployments?apiVersion=2022-11-28#delete-a-deployment/nOne more roundabout way to go about this is to use this delete-deployment-environment action to delete the deployments & environment.   I was having the same problems noted here, but this worked./n"
    },
    {
        "title": "Grouping log lines: set the folded/unfolded state with ::endgroup:: at the end of the logs",
        "url": "https://github.com//orgs/community/discussions/39411",
        "upvotes": "477",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Product Feedback/n"
    },
    {
        "title": "Emoji Event Trigger for Github Actions",
        "url": "https://github.com//orgs/community/discussions/37901",
        "upvotes": "415",
        "tags": [
            "Enhancement",
            "Actions",
            "ProductFeedback"
        ],
        "rections": 1,
        "replies": 1,
        "comments": 2,
        "body": "Would it be possible to add a trigger which fires a Github Action when an Emoji is made? This would make it so actions can be programmed to add comments to a PR and ask for permission to continue while using a \u2705  or a \u274c  to ask developers an option (the action can have code to make sure the users who click the emoji are authorized). This would be super handy! Maybe this is already supported and I am just missing it in the documentation./nHi there @aguckenber-chwy and welcome to our community! Thank you for the feature request!/nYES! This would make the experience of approving certain steps of a workflow in a PR much easier. Requiring a comment to be added in a certain way is a bit tedious and error prone./n"
    },
    {
        "title": "Github Action fails on fetching checkout v3 git bug The process '/usr/bin/git' failed with exit code 128",
        "url": "https://github.com//orgs/community/discussions/116737",
        "upvotes": "362",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 3,
        "body": "Bug/nThis exact issue happens to me as well, any fixes?/nsame error here too. yesterday, same repo, same code was working fine./nI opened issue in: actions/runner-images#9632\nBut they ran it twice and seem to ignore this as working, even tho I explained to them this happens sporadically./n"
    },
    {
        "title": "Unable to push to ghcr.io from Github Actions",
        "url": "https://github.com//orgs/community/discussions/26274",
        "upvotes": "338",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 30,
        "replies": 8,
        "comments": 9,
        "body": "Hi,/nhave the same issue, and do not understand why/nHi @pulsar256,/nThe Information asking to use the PAT token is outdated. I managed to get it working./nHrm\u2026 This doesn\u2019t work if you haven\u2019t pushed before. These steps work if you have pushed at least once./nI was experiencing this because I somehow ended up with a package having the name \"REPO/name\" unconnected to REPO (probably pushing from CLI or during repository renaming, not sure.) When I looked at my repository the package was not even showing up (but I could push from the command line). In the global packages tab (https://github.com/OWNER?tab=packages) I finally found it. I then was able to connect it to my repo, which caused the name to change from \"REPO/name\" to name now listed under \"REPO\". Next I went to my repo, saw the package, and could go to settings to enable write permissions (following steps in accepted answer)./nI've been having the same problem, but it's intermittent. I've been playing with cdktf to create repos and set up the workflow pipelines. I've noticed that, even though the workflow file itself was always the same, sometimes the workflows could push just fine, and other times it couldn't. This is regardless of how many times I toggled the Actions write permission or recreated the repo. The inconsistency is what's frustrating me. I need to be able to rely on this workflow to always work, or it's useless./nI have had the same issue as @nfcopier. I am pushing to ghcr.io in my GitHub action, and my docker push fails with:/nFor me, when pushing an image for the first time, I get a 403. Re-running the Docker build/push step again is successful. I have to do this for every new image I push!/nI am facing the same issue/n"
    },
    {
        "title": "Enforce timeout and notify when job is waiting for a runner to pick up the job",
        "url": "https://github.com//orgs/community/discussions/50926",
        "upvotes": "289",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 10,
        "replies": 6,
        "comments": 4,
        "body": "Question/nYou can enforce a timeout for jobs that are waiting for a runner to pick up the job by setting the idle_timeout parameter in your self-hosted runner's configuration file./nHi @radhikari-arch,/nAnother missing feature that makes me wonder how Actions shipped, let alone has stayed in such a similar state for years./nFYI I adapted @develop-at-github 's suggestion for a scheduled cleanup job that runs hourly. The workflow is in cleanup.yml, and the top of the workflow looks like this:/n"
    },
    {
        "title": "How to identify when a job was cancelled due to a concurrency group?",
        "url": "https://github.com//orgs/community/discussions/14861",
        "upvotes": "282",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "I have a workflow that defines a concurrency group withcancel-in-progress: true./n"
    },
    {
        "title": "Tag is blocked from environment protection rules",
        "url": "https://github.com//orgs/community/discussions/63890",
        "upvotes": "261",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 9,
        "replies": 7,
        "comments": 3,
        "body": "Bug/nI'm facing similar issue since 14 August 2023. I am unable to deploy from a tag with branch protection rule. This is a very recent issue./nRecommend following along in another discussion on the same topic: #62991/n"
    },
    {
        "title": "Non secret variable for Environments",
        "url": "https://github.com//orgs/community/discussions/24988",
        "upvotes": "258",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 19,
        "replies": 21,
        "comments": 8,
        "body": "Hi,/nIf it is not a secret, you may store this directly to the repository./nDepending on the desired use of the variables the environment file could also be appended to $GITHUB_ENV, with much simpler code:/nThank you @GregoireW and @airtower-luna! Both work for me, but I mark env way as solution since it much simpler and good enough for my use case. Really appreciate it./nIn my case, I have just one non secret, so it is overkill to generate multiple env files in the repo, one of which is selected based upon another secret. This should be something in the GitHub UI in my opinion./nI would like to have env variables that dont require me to add a new commit to my repository./nThe only secret that i need is for the passwords and keys. Not for my app folder path location. My config has a ton of variables that are NOT secret./n@ThomasReyskens/n@juliandunn It does not seem to work. Why is the variable in the caller workflow receiving '' instead of true/false? It seems that I have to use the vars context directly in the reusable workflow template. It is kind confusing because when passing secrets from the caller to the reusable workflow I have to explicitly tell the caller which secrets I want to share./n"
    },
    {
        "title": "Don't require the GITHUB_TOKEN to use the gh cli in workflows",
        "url": "https://github.com//orgs/community/discussions/38213",
        "upvotes": "236",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 1,
        "replies": 0,
        "comments": 0,
        "body": "As is stands today, you can use the gh cli in workflows, but you have to provide the GITHUB_TOKEN environment variable. This creates unnecessary extra verbosity in workflow files, when a lot of the time we just end up using the default token from the github context:/n"
    },
    {
        "title": "ANSI color tags show up in Annotation output",
        "url": "https://github.com//orgs/community/discussions/41556",
        "upvotes": "233",
        "tags": [
            "Actions",
            "Issues"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "Bug/nIt would be great if something could be done for this - since we can't create an annotation without writing its output to the console, we have to choose between setting nice text colors for warnings/errors/etc. in the console output or creating annotations. \ud83d\udc4d/n"
    },
    {
        "title": "Aggregate view of all workflows?",
        "url": "https://github.com//orgs/community/discussions/26017",
        "upvotes": "228",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 5,
        "body": "* Is there some method via the UI by which a user can see the status of all of their Actions build jobs on one page?/n> Is there some method via the UI by which a user can see the status of all of their Actions build jobs on one page?/nhey @mscoutermarsh looking forward to seeing the info in the API.\u00a0 I like the information page on each repo, what I\u2019m asking for is something either user-level, or org-level that would essentially show the statuses for build jobs from each repo owned by that user or org.\u00a0 This way, instead of having to travel to each repo\u2019s /action tab, I can visit one page and get an overview of all my repo builds./nAh got it. We have no plans for a UI like that at the moment. The API will also be by repository. There won\u2019t be an endpoint for entire user/org, would have to do a few requests and aggregate them./nI was interested in similar functionality./nThis would be a great feature./n"
    },
    {
        "title": "First commit pushed triggers 2 workflow runs",
        "url": "https://github.com//orgs/community/discussions/50356",
        "upvotes": "216",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 14,
        "replies": 5,
        "comments": 11,
        "body": "Bug/nwanted to weigh in that we at kubefirst.io have also found this to be the case with our platforms that install to github. with high frequency, we create initial empty github repositories, and then push an initial commit to those repositories with repo content that includes github actions workflows designed to trigger from main. the initial push of the repo always fires 2 identical github actions pipelines off of the single commit sha pushed. for our particular workflow, one will pass and one will fail due to the git commit sha being a part of our immutable container naming convention. agree this should be a github issue./n@martinwoodward has confirmed this issue and a fix should be coming down the pipe soon/nsame here.I add a workflow to my laravel project and then push to my repository first time,then the workflow trigger twice.But in the next commit the workflow trigger once.Can someone explain me that this is a bug from github itself or something?/nThis is still an issue as of today\nhttps://github.com/polyseam/dupe-demo/actions/nHere's my work-around, for whatever it is worth:/nAlso having this issue! Using a template repository, which contains a workflow to initialize Terraform. Upon cloning the template, the initial commit triggers two simultaneous runs of the workflow, resulting in a lock error./nThis is an issue for us but is not catastrophic as it may be with others. But it is marginally annoying. I'll try @bowtie-ltsa's suggestion of pushing a benign workflow first./nFYI you can work around this by adding a concurrency interrupt to your first workflow job./nEngineering advised that a fix has been shipped./n@johnstonmatt Hi Matt)) do you have any updates regarding the ticket you've created? We face the same issue with triggering pipelines twice/n"
    },
    {
        "title": "Intermittent GitHub Actions Cache Misses",
        "url": "https://github.com//orgs/community/discussions/47816",
        "upvotes": "212",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "Bug/nWere you able to find a solution for this issue?/n"
    },
    {
        "title": "GraphQL error on entering workflow",
        "url": "https://github.com//orgs/community/discussions/25505",
        "upvotes": "210",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 10,
        "body": "Playing with Github Actions, I faced very strange issue. When I try to enter my workflow, it redirects me to the\u00a0https://github.com/_graphql/MarkNotificationSubjectAsRead\u00a0page which contains the following message:/nI am also facing the same issue for the past ten minutes or so.\u00a0/nSame here. All workflows./nSame issue - I can\u2019t access any of my job logs. Workflows UI changed a bit, so I guess GitHub released an update./nApologies for the inconvenience.\u00a0 We\u2019re investigating this now./nThanks, issue has been fixed for me/nissue is fixed. thank you for being very responsive.\u00a0/nThanks for letting us know!/nI ran into this problem now. Something that needs to be manually fixed?/nYes, it seems it is back. Have this issue now too./nI also get this error message: when I open job logs on iPad (latest iOS version) it redirects me to https://github.com/_graphql/MarkNotificationSubjectAsRead/n"
    },
    {
        "title": "Version numbering for Actions",
        "url": "https://github.com//orgs/community/discussions/25248",
        "upvotes": "202",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 6,
        "body": "When publishing an Action on the Marketplace, which version numbering scheme should I use?/nWe encourage you to use the leading v.\u00a0 (For example, our checkout action is actions/checkout@v1.)/nThat means if I tag v1 and want my users to benefit from bug fixes without having them update their workflow files \u2013 I\u2018d have to move the v1 tag every time?/nI found this confusing/misleading as well. After releasing an action yesterday and tagging the first version as 1.0.0 , I was expecting to be able to use v1 to point to my 1.0.0 version, but was instead getting errors that the action could not be found./nyou should use branches (not tags) for major version, e.g. v1 for any 1.x.x version. Apply a fix to v1 branch (and tag with \u2018v1.2.3\u2019), then any workflow using uses: action/action@v1 does not need to be updated. You can apply bug/security fixes to branch v1 without rewriting history (e.g. moving tags), and all those workflows would be benefit from it./nIf the branch is called v1, workflows using the action@v1 will checkout the head of that branch, including all the commits that aren\u2019t tagged, the commits that are tagged with a pre-release semver or even commits that have a non semver tag. This can easily break the workflows./n@farshidtz yes, the branch (e.g., v1) is reserved for production and must not contain any pre-release, all development should be on topic branches./n"
    },
    {
        "title": "Push from action (even with PAT) does not trigger action",
        "url": "https://github.com//orgs/community/discussions/26220",
        "upvotes": "178",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 6,
        "body": "I have 2 workflows that you can see here:\nhttps://github.com/DataBiosphere/framework-env/tree/264a60fc614751b687e9d68e87bb225ba79f12d8/.github/workflows/nHey! I am not clear what the designed workflow would be. Can you provide a high-level overview of how those two actions would interact?\u00a0/nThe update action receives a dispatch containing some information based on which it updates a JSON in the repo and pushes it up./nThat is by design, accoding to the documentation on events that trigger workflows. Key quote:/nSo you\u2019re saying the approach of using a PAT as mentioned in the thread I linked is just a workaround contrary to the intended function, and it got patched?/nHi\u00a0@gmalkov\u00a0,/nAha, yes!/n"
    },
    {
        "title": "Nullref when writing to GITHUB_ENV from python",
        "url": "https://github.com//orgs/community/discussions/25753",
        "upvotes": "173",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 2,
        "replies": 0,
        "comments": 4,
        "body": "I\u2019m somehow getting the classic C# null reference when trying to write to GITHUB_ENV./nf.write() writes exactly the data you give it, so your data is lacking the required newlines. Just add them:/nThat worked, thank you!\nI\u2019m still not sure why it\u2019s throwing a nullref, but I guess I don\u2019t care :slight_smile:/nYour python isn\u2019t directly throwing that error. It\u2019s constructing a malformed file which the .net runner is crashing on./n<!--\n\ud83d\udc4b You're opening a bug report against the GitHub Actions **runner applicat\u2026ion**.\n/n"
    },
    {
        "title": "Where can I see billing info for GitHub Actions?",
        "url": "https://github.com//orgs/community/discussions/27137",
        "upvotes": "155",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 6,
        "body": "I know that the first 2,000 minutes are free (for private repos) and after that it\u2019s billed by the minute, per OS. Presumably, I will be billed for usage across all repos in my organization at the end of the month, but I can\u2019t find anywhere in my account where I can see this./n+1./nSee https://github.community/t5/GitHub-Actions/Total-amount-of-minutes-used/m-p/30690/highlight/true#M514/nWe are still working on enabling billing as part of our work to make GitHub Actions GA. Prior to us turning billing on you will start to see a $0 charge and a meter for consumed minutes showing up in your account settings./nYou should soon see the ability to export a CSV of your billing details in your account or Org.\u00a0 That export will enable you to report on the minutes used by specific repos and other dimenions./nHello, @chrispat Are there any updates here? How to see the number of minutes used by GitHub Actions for an org?/nThe CSV export is great and provides a detail breakdown of all costs. However, I wonder if an API endpoint is planed to make those data accessible to other systems @chrispat?/n"
    },
    {
        "title": "actions/checkout@v4 not working correct on ubuntu-latest runners",
        "url": "https://github.com//orgs/community/discussions/78164",
        "upvotes": "154",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Question/n"
    },
    {
        "title": "Allow github-bot PRs to trigger workflows (workflow setting)",
        "url": "https://github.com//orgs/community/discussions/52469",
        "upvotes": "147",
        "tags": [
            "Actions",
            "General"
        ],
        "rections": 2,
        "replies": 0,
        "comments": 0,
        "body": "General/n"
    },
    {
        "title": "Execute steps on workflow rejection",
        "url": "https://github.com//orgs/community/discussions/4546",
        "upvotes": "145",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 4,
        "body": "Hi,/nThanks for the feedback - I can imagine that we can provide you more information about the workflow_run's conclusion in this case.  I'll make sure that we add this to the backlog./nHello,\nI have a question - was this feature requested by @jjacob27 added to Actions?\nI mean if there is a possibility to trigger workflow on rejected deployment?/nHello.\nI am making a GitHub workflow for canary deployment but I can\u00b4t find any way to execute steps when deployment is rejected/nany updates here?/n"
    },
    {
        "title": "Workflow status badge per branch",
        "url": "https://github.com//orgs/community/discussions/25563",
        "upvotes": "1288",
        "tags": [],
        "rections": 1,
        "replies": 1,
        "comments": 5,
        "body": "According to https://help.github.com/en/articles/configuring-a-workflow#adding-a-workflow-status-badge-to-your-repository it is possible to add a status badge for a workflow./nBadges by branch currently aren\u2019t available. They currently check the status on your default branch (usually master)./nis this also why PR status badges don\u2019t work? I\u2019ve got a push badge and a PR badge and only the push one seems to be working./nYes - this is correct./nAre there any news about badges by branch?/n@vitoromaniello wrote:/n"
    },
    {
        "title": "Feature request: auto-retry failed jobs option for matrices having a given success rate",
        "url": "https://github.com//orgs/community/discussions/60118",
        "upvotes": "1078",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 7,
        "replies": 0,
        "comments": 1,
        "body": "Question/nIn addition, multiple retries on failed jobs will be helpful with a retryLimit to safegaurd, As I do have a case where 1/100 matrix Jobs got passed in a 2nd retry./n"
    },
    {
        "title": "How to get a list of all environments in a workflow?",
        "url": "https://github.com//orgs/community/discussions/49684",
        "upvotes": "551",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 10,
        "replies": 0,
        "comments": 1,
        "body": "Question/n"
    },
    {
        "title": "Do jobs in self-hosted runners run in parallel?",
        "url": "https://github.com//orgs/community/discussions/26769",
        "upvotes": "485",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 57,
        "replies": 4,
        "comments": 8,
        "body": "The document says \"Jobs run in parallel by default.\u00a0\". When I tried workflow in github-hosted runners, jobs do run in parallel. However, when I try to run the workflow in self-hosted runners, the jobs do not seem to run in parallel. I\u2019ve tried in both macos and centos with the latest version runner v2.165.2./nHi\u00a0@dahuokolmostar\u00a0,/nAre there any plans to change this? That is so that a runner can run multiple jobs at the same time (concurrently)./nFact is that currently, the GitLab runner is much better than the Github actions runnner./n@allir  i agree with you man!!!/nWe can run Runner in docker and then we can run multiple runners on same server!!!/nThanks @weide-zhou for the details. I think it makes a lot of sense to add these comments into the official documentation.\nBefore I\u2019ve found this discussion I\u2019ve realized that all our repo workflows share the same default workspace directory on self-hosted runners, and it really made my hair stands on end. I was searching the docs to find out whether it\u2019s actually a problem and there was no answer./nif you want to have multiple runners on the same machine you can run them under different users:/nThis doc should include this information.\n\"parallelization is only possible when multiple runners are available\"/n"
    },
    {
        "title": "Beta Deployments Page Feedback",
        "url": "https://github.com//orgs/community/discussions/62650",
        "upvotes": "477",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 7,
        "replies": 0,
        "comments": 2,
        "body": "Product Feedback/nHa, this is actually a personal gripe I've had for many years as well. \ud83d\ude16/nFirst of all, thank you very much for reviewing and responding to my post!/n"
    },
    {
        "title": "github.event.pull_request.base.sha should be updated each time the pull request is updated",
        "url": "https://github.com//orgs/community/discussions/59677",
        "upvotes": "415",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "Product Feedback/nI want to upvote this./n"
    },
    {
        "title": "Don't run on tag creation?",
        "url": "https://github.com//orgs/community/discussions/25615",
        "upvotes": "362",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 13,
        "replies": 0,
        "comments": 11,
        "body": "It seems, that on: [ push ] get\u2019s triggered, whenever you make changes and also, whenever a tag/release is being created. Is there a way to prevent this? I don\u2019t see a need to process a commit, that has already been processed./nIf you want to run on pushes but ignore all tags you\u2019d need something like:/nTy, I\u2019ll try that. Seems to do, what I\u2019m looking for./n@SoftCreatR, @kingthorin,/nGood to know. I\u2019ll update the Workflow accordingly./nFair enough: Any branch, ignore all tags./n@kingthorin, @SoftCreatR,/nOkay, becoming clearer. Should the pattern in 1 and 2 be \u2018!**\u2019 (bang double asterisk)? Or, is the word \u2018negative\u2019 misplaced? (Or is there something else subtle I\u2019m missing?)/nRegarding situation 3, should the wording be slightly changed to make it clearer?/nHey all, I looked through the replies, but not sure if the OP\u2019s original query has been answered: preventing on:create on tags./nFor me, this works:/nThis works as expected:/n"
    },
    {
        "title": "Skipped jobs should provide reason",
        "url": "https://github.com//orgs/community/discussions/60882",
        "upvotes": "338",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 6,
        "replies": 0,
        "comments": 2,
        "body": "Product Feedback/nI agree. I'm trying to debug a situation where a job with an if conditional is not running. GitHub output provides no help, even when debugging is enabled. I've added artificial steps and jobs to try to debug the problem and it all works as expected except for the job with the if conditional, which is not running for some reason. Since there's on debugging output for skipped jobs, I'm blocking from making progress. I'll likely have to stop using the if conditional in favor if using if inside run, if applicable./nSimilar situation here, got a deployment step which is being skipped with no clear explanation why. Step calls a reusable workflow and has a dependency on a dummy step just to pass env vars (another limitation of GH Actions)./n"
    },
    {
        "title": "feature request: Do not show skipped jobs in Pull Request Checks",
        "url": "https://github.com//orgs/community/discussions/44142",
        "upvotes": "289",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "Product Feedback/nbump. This feature is also requested in another discussion/n"
    },
    {
        "title": "Expected \u2014 Waiting for status to be reported",
        "url": "https://github.com//orgs/community/discussions/25720",
        "upvotes": "282",
        "tags": [
            "Packages",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 9,
        "body": "Hi,/n@gponty\u00a0,/n@gponty\u00a0,/nThank you\u00a0@brightran\u00a0! That\u2019s help me !/n@brightran\u00a0/nHey folks,/nSame issue here, dependabot seems to be the X factor.\nI tried to delete the PR description thinking that maybe that will kick it into gear but it didn\u2019t help either./nThanks for this solution <3/nRemoving the required branch rule from GitHub fixed this for me \ud83d\udc4d/nOccasionally this can be caused by an error in the test yaml file. You will need to look at the checks tab in order to identify if this is the case./n"
    },
    {
        "title": "Gradle Action Stuck on QUEUED Forever",
        "url": "https://github.com//orgs/community/discussions/26353",
        "upvotes": "261",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 8,
        "body": "I have an action to be triggered on push to the master branch.\u00a0 It has been queued for 2+ hours now.\u00a0 I tried to cancel the job, but it still remains.\u00a0 I then tried another push and it is stuck at QUEUED too./nsame here, seems like it got broken. Didn\u2019t find a status page for github actions/nSame here. Good to see I\u2019m not the only one having this problem! Freaked out a little bit at first when the workflow couldn\u2019t be cancelled and there was no status information./nI am having the same issue.\u00a0 There doesnt seem to be anything on the Github Status page indicating that this is a known issue./nSame to me/nYou need to fix your indention, the default Gradle Build action is incorrect:/nThanks, this was the cause.\u00a0 YML and indenting/blank lines again :)./nI\u2019m having the same is issue. GIT actions flow is stuck in queue for a long time, more than 43 min. Is this a widespread is issue we should know about?/nhttps://www.githubstatus.com/ Github actions degraded @andybirenzi/n"
    },
    {
        "title": "Github Actions workspace is empty",
        "url": "https://github.com//orgs/community/discussions/26123",
        "upvotes": "258",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 3,
        "body": "According to the documentation for the GITHUB_WORKSPACE environment variable here:\u00a0https://help.github.com/en/articles/virtual-environments-for-github-actions#default-environment-variables, the Github workspace patch should contain a copy of the source code./nComing from the \u201cold\u201d (HCL-based) GitHub Actions, I ran into this problem, too./nwrote this to support:/nThanks for confirming @maxheld83! It looks like the documentation just needs to be updated./n"
    },
    {
        "title": "Provide collapse groups for composite steps",
        "url": "https://github.com//orgs/community/discussions/15002",
        "upvotes": "236",
        "tags": [
            "Enhancement",
            "Actions",
            "ProductFeedback"
        ],
        "rections": 5,
        "replies": 0,
        "comments": 1,
        "body": "I'm transitioning from a multistep workflow job with a single-step composite action to a single-step workflow job with a multi-step composite action./nThere was also a great suggestion in the issues, but was closed with a request to move it to the discussions: actions/runner#1311\n/n"
    },
    {
        "title": "Github Actions - Can't connect to mysql",
        "url": "https://github.com//orgs/community/discussions/25200",
        "upvotes": "233",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 5,
        "replies": 2,
        "comments": 2,
        "body": "Hi All,/nI\u2019m having this issue too. I think the ubuntu-latest image might have changed?/nThe issue is caused by this change:\u00a0https://github.blog/changelog/2020-02-21-github-actions-breaking-change-ubuntu-virtual-environments-will-no-longer-start-the-mysql-service-automatically//n"
    },
    {
        "title": "Please provide ssh_known_hosts for GH services in Actions",
        "url": "https://github.com//orgs/community/discussions/26611",
        "upvotes": "228",
        "tags": [
            "Actions"
        ],
        "rections": 0,
        "replies": 1,
        "comments": 7,
        "body": "Dear GitHub,/nNeat idea.\u00a0 I can see how this could help.\u00a0 We\u2019ll take a look./nDid this end up happening? I\u2019m still finding that I have to run the following command from inside my workflows to use Swift Package Manager:/nHey @tonyarnold. Are you able to run Swift package tests with private dependencies? If so can you please share your approach since I can\u2019t make it work for some reason GitHub runner do not use the package\u2019s local .ssh folder and always fails to fetch dependencies. There is a related topic.  Thanks!/nI am able to check out private Swift packages:/n@tonyarnold  I just want to thank you immensely./nI managed to fix this issue by using ssh for all my private packages and also adding the following to my GitHub action workflow file:/n@tonyarnold I\u2019m using fastlane, do you know how to pass -usePackageSupportBuiltinSCM to build_app?/n"
    },
    {
        "title": "The defaults top-level key in a workflow should be more useful",
        "url": "https://github.com//orgs/community/discussions/57462",
        "upvotes": "216",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 4,
        "replies": 0,
        "comments": 1,
        "body": "Product Feedback/n+1 on this...\nI wanted use defaults to set runs-on and container since the value is rarely changed between jobs.\nUnfortunately, no luck.../n"
    },
    {
        "title": "Alternative workflow topology to avoid \"workflow reference count exceeds the limit of 20\" error",
        "url": "https://github.com//orgs/community/discussions/32918",
        "upvotes": "212",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "Background context\nIn my repo I have 12 workflows that begin with a job to determine the version of Fedora to test against and then a job to build the application/various docker images. This results in 12 parallel jobs, 11 of which are redundant, each of which takes ~10 minutes. I want to remove these wasteful runs./nI just encountered the same issue./n"
    },
    {
        "title": "Roadmap / release of GitHub actions",
        "url": "https://github.com//orgs/community/discussions/25103",
        "upvotes": "210",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 2,
        "body": "Is there currently an ETA on when GitHub Actions will come out of beta and into general availability?/nWe announced at the beta launch in August that we would GA on November 13th at GitHub Universe/nIs Github actions available for general use?/n"
    },
    {
        "title": "Publish official Docker images for virtual environments",
        "url": "https://github.com//orgs/community/discussions/19956",
        "upvotes": "202",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "There are no official Docker images for GitHub Actions Virtual Environments/n"
    },
    {
        "title": "Actions: Use env or other variables with container/image?",
        "url": "https://github.com//orgs/community/discussions/5057",
        "upvotes": "178",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 18,
        "replies": 0,
        "comments": 0,
        "body": "We need to have a way of using variables in the container names we want to run our actions in to use a specific label or a different registry to enable mirrors to GHES for example with only changes needed to the secrets they use/n"
    },
    {
        "title": "Docker action in same repository with Dockerfile in root",
        "url": "https://github.com//orgs/community/discussions/26235",
        "upvotes": "173",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 2,
        "body": "I want to run a docker action that I created in my own repository (the same as the workflow), its path, relative to the repository root would be /.github/actions/automatic-tests. I also have a Dockerfile in the root of the repository, which I use to create a docker image that runs the tests in my rails app./nI finally got it to work with:/n@raquelhortab wrote:/n"
    },
    {
        "title": "GitHub Actions Failing with [Errno 28] No space left on device",
        "url": "https://github.com//orgs/community/discussions/26488",
        "upvotes": "155",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 11,
        "body": "I have a scheduled GitHub Actions that runs CI nightly for my team\u2019s project that was working fine but is now failing with/nSeeing this too\u00a0https://github.com/renovatebot/renovate/pull/5996/checks?check_run_id=597383462/nWe\u2019ve also experienced problems since yesterday that seem related to disk space on Actions./nHere\u2019s an example where individually installing all the dependencies, that would be installed in the stage that is failing, succeeds (test (ubuntu-latest, 3.7)) but when they are all installed normally the error occurs (notebooks (3.7)). We can see (with df -h) from the stage that succeeds that there is still plenty of space available, so this is all very strange./nMy earlier message got deleted by someone, so reposting this:/n@rarkinscan you also link to the specific run in GitHub Actions that you\u2019re seeing this error? I\u2019ve submitted a help ticket to GitHub Actions and in the event that it gets reviewed by the engineering team it would be nice to have as many examples of this as possible to review./nI noticed something even more strange: this error is only occuring on Linux runners/nHi\u00a0@matthewfeickert\u00a0,/nThanks for your reply, @weide-zhou. The problem is not fixed though./nFor anyone running into issues with no space left, there is an issue open in actions/virtual-environments that has some discussions going on:\u00a0actions/runner-images#709/nHi\u00a0@matthewfeickert\u00a0,/nYes, the VM rollback resolved the issue. I\u2019ve marked this last post as the \u201cSolution\u201d as you\u2019ve linked to the relevant actions/virtual-environments Issue in it. Thanks!/n"
    },
    {
        "title": "Actions stuck after completion",
        "url": "https://github.com//orgs/community/discussions/25590",
        "upvotes": "154",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 7,
        "body": "Odd issue here happening on a lot of actions.\u00a0 The action completes quickly and then gets stuck just completing.\u00a0 This is causing other actions to back up (queued) because of these ones not exiting./nAnyone at Github comment on why all our actions seem to be stuck?\u00a0 Seems like a lot of threads on here today with the same issue.\u00a0 Any update would be good./nI just got a response back from GitHub support:/nWow, thanks\u00a0@steveshaffer\u00a0!\u00a0 Appreciate the update/nThanks Steve!/nSteve has anything changed on your end?/nSame. Some jobs completed and some are still queued for 6 hours+/nI\u2019m still seeing this. We\u2019ve been seeing this for a while now - on nodejs jobs it seems/n"
    },
    {
        "title": "Cancelled Github actions fails PR checks",
        "url": "https://github.com//orgs/community/discussions/26127",
        "upvotes": "147",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 17,
        "body": "Hi,/nCan you share more details about how you\u2019ve configured protected branches for the repository (maybe a screenshot of the settings)? If it\u2019s sensitive,\u00a0we can move this to support@github.com./nI have currently checks disabled but this is the checks status I get: /nIs there any update on how you resolved this? I have the same problem. I created multiple workflows (one for every branch etc, one only for master and one only for develop). But when one of the workflows cancels (like when I push to develop, the workflow for master cancels), I get this red cross. Is there any possibility to ignore that and show a green check?/nDoes it change if you push the\u00a0 Build -step one up? My thought was just that then the workflow would have at least one step that is green before filter cancels./nThis results in an overall failed check for me, too./nThis issue in the actions repo deals about that. too./nMe too - details here: TypeStrong/ts-loader#893/nDidn\u2019t find a way how to fix this. So for now I have to live with it like this. We have not set checks as mandatory in the repo so we can merge even with faild checks, but it is still annoying./nI did try different order of the actions in the flow but with no result. It always shows checks as failed.\u00a0/nThanks for providing that additional information, so this behavior is expected but can see how it\u2019s not ideal.\u00a0We\u2019re working on seeing how we can improve the situation./nThat\u2019s currently the best workaround./nI played around a lot and found out this works a lot more like I expected if you place the filter as a \u201cneed\u201d for the resolving action./nI think I found the right spot. The filter hast to be a requirement for the resolving action./nI have tested your solution and it works so I accept it as a solution. Though donwside is that some steps are executed which may in the future expend limits for actions if there are one. Could be problematic for quite complicated workflow. Let\u2019s hope GitHub folks will eventually fix this.\u00a0/nI think this works well - after reading more about this issue I think I originally misunderstood. We\u2019re still looking to improve this area, so we\u2019re taking your feedback to heart./nNo I have almost the same problem again? Does anyone know how to handle this?/nDoesn\u2019t this then only run the build on the master branch?/n"
    },
    {
        "title": "Dont re-release releases",
        "url": "https://github.com//orgs/community/discussions/12225",
        "upvotes": "145",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 4,
        "body": "2.888.0 came out roughly 4pm CST on 2/25/22/nThanks @myoung34 - many apologies. This was an error and it won't happen again./n@ethomson  This is still happening in a way. This one wasnt a re-release but the newest release is actually semantically a downgrade listed as prerelease/n@ethomson hey its your boy again..../nThis is breaking my Actions runners!  @ethomson, can this be fixed please?  Is there anything we can do to contribute to the fix?  Happy to take pointers and send PRs./n"
    },
    {
        "title": "Go Build in Docker Github Actions Not Working with Private Repos",
        "url": "https://github.com//orgs/community/discussions/42341",
        "upvotes": "1288",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Question/n"
    },
    {
        "title": "How to get the current time as an environment variable in actions?",
        "url": "https://github.com//orgs/community/discussions/26342",
        "upvotes": "1078",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 9,
        "body": "I hope to automatically create a new release through Actions and set the name to the current time, but I have failed many times. How can I do this?/nJust like this\n/nAssuming your build is running on Linux, you can just use the date command in a step, e.g:/n/n/nIt looks like you\u2019re sending the date into ${TIME} instead of $GITHUB_ENV. To set an environment variable you need to send it to $GITHUB_ENV in the following format:/n\nIt still have some problem./n/nYou\u2019ll likely need to wrap it in an expression syntax, otherwise it\u2019ll just output as a string:/nAll right.It\u2019s now working.\nThank you so much! \ud83d\ude00\n@airtower-luna @thomasshaped/n"
    },
    {
        "title": "Action failed to cancel",
        "url": "https://github.com//orgs/community/discussions/25570",
        "upvotes": "551",
        "tags": [],
        "rections": 17,
        "replies": 32,
        "comments": 27,
        "body": "Not sure what is the issue here but I can\u2019t seems able to cancel this workflow\u00a0https://github.com/linuxjuggler/laravel-mysql-test/commit/1332f47d9ea60955c91ef2f7eb34a42d0a56548c/checks?check_suite_id=247611483/nI have an action that is running for two days now. I am not able to cancel it. Clicking on \u201cCancel run\u201d only yields the \u201cFailed to cancel check suite.\u201d error as shown in the first post (attached image)./nAny idea how to fix this issue? It has been three days now./nhey @chrispat\u00a0 and sorry for bothering you, but is there anyone who can look at this issue? and I\u2019ve read a few people complains about the same issue./nI believe they (the guys at GitHub) are aware of this issue. I don\u2019t see any harm in having a workflow in the running state for indefinite time. It most likely was killed by some garbage collection process a long time ago./nRight now, since they are not counting the running time, this is okay, but someone should look at it :D./nSame here/nI think they have deleted everything so now everything is okay./nI\u2019ve run into this issue as well in a private repo except that an action that runs in 2s has been running for 18minutes with all workflow runs triggered by pushes after queued.\u00a0/nJust openend this:/nI\u2019ve tried a few tactics and none of them worked. I\u2019ve tried renaming my workflow as well as completely deleting and recreating my repository (which is okay it was brand new) but still the repository workflow seemed indefinitely queued/n@softpropsI advise you to contact the support since now your running actions counted towards your quota./nA came back the next day and my workflow run queue back to normal. I can\u2019t say what changed so know don\u2019t know if this will happen again/nHi! Is this still a problem on Github? After a failed action start (https://github.com/carloscortonc/cli-er/actions/runs/2921222337/attempts/1), and a re-run (https://github.com/carloscortonc/cli-er/actions/runs/2921222337/attempts/2, I only recall executing \"re-run\" once) both 2nd and 3rd executions hang at \"queued\" state, and trying to cancel latest run results in \"Failed to cancel workflow.\"/nStill having this issue....urgh.\nEDIT: Looks like it will be force terminated 5 minutes after you hit that cancel button, even if it was not successful in the first place./n\nWhen I try to cancel a workflow - I get this screen but the workflow never gets cancelled./nMy actions are not working either. Trying to deploy my website through github pages, been stuck for a while now./nSame here, failing to cancel or run jobs/nSame here!/nLots and lots of folks seem to be experiencing this. Github status page now says problem is resolved, but jobs are still stuck in queues with no opportunity to cancel. A word from github at this point would be good./nWe are also experiencing this, and it is blocking us from deploying. The timing could not be worse either; please update with a workaround or ETA./nExperiencing the same thing, we have 5 jobs that are in queue and I am unable to cancel any of the jobs. One of these is a deploy job of an older git version of code. If these get deleted I'm all good, but if something automatically kicks off we will have an older version of code deployed to production \ud83d\ude28/nSame experience/nI'm having this issue/nThis is still an issue I've had an action running for a couple hours now and all attempts to cancel have returned an error./nI made an accidental release because the cancel didn't work.\nAt first I thought it'll stop right away.\nThen I thought it'll stop after the current task.\nThen I thought it'll stop after the current job.\nBut it never stopped and just continued until the unwanted release./nit is still same issue. Triggered via pull request 7 months ago/nWe are also facing the same issue. Workflows older than 3 weeks are still in Queued state. We tried to cancel using UI, cancel as well as force-cancel APIs. All of them return the \"Failed to cancel workflow run\" error. Our GitHub checks are now broken completely./n"
    },
    {
        "title": "Builtin support for artifact sharing",
        "url": "https://github.com//orgs/community/discussions/26070",
        "upvotes": "485",
        "tags": [],
        "rections": 4,
        "replies": 3,
        "comments": 6,
        "body": "The current strategy to share artifacts between jobs is to use upload-artifact and download-artifact, which works reasonably enough but can get quite verbose. It would be nice to have a\u00a0jobs.<job_id>.artifacts section, since it seems to be an often requested feature that fundamentally changes how workflows are written and used./nWe do plan to introduce someway to share artifacts between workflows as well as an option for caching between runs of the same workflow./nThanks, I really appreciate getting the reasoning on decisions like that./nIt looks like it is only possible to\u00a0 share artifacts between jobs of the same workflow./nIts been 6months, any update on sharing artefacts between workflows?/nIt's been 3 years... cmon guys!/nArtifact sharing is a core tenet of any CI/CD system. It's 2024 and this still isn't available in GitHub Actions! Embarrassing./n"
    },
    {
        "title": "Install sponge utility to github actions automatically",
        "url": "https://github.com//orgs/community/discussions/56831",
        "upvotes": "477",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 1,
        "comments": 2,
        "body": "Product Feedback/nGiving this thread a bump because I ran into it just now as well. > tmp && mv tmp src/tsconfig.json is not as nice as | sponge tsconfig.base.json./n"
    },
    {
        "title": "Cancelling rest of job if condition is met.",
        "url": "https://github.com//orgs/community/discussions/25280",
        "upvotes": "415",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 3,
        "replies": 0,
        "comments": 9,
        "body": "When a developer opens a PR, we want to run a job only if code within certain files have changed. The issue is that in order to know whether to run the job or not, the job needs to be run first in order to checkout the repo to perform a git diff on it (kind of a chicken and egg)! So, having established that, I thought maybe we can let the job run. There would be a step (after the checkout@v1) that would then determine whether to continue the job execution or not. If not, then cancel rest of job. Is there a \u201ccancel rest of job\u201d command? We\u2019d want it to also not be considered a failed job. Thanks!\u00a0/n@blackswan2019\u00a0,/n@blackswan2019\u00a0,/nHi\u00a0@brightran. I haven\u2019t got around to trying it yet, but it looks like it would work. Will update once implemented! Thanks./n@blackswan2019\u00a0,/nHi\u00a0@brightran\u00a0, I have implemented the first part (similar to the job1), and the need requirement for job2 (the dependent job), but the if isn\u2019t working. I noticed that the output from your job1 example is \u201crun_jobs\u201d whereas in job2, the if condition uses \u201crun_rest_jobs\u201d. Is there a reason they are different?/n@blane1988\u00a0,/nIs there still no simpler way to abort workflows? Something like/nWe wanted to abort job as well (and in our case, not consider it a failure), but no, we never found a way. The shell command exit <number> only applied to steps, like you commented. It\u2019d be great if GitHub introduced some shell alias command that, when called, just skips the whole rest of the workflow./nThis is why we are moving away from coding in GH workflows. They are a pain. Just write everything in your own code and use GH Actions workflows just as a skeleton to call your code./n"
    },
    {
        "title": "Checks Annotation Doesn't Go to File/Show File",
        "url": "https://github.com//orgs/community/discussions/15412",
        "upvotes": "362",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 10,
        "replies": 0,
        "comments": 2,
        "body": "Somewhat related to #9144, but when adding an annotation, the link unfortunately is unable to correctly route to the offending file:\n/nfollowing.../nI've been experiencing this as well. I can see how it could be intentional, since the file where the error was found was not changed in the commit. However, there are numerous situations where we might change some code that has knock-on effects in other parts of the codebase and it wouldn't make sense to not be able to link to these just because the particular line wasn't changed. I know there has been a historical limitation of not being able to comment on lines not changed in a PR - not sure if the checks API has the same limitation?/n"
    },
    {
        "title": "No available entity for Azure OIDC for GitHub Actions",
        "url": "https://github.com//orgs/community/discussions/47298",
        "upvotes": "338",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 3,
        "replies": 1,
        "comments": 2,
        "body": "Product Feedback/nJust set the entity type to Branch and it will work just fine with workflow dispatching./nI can confirm that using the branch/<branch-name> entity option works when triggering the workflow from that specific branch./n"
    },
    {
        "title": "How can you run an action only on publish or prerelease?",
        "url": "https://github.com//orgs/community/discussions/42780",
        "upvotes": "289",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 1,
        "comments": 1,
        "body": "Question/nThe only way I have been able to get this to work is to do the following:/n"
    },
    {
        "title": "Encrypted secrets in workflows on PRs from forks",
        "url": "https://github.com//orgs/community/discussions/50161",
        "upvotes": "282",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 10,
        "replies": 1,
        "comments": 2,
        "body": "Product Feedback/nI have this issue as well. I don't have a solution that I like, but I have one that works. You can use a pull_request_target trigger to run a workflow from the context of your repo's main branch, but check out the fork PR's code. Limitation: changes to the workflow itself will not be seen until hey are in your default branch, but this will run the workflow that exists on your default branch against any changes on the fork PR, using your repo's secrets./nDefinitively agree, I'm encountering the same exact issue : whenever an external user opens a PR from a fork, our workflow that runs checks fails because it does not have access to secrets \ud83d\ude1e/n"
    },
    {
        "title": "Why am i getting unable to render code block error while opening a pdf.",
        "url": "https://github.com//orgs/community/discussions/62549",
        "upvotes": "261",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 3,
        "replies": 18,
        "comments": 22,
        "body": "Question/nHi @ShravaniReddy05,/nSame problem with me!\nI am not able to display PDFs or my 'snake eating contribution' action image.\nIt just shows 'unable to render'./nI am also facing the same issue since few days/n+1/n+1 same problem/n+1/nI experience it with ipynb/n+1 same problem/n+1/n+1 same issue./n+1/n+1/nSame issue/n+1/n+1/n+1/n+1/nin my case is the PDF file, donwnload it and see it/n+1/nthe same problem to me, why the PDF file can not be download, always show \"Unable to render code block\", please teach me how to solve it, thanks a lot./nI resolved this by disabling the chrome extension ModHeader - Modify HTTP headers/n"
    },
    {
        "title": "Github Secrets not be found",
        "url": "https://github.com//orgs/community/discussions/25701",
        "upvotes": "258",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 1,
        "replies": 7,
        "comments": 19,
        "body": "Recently (today) it looks like Github Secrets aren\u2019t being passed in properly:/nI am having the same issue, unfortunately. Some secret values are now blank as of today\u2026/nI\u2019m also having this issue. I notice that in your workflow yml file, like in mine, the missing secret is defined in the env section. I have other secrets referenced outside of env (in the jobs section), and those are passed in properly. Weirdly, when I change one of the references to the env variable to directly reference the problematic secret (but keep the other ones still referencing the env variable), everything works. So it seems like Github Actions is looking at the jobs section, checking which secrets are being used, and only passing those in, forgetting to check if they are being used by the env section./n@markgoho\u00a0@kaikue\u00a0@sagv\u00a0,/nI removed the secrets and re-added them with no success. There\u2019s been no change to our repo, secrets, workflow file, or anything else. It just stopped working between Monday and Tuesday./nBINGO!/nSorry for the disruption. The behavior will be reverted shortly./nShould be reverted now. Can you trigger another run and confirm?/nIt works for me now. Thanks for the fix!/n@kaikue glad that the problem has gone on your side./nYes, working now. Thanks for investigating and helping to fix this regression./nSecrets don\u2019t appear to work within the windows-latest or windows-2019/n@naj8ryon Windows the \u201crun\u201d step uses powershell by default. Try \u201c$env:DockerPassword\u201d or you can change the shell/nBrilliant./n@ericsciple I\u2019ve just run into this issue. When I had the secret defined at the organisation level it wasn\u2019t being picked up by the action (it was initially set to private repo, then I tested by allowing only the specific repo). When I move the secrets to the repo itself the workflow worked correctly./nI don\u2019t know what\u2019s happening either, I tried defining env vars from secrets in my workflow, they\u2019re empty no matter if I defined them at job or steps levels./nOk my apologies here, mistake was mine. I forgot to pipe my env vars to Docker ^^\u2019/nThis is happening again, today!/nI\u2019m experiencing some flaky jobs due to this too. The same job has been intermittently failing for a couple months (with no changes to the workflow), each time due to the secrets not being available for some unknown reason. I hadn\u2019t noticed because the SLACK_WEBHOOK secret is not available so it\u2019s been failing silently. But today we had three failures./nI\u2019ve also noticed that secrets are missing randomly on certain test runs:/n"
    },
    {
        "title": "Hitting (undocumented?) reusable workflow limit of 20",
        "url": "https://github.com//orgs/community/discussions/32192",
        "upvotes": "236",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 3,
        "comments": 6,
        "body": "I've just started hitting a reusable workflow limit of 20:\n/nI tested 26 workflows in my public repository and it worked.\nint128/sandbox#178/nThis is still an ongoing issue for us, though the limitation is now at least documented. We're having to consider very tortured workarounds to deal with this./nHow it is possible that you try to apply \"separation of concerns\" and end up with more technical debt because of another undocumented limit? :(/nDid you find a workaround? @JackCoplandGranta/nI just had the same problem and I am even using self hosted runners.\nHow is this still a limitation in 2024???/nWe've also hit the limit of it in our \"code reuse\" quest in Apache Airflow - we managed it by combining some jobs together, but it would be nice to have bigger limit./n"
    },
    {
        "title": "Requiring workflows with Repository Rules is generally available!\ud83d\udea2",
        "url": "https://github.com//orgs/community/discussions/69595",
        "upvotes": "233",
        "tags": [
            "Repositories",
            "Actions",
            "ProductFeedback"
        ],
        "rections": 46,
        "replies": 36,
        "comments": 12,
        "body": "Available today, GitHub Enterprise Cloud customers have the ability to set up rules that require workflows to run and pass before a pull request can be merged. This is a powerful new tool for organizations who are creating a centralized ci/cd policy for their repositories. For more detailed information please read our blog announcement and check out our documentation to start requiring workflows./nThis is awesome for any workflow that is non-language-specific. I'd love to see the ability to limit which repos are subject to these required workflows, via repo name pattern, repo topic, or some other criteria/nLooking forward to support for additional triggers, would be great to trigger these workflows on PR merge/close events!/nHi !\nThis feature was greatly expected in our context, but I have troubles to make it work./nHi @sbronchard, this feature requires a pull_request and/or merge_group trigger in your workflow file. The reusable workflow event workflow_call requires that the workflow is called from another workflow and is not compatible with this feature./n@tuves hi.\nI was originally using the beta version of the required workflow (not rulesets) in a non-enterprise(Team plan) organization. I tried to use the new required workflow feature within rulesets, which is exclusive to enterprises, but while I could set it up, I couldn't actually execute it./nPreviously with the beta, it was possible to have a required workflow (pull_request) that fired on other types like labeled, unlabeled, etc. That seems to have stopped working with the migration to Repository Rulesets, why is that?/nWhen using Evaluate for the required workflow I like that we can see the insights. What would be nice also is the ability to export the data. Is this on the roadmap? Is this doable today via API calls?/nWe are noticing a strange bug that affects a specific repo for some odd reason. We have a Secrets Detection workflow using Yelp's detect-secrets CLI that we have set on 20+ repos through a Required Workflow, first during the beta and now through a Repository Ruleset. During both stages, the same set of repos was configured. The following image is the bug we run into./nHello,\nWe use reusable workflow where the workflows are in a different organization./nHi, @tuves . There seems to be a bug with this feature. Enable required workflows org-wide outright prevents first push to new repos. We are able to create a repo, but not even the bypass users/admins are able to push to the main branch from local.\nEffectively, the only work-around is the checkout a new branch that's named differently from the org-wide default branch name, and then push your changes, at which point that dummy branch becomes your default branch. And then, you need to checkout another branch with your required default branch name (i.e. main), and then push it up, and get an admin to change your default branch. Unsure if you guys are aware of this already./nIt would be very helpful to have a field for description/comments in each ruleset, to allow for some documentation of the scope and intent of the rules. This is particularly valuable when using multiple rulesets which effect the same branches./nCan we please have this feature (requiring workflows) for main / master branch also?/n"
    },
    {
        "title": "Can't pull docker image from GitHub Packages registry from GitHub Actions workflow - unauthorized error",
        "url": "https://github.com//orgs/community/discussions/45981",
        "upvotes": "228",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 7,
        "replies": 4,
        "comments": 6,
        "body": "Question/nI hit same issue, I filed: actions/hello-world-docker-action#15/nI have the same issue here :(\nAny workaround?/nI think the main issue is that GitHub doesn't natively support pulling in containers in docker actions from a private feed. Some workarounds:/nPlease fix :) it's super unintuitive, and after some Googling, I see many folks are having the same unauthorized issue on public repos with public images. I'm still working through it to try to make it work on https://github.com/goware/jwtutil .. it seems my ghcr.io/goware/jwtutil package is \"private\", even though the repo is public. It's too bad as this is a very elegant integration I'm sure many GH engineers worked hard to provide, yet it doesn't work if people can't use it easily../nthis is something that gitlab has had working for about a year now and has a positively huge impact on pipeline development.  Not only am I running into this exact problem, but it's been well over a year since it's been brought up AND nobody from github has even responded./nAny updates on this issue? It's unacceptable that GH doesn't have this built-in, especially when using GHCR./n"
    },
    {
        "title": "Progress bar on all Jobs",
        "url": "https://github.com//orgs/community/discussions/63705",
        "upvotes": "216",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Product Feedback/n"
    },
    {
        "title": "Include \"latest\" attribute in release object",
        "url": "https://github.com//orgs/community/discussions/64736",
        "upvotes": "212",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 3,
        "body": "Product Feedback/nRelated discussion: https://github.com/orgs/community/discussions/64734/nThis would be very helpful for our CI/CD pipeline.  We want to keep one of our deployment slots always matching the \"latest\" release (for our QA team to use as a baseline for testing).  We have a github action that looks for the release created/updated event that is published/non-draft.  However, this doesn't work if we deploy a new release without that is not \"latest\" or if we want to switch \"latest\" to the previous release because we need to roll back our environment./nThis would simplify our workflows a lot especially when publishing Docker images where we need to know if the release is marked as latest to tag the image as such./n"
    },
    {
        "title": "Trigger Job on branch created",
        "url": "https://github.com//orgs/community/discussions/26286",
        "upvotes": "210",
        "tags": [
            "Actions"
        ],
        "rections": 33,
        "replies": 4,
        "comments": 16,
        "body": "Hello, community./nWhen you push newly created branches to Github. You can watch on push events on the branch.\u00a0https://help.github.com/en/actions/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions#onpushpull_requestbranchestags/nHi @dmfilipenko\u00a0,/nI tried/n@shkhaliq,/nThanks for this @brightran this is a really helpful workaround. I\u2019ve submitted feedback from your link as there are still a few issues with this method, which I\u2019ll just call out for anyone else who uses this method instead:/nWe have also sent a feature request for branch filter suport on the create event at Share feedback - GitHub Support. Hopefully it will arrive soon, so that way the action will not be triggered every time any branch is created./nIs there any news regarding built-in support of branches filter by the create event?/nno filter for branch yet?  \ud83d\ude26/nIt would tremendously help us achieve our use-cases. I am voicing my concern for the delete event as well./n@staticnotdynamic we have sent it through the old customer feedback form page last year. Looks like the old customer feedback form doesn\u2019t exists anymore and now feature requests should be send via the Discussions \u00b7 github-community/community \u00b7 GitHub repo, by opening a discussion. I believe my feature request was lost when the old customer feedback form was discontinued./nI have searched for past issues (now discussions) in the new tracker but I couldn\u2019t find something similar to our case. Would you please paste your original proposal there as a discussion ?/nDo we have filter enabled on branch creation ?/nStill hoping for filters on branch creation, like this :/nYou can use push and then check the created field - https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#push/nCreated a new discussion since this one is marked as answered but still no branch filter on the create event.\nhttps://github.com/orgs/community/discussions/54860\nSpamming action runs that do nothing for each created feature branch is simply not a solution if you only want to do something for a release branch./nfunny, why not support branch and tag filter. not support yet!!!!!/n"
    },
    {
        "title": "GH Actions - Timeout Approval for Workflow?",
        "url": "https://github.com//orgs/community/discussions/29000",
        "upvotes": "202",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 18,
        "replies": 4,
        "comments": 6,
        "body": "Hi everybody!/nHi @ndom91\nYou can learn control time to cron at Crontab Guru/nSame problem here and also there #5673./nSetting a concurrency group with cancel-in-progress helps in some scenarios./nWe are also missing an option to set a default timeout period./nI have an similar case, I'm adding a concurrency and an reviewer, every time it's add a new pipeline it's stopped because one wasn't approve or deny, so I would like to add an time-out in the approval to resolve it/nIn the Setting -> Environments section, I see an option to set a timeout for approval.\n/n"
    },
    {
        "title": "GitHub REST API for Workflow Run Logs returns 500 Error",
        "url": "https://github.com//orgs/community/discussions/45880",
        "upvotes": "178",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 20,
        "replies": 13,
        "comments": 4,
        "body": "Bug/nThanks for reporting. The Actions team thinks they've identified the cause of the problem and are working on shipping a fix soon./ni also have the same problem/nThis has been fixed now. Please check and let us know if it is still occurring./nThe logs API still isn't working.\nThe API responds wiht Internal Server Error(500) for every request./n"
    },
    {
        "title": "Unable to create new runner because of public IPs",
        "url": "https://github.com//orgs/community/discussions/32804",
        "upvotes": "173",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "Hi there \ud83d\udc4b/nThis appears to have been fixed for us now \ud83d\ude47/n"
    },
    {
        "title": "Hello December! Actions & Packages check-in \ud83d\udcf0",
        "url": "https://github.com//orgs/community/discussions/40607",
        "upvotes": "155",
        "tags": [
            "\ud83d\ude80Shipped",
            "Actions",
            "CommunityCheck-In"
        ],
        "rections": 8,
        "replies": 0,
        "comments": 1,
        "body": "Hello \ud83d\udc4b Y\u2019all, It\u2019s December!/n"
    },
    {
        "title": "Workflow infinite loop",
        "url": "https://github.com//orgs/community/discussions/26970",
        "upvotes": "154",
        "tags": [],
        "rections": 5,
        "replies": 2,
        "comments": 5,
        "body": "Hi all!/nThis is why we provide workflows with the GITHUB_TOKEN variable.\u00a0 It is explicitly configured to\u00a0 not run subsequent workflows to avoid this sort of behavior.\u00a0 If you had used GITHUB_TOKEN here, you should not have seen a loop./nYes, that\u2019s exactly what I guessed too.\nBut I did not found any clear info into the docs./nYou can avoid a loop as described in this answer, by adding an if condition to the job e.g.\u00a0/nWhat is My Account here? Can you please elaborate?/nWhich pieces of documentation did you look at, and which search terms did you use?/n"
    },
    {
        "title": "Product Roadmap: Composer Support?",
        "url": "https://github.com//orgs/community/discussions/20390",
        "upvotes": "147",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 9,
        "replies": 0,
        "comments": 2,
        "body": "Hey there!/nWe really want this feature. It's making a migration from gitlab difficult!/nThis would be much appreciated. Currently debating a switch to GitLab for their Composer support. I'd love to stay with GitHub though./n"
    },
    {
        "title": "GitHub hosted larger runners never start",
        "url": "https://github.com//orgs/community/discussions/35490",
        "upvotes": "145",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 6,
        "replies": 9,
        "comments": 10,
        "body": "I've created a new GitHub hosted runner (our org was just added to the beta test). When I update my workflow to use the runner label, the jobs all just hang on Waiting for a runner to pick up this job.../nNot a super great beta testing experience -- 6 days after having gotten access, this still doesn't work./nSame with me, the larger runner is never started no matter how I configure labels, runs-on and runner groups./nHi there - have you tried checking your spending limit set for Actions? If this is $0 the larger hosted runner jobs will not run./nI have the same error./nMe too. I have the exact same error!/nsame error. how can i get it fixed?/nI found out the problem. I was using an invalid builder name for one of the windows projects. I think I used win-latest instead of windows-latest and so github failed to find a builder with that name and just never ran./nTried so many things, groups, labels, setting unlimited spending limits but still always met with:\nWaiting for a runner to pick up this job.../nI have a different kind of problem. The runner itself says \"There are currently no running jobs\" when I have a running job running. I know it's using the label \"myrunner\" correct because the job is called \"Runner name: myrunner_12b250132f2e\"/nI have two large github hosted runners, an 8-core and a 16-core ubuntu, in a runner group. (github org maplibre)/n"
    },
    {
        "title": "Manual action cannot be triggered",
        "url": "https://github.com//orgs/community/discussions/42166",
        "upvotes": "1288",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 1,
        "replies": 0,
        "comments": 1,
        "body": "Bug/nDuplicate of this submission!/n"
    },
    {
        "title": "Idea: More context data (e.g. Commit Message, Commit Range)",
        "url": "https://github.com//orgs/community/discussions/26103",
        "upvotes": "1078",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 3,
        "body": "It would be nice if gh-actions adds more context data./nGitHub Actions provides a very rich set of context data includeing the full event payload for the webhook that triggered the run.\u00a0 For more information about how to access the context see\u00a0https://help.github.com/en/articles/contexts-and-expression-syntax-for-github-actions.\u00a0/nIs there a way of accessing the commit message from the event payload? I can\u2019t find any information in the linked documentation/nAnswering my own question, you can access a commit message like this from a push event, where the commit array is all the commits included in a push:/n"
    },
    {
        "title": "Concurrency group does not support environmental variables?",
        "url": "https://github.com//orgs/community/discussions/26308",
        "upvotes": "551",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 12,
        "body": "Just checking to see if others can confirm or refute my analysis here./nThis is documented in the description of the env context:/nThank you for the reply and explanation./nFor workflow-level concurrency the documentation says that only the github context is available, so no. For job-level concurrency I suppose you could use another job to create an output and use that. \ud83d\ude05/nThanks again, but unfortunately that does not sounds like a great option. But then your emoticon signaled that./nConsidering that this is about the workflow syntax itself, I guess the Actions section of the community organization discussions would be the right place: Discussions \u00b7 github-community \u00b7 GitHub/nThank you for the reply!/nHi @mikeschinkel/nHi @nicholasbergesen  \u2014/nHi @mikeschinkel/nHi @nicholasbergesen \u2014/nHi @nicholasbergesen \u2014/nHi @mikeschinkel/n"
    },
    {
        "title": "How to become verified creator of a github action?",
        "url": "https://github.com//orgs/community/discussions/25265",
        "upvotes": "485",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 4,
        "comments": 6,
        "body": "E.g. like this action.\nI would like to get a badge \u201cVerified Creator\u201d for my action./nHi @jirfag,/nany update on this one? is there any way to get verified the github action?/nI guess this should be the answer now:/nI also asked this through the support and the answer was that at the moment this is only available for organizations, not users./nHey @weide-zhou and co!/n@josh-padnick why did you post that here?/n"
    },
    {
        "title": "Is there a way to specify virtual machine region?",
        "url": "https://github.com//orgs/community/discussions/25994",
        "upvotes": "477",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 2,
        "replies": 0,
        "comments": 2,
        "body": "Does anyone know if there is a way to specify the shared runner\u2019s virtual machine region used for Actions jobs? I did see that they are hosted in Azure regions: https://help.github.com/en/actions/reference/virtual-environments-for-github-hosted-runners#ip-addresses-of-github-hosted-runners/nI am afraid that I have to say there is not a way to specify region for GitHub hosted runner.  I would recommend you submit a feature request in the Feedback form for GitHub Actions./n+1 this feature would be highly valuable!/n"
    },
    {
        "title": "Can i use action as a full job to encapsulate all CI process?",
        "url": "https://github.com//orgs/community/discussions/25072",
        "upvotes": "415",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 2,
        "body": "What i want to reach is encapsulate all CI process in one action.\nI transform every step into JS action. There is no problem.\nHow can i use these JS actions in my action that combines them together?/nYour request is quite similar with job/step templates, just like the Templates feature for YAML pipelines on Azure Pipelines.\nI tested and tried, unfortunately, GitHub Actions seems does not support job/step templates. And it also is very hard to encapsulate multiple jobs/steps into one action.\nLooks like, currently we have no available methods to encapsulate multiple jobs/steps into one action, or setup job/step templates./nWould you know if such a feature is planned? This thread indicates there is an open feedback issue for this:/n"
    },
    {
        "title": "Environments / Wait Timers - Ability to skip waiting",
        "url": "https://github.com//orgs/community/discussions/14976",
        "upvotes": "362",
        "tags": [
            "Enhancement",
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "Hey,/nAs an administrator, with the following option enabled, you can start deploying without waiting./n"
    },
    {
        "title": "GitHub Action workflow is executed for a PR from a forked repo if the PR changes the workflow file",
        "url": "https://github.com//orgs/community/discussions/25198",
        "upvotes": "338",
        "tags": [],
        "rections": 0,
        "replies": 1,
        "comments": 8,
        "body": "According to this thread, actions of a PR from a fork repo will be executed against the fork, and only if the fork is in the beta program./nIt allows bad actors to run their own scripts, but only in the context of their own repository.\u00a0Basically, it works like this:/nIs this still the case?/nThis is still the case.\u00a0 Forked repositories only have a read-only version of the repository token so that they can do a clone, and do not get a copy of workflow secrets./nBuilds should still be triggered even in forks, right? Somehow I don\u2019t see any builds for a fork in this PR\u00a0/nHi @lee-dohm\u00a0 and @ethomson\u00a0/nAs we mentioned in other threads that you\u2019re in - this is something that we\u2019re investigating and working on./nInteresting. But how would I integrate it with pull requests?/n@ethomson, We are also facing the adoption problems for quite some time (nearly 5 months). Our GitHub Action progress is in a standstill due to this limitation.\u00a0\u00a0/n"
    },
    {
        "title": "Need clarification on GitHub Actions",
        "url": "https://github.com//orgs/community/discussions/26997",
        "upvotes": "289",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 6,
        "body": "With GitHub Actions we can implement complete CI/CD workflows. But is there a way to display test, code coverage, and miscellaneous reports in a friendly HTML format like Jenkins and other CI/CD platforms?/nGood question!/nFTR you can achieve some of that by posting Markdown via Checks API. I guess you could try embedding images as base64-encoded data-urls\u2026/nI don\u2019t see GitHub actions on my GitHub repositories./n@mittalyashu You have to sign up for beta access first./nI guess that is a posh way of confirming that there is no support for hosting any build artifacts. The fact that there is an action to create a zip file does not bring much value, we were already able to do the same using curl or whatever tool we wanted./nI agree with @ssbarnea/n"
    },
    {
        "title": "Multiple workflow triggers shouldn't start multiple workflow runs",
        "url": "https://github.com//orgs/community/discussions/11975",
        "upvotes": "282",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 1,
        "replies": 2,
        "comments": 4,
        "body": "Hi,/nIf I'm understanding correctly, you have a CI system that you want to run during development, so that any time a user pushes a feature branch update, they'll get the minimal CI.  And then when they open a pull request from that feature branch, they would get the more advanced CI on the pull request (but no longer run the original CI on those branches)./nThanks for your reply and you're right. I had a misconception here. It's not as easy as expected./nFwiw, this is how  check-spelling action handles this:\nhttps://github.com/check-spelling/check-spelling/blob/cb7b743c240a74786679a4de908dbe5b013984ce/unknown-words.sh#L34-L60/nIdeally, we have a stage were we can evaluate all the event and define an action.\nDefining a variable to enable this like evaluate_events, and if not, by default run all the triggers of the workflow.\nIf variable is defined, we can apply the logic:/n"
    },
    {
        "title": "Marketplace should allow subdirectory actions",
        "url": "https://github.com//orgs/community/discussions/5474",
        "upvotes": "261",
        "tags": [
            "Actions",
            "Marketplace",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 2,
        "body": "GitHub Actions currently supports aggregating multiple actions as subdirectories of a single repository:/nThis seems really crazy, we have three actions with closely related code... we're supposed to copy half our code between 3 repos?/nI too think this is overly restrictive and leads to closely-related code being artificially spread among several repositories instead of one - not a good architecture for my code from a software engineering perspective \ud83d\ude1e/n"
    },
    {
        "title": "Please, bundle together emails from failed github actions.",
        "url": "https://github.com//orgs/community/discussions/6054",
        "upvotes": "258",
        "tags": [
            "Actions",
            "Notifications",
            "ProductFeedback"
        ],
        "rections": 7,
        "replies": 0,
        "comments": 1,
        "body": "We have quite an extensive set of workflows in some of our repositroes. When they're failing, or being canceled after subsequent push, my inbox is getting bombarded by emails. But unlike, say, notifications about PR comments, those aren't bundled in threads in any email client I know./nLikewise, when running a job referencing an environment that requires review: if the job is run in a matrix, we get an individual email for each matrix item. It would be nice to coalesce these emails./n"
    },
    {
        "title": "Do not run cron workflows in forks",
        "url": "https://github.com//orgs/community/discussions/26684",
        "upvotes": "236",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 3,
        "body": "I have an action which runs on a cron schedule. However I only want it to run on the main repo, not in forks. Currently it runs in all forks too./n@jacobtomlinson\u00a0,/nPerfect thanks\u00a0@brightran! The workflow raises a PR automatically to update dependencies. So raising this PR on forks was just noise for anyone who contributes to the project./nChecking for the repository name on the job level is a bit cumbersome IMHO.\nI opened a ticket with suggestions of better solutions: Restrict scheduled workflow to repository \u00b7 Discussion #16109 \u00b7 github/feedback \u00b7 GitHub/n"
    },
    {
        "title": "'ubuntu-latest' runner not found when using workflow_call between repositories",
        "url": "https://github.com//orgs/community/discussions/25303",
        "upvotes": "233",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 14,
        "body": "I am getting a weird error when reusing workflows/nI had both workflows on the same branch same repo and I was able to use matrix.os without errors in the called workflow./nCool! I will give it another go tonight, this feature is going to save me a lot of time!/nStill broken for me, this is from git-mit to common-pipelines /nIt seems, the github actions service assumes if you hit the concurrency limit of 20 jobs in a repository that you are using a self-hosted runner in a called workflow./nSince it\u2019s not a self-hosted runner, that seems like a bug, beta or not?/nHi everyone. I\u2019m the product manager for reusable workflows./nThanks! Please let me know when I should dive back and and try again :slight_smile:/nHello - we\u2019ve deployed a fix for this, and you shouldn\u2019t see this error. Give it a try and let me know if it works for you./nAwesome, that seemed to work\u203c [actions] reuse common workflows \u00b7 inspect-js/is-arguments@539328a \u00b7 GitHub/nWhile it\u2019s in beta, we may change parts of the syntax or API that could break your workflows./nFair enough :slight_smile: then I\u2019ll avoid migrating anything for now, but I\u2019ll explicitly say that I\u2019m very excited to roll this out, and please come out of beta soon! \ud83d\ude03/nGitHub Actions: Reusable workflows are generally available | GitHub Changelog yay!/nSuddenly seeing this today, has been working fine, no self-hosted runners in play here\u2026/nThere seems to be something to this @jenschelkopf , when I retried with available capacity, it worked./n"
    },
    {
        "title": "Can I edit the main.workflow github-actions file locally?",
        "url": "https://github.com//orgs/community/discussions/25337",
        "upvotes": "228",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 8,
        "body": "Asked in StackOverflow./nHI\u00a0@baruchiro,/nI\u2019m afraid I did not quite understand.\nAs you can see, I did not use Github Desktop but Git CLI./nHi\u00a0@baruchiro\u00a0,/nYes, the main.workflow can be edited locally and changes pushed to the GitHub-hosted repository. The error message doesn\u2019t mean exactly what you\u2019re describing though:/nHi @andreag,/nI\u2019m observing this through git command line. Marking this issue as solved is very misleading./nThanks for the explanation!/nFor the interested, I got the error trying to push from VS, but not from the terminal, (I am using signed commits). OS: Ubuntu./n"
    },
    {
        "title": "Xcode on macOS fails: cannot find 'fulfillment' in scope",
        "url": "https://github.com//orgs/community/discussions/61331",
        "upvotes": "216",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Question/n"
    },
    {
        "title": "Nested variable substitution",
        "url": "https://github.com//orgs/community/discussions/26428",
        "upvotes": "212",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 3,
        "replies": 1,
        "comments": 3,
        "body": "I am using a matrix to run my unit tests in a variety of environments. I have a dependencies file per environment. I want to use the hash of this in the cache restore key so I need to define the file to look for using the ${{ matrix.stack }} variable (which is just a string) like so:/nNested expressions are not supported I think?/nFantastic, that\u2019s worked perfectly. I\u2019d missed the format function! Thanks very much./nthis doesn't work for fromJSON if we are building a dynamic matrix from a json and one of the object keys is dynamic: I tried this so far:\ntarget: ${{ fromJSON(needs.discover.outputs.hits).format('{0}Jobs', inputs,environment).deploy }}\ntarget: ${{ fromJSON(needs.discover.outputs.hits).${{ inputs.environment }}Jobs.deploy }}/n"
    },
    {
        "title": "No more than 10 inputs for reusable workflows?",
        "url": "https://github.com//orgs/community/discussions/26781",
        "upvotes": "210",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 1,
        "replies": 2,
        "comments": 8,
        "body": "I am hitting what seems like an odd limit. I am only able to pass up to 10 inputs to a workflow_call triggered workflow, and I get an error related to the workflow_dispatch event./nHi @joshua-hancox_fedex, I\u2019m the product manager for reusable workflows. You\u2019ve run into a bug. The limit should be much higher. I\u2019ve opened an internal issue for the team to investigate. Thanks for letting us know./nCool, thankyou for the quick response. :slight_smile:/nHi @joshua-hancox_fedex, we\u2019ve removed the limit on the number of inputs that can be defined for a reusable workflow. See if that works for you!/nYes testing and working OK. Thankyou./n@jenschelkopf/n@jenschelkopf/n@jenschelkopf Would you mind to pass the issue to the team with a high priority please?/nAny update on this...?/n"
    },
    {
        "title": "Transform shortcodes to Emoji in GitHub Actions",
        "url": "https://github.com//orgs/community/discussions/9656",
        "upvotes": "202",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 3,
        "replies": 5,
        "comments": 2,
        "body": "Hi!/nThank you for your feedback.  I agree this is something that should work the same across GitHub.  I will make sure to pass this along to the engineering team and see if we can get a quick fix./nhow did moq get it to work? https://github.com/moq/moq/runs/5087306364?check_suite_focus=true\n/n"
    },
    {
        "title": "GitHub action triggers like pull_request [labeled, unlabeled] should support label filter",
        "url": "https://github.com//orgs/community/discussions/4679",
        "upvotes": "178",
        "tags": [
            "PullRequests",
            "Actions",
            "ProductFeedback"
        ],
        "rections": 13,
        "replies": 2,
        "comments": 1,
        "body": "If we have workflows attached with on.pull_request [labeled, unlabeled] event trigger, it runs no matter what labels are added/removed./n+1 This is a key feature for us, it allows us to have workflows triggered on specific labels instead of having to do the current hack like:/n"
    },
    {
        "title": "Use absolute time in GitHub Actions workflow display",
        "url": "https://github.com//orgs/community/discussions/14399",
        "upvotes": "173",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 5,
        "body": "Hi,/nThanks, @scott-doyland-burrows - I've also found that I'd like to be able to get the exact time from this page. I'll talk to the team and see if there's a way that we could surface some more information, and we'll put this on the backlog./nSeconding this. I shouldn't have to do math to figure out when my build went in. It's not even listed if I open the action, still just tells me \"17 hours ago\"/n+1, trying to cross reference times with other events is a pain as it is now./nIs there still no progress on this? Did not find any update or setting for this yet. Would be really helpful./nWould really like this! Trying to debug an issue now but having to sift through many deploys from \"2 weeks ago\"/n"
    },
    {
        "title": "Automate publishing new releases to Marketplace",
        "url": "https://github.com//orgs/community/discussions/52135",
        "upvotes": "155",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "Product Feedback/n"
    },
    {
        "title": "Dynamically specify branch name in inputs",
        "url": "https://github.com//orgs/community/discussions/56891",
        "upvotes": "154",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 3,
        "body": "Product Feedback/n+1/n+1!/nShort research showed that it is not currently supported and in our case it is like \"nice to have\"./n"
    },
    {
        "title": "Merge Queue: Access to the base_sha of the predictive branch",
        "url": "https://github.com//orgs/community/discussions/41939",
        "upvotes": "147",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "Product Feedback/nI may have just produced a duplicate of this discussion here: https://github.com/orgs/community/discussions/62219/n"
    },
    {
        "title": "Workflow fails to trigger silently on syntax error",
        "url": "https://github.com//orgs/community/discussions/47101",
        "upvotes": "145",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Product Feedback/n"
    },
    {
        "title": "Stop automatically deleting inactive runners",
        "url": "https://github.com//orgs/community/discussions/58146",
        "upvotes": "1288",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 10,
        "replies": 0,
        "comments": 3,
        "body": "Product Feedback/nAgreed! This is very annoying in our company where we use self-hosted runners to deploy updates. This is triggered manually 1-2 times per month and has worked flawlessly for years, but now we have to waste time setting up runners every single time! Github have basically made runners single use for us now./nmake sure it's tracked, guys, and this should never be deleted for no reason, inactivity for a few month or even a bit longer is not a reason for github to do so/nI agree, there should be a way of marking self-hosted runners to remain permanently unless we decide to manually delete them. I don't understand GitHub's reasoning for making this change. We should be in control of the runners we create and we decide when and if to delete them./n"
    },
    {
        "title": "Concurrency-limited workflow runs should not notify when currently pending jobs are cancelled",
        "url": "https://github.com//orgs/community/discussions/50725",
        "upvotes": "1078",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 2,
        "body": "Bug/nYep the email alerts for concurrency cancelled runs are pretty annoying!/ni agree./n"
    },
    {
        "title": "actions/runner should provide Windows images for self-hosted Windows runners",
        "url": "https://github.com//orgs/community/discussions/69324",
        "upvotes": "551",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Product Feedback/n"
    },
    {
        "title": "I cannot git push into github refusing to allow a Personal Access Token to create or update workflow",
        "url": "https://github.com//orgs/community/discussions/26254",
        "upvotes": "485",
        "tags": [
            "Actions",
            "ProductFeedback",
            "npm"
        ],
        "rections": 28,
        "replies": 10,
        "comments": 8,
        "body": "Hi, after adding in my local repository .github and one workflow I cannot push anymore to github./nrefusing to allow a Personal Access Token to create or update workflow .github/workflows/checks.yaml without workflow scope)/nThank you yes I created a new personal token then was able to push and create pull request after modifying .github/workflow files\n(i had old token locally set up in mac keychain without workflow permissions before and therefore having the error)/nHello kristijorgji,\nGreetings!/nI've reproduced the same issue and if someone needs to refresh steps how to create a personal access token in GitHub, this video will be helpful for you./nEasiest fix seems like just updating the existing token with additional scope 'workflow' ... worked for me./nFor those using gh CLI and authenticated against Github with gh auth login flow, you'll need to pass -s to request additional scopes./nI already had workflow enabled in my token, but it didn't work... I had to configure Windows Credential Manager to use PersonalAccessToken as the username and the token as the password./nRecently I faced this issue.\nSimplest solution is to go the Personal Access Token page of your GitHub profile and modify that token to include the 'workflow' scope.\nGo to Settings-> Developer setttings->Personal access tokens-> Tokens(classic)/n"
    },
    {
        "title": "Is there a way to pre-fill the ref and inputs for a workflow_dispatch via query string?",
        "url": "https://github.com//orgs/community/discussions/51159",
        "upvotes": "477",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 2,
        "replies": 0,
        "comments": 0,
        "body": "Product Feedback/n"
    },
    {
        "title": "Introducing Actions Playground \ud83e\udd3e\u200d\u2642\ufe0f",
        "url": "https://github.com//orgs/community/discussions/55043",
        "upvotes": "415",
        "tags": [
            "Actions"
        ],
        "rections": 2,
        "replies": 0,
        "comments": 0,
        "body": "The demo powered by GitHub Codespaces will introduce you to GitHub Actions, the most popular tool for automating CI/CD workflows. By the end of it, you\u2019ll know how to:/n"
    },
    {
        "title": "What is the correct if condition syntax for checking matrix.os version?",
        "url": "https://github.com//orgs/community/discussions/25554",
        "upvotes": "362",
        "tags": [],
        "rections": 1,
        "replies": 1,
        "comments": 8,
        "body": "Hi,/nI figured it out and now it works:/nDoes\u2019t work.\u00a0 I get \u201cYou have an error in your yaml syntax on line 30\u201d with this:/nThis works fine for me. Maybe your indentation is wrong?/nI checked and double checked the indentation.\u00a0 Looks right to me.\u00a0 And there are no tabs either./nLooking more, the indentation isn\u2019t clear to me.\u00a0 In your answer the \u2018run\u2019 is under the \u2018if\u2019; whereas in the \u2018solved\u2019 response it\u2019s indented by four spaces.\u00a0 I indented by two./nThat was it.\u00a0 It wants no indend, the \u201csolved\u201d solution is wrong./nI think it could be a copy paste problem with the forum here which killed the right indentations/nHaving separate names makes it work fine/n"
    },
    {
        "title": "New permission for actions token: labels: write",
        "url": "https://github.com//orgs/community/discussions/13565",
        "upvotes": "338",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 9,
        "replies": 2,
        "comments": 3,
        "body": "I have written GitHub Action which modifies labels in the repository. The auth token set by the issues: write permission does not allow creating/updating/deleting of labels in the repository, despite the API for labels being categorized under issues./nThanks for the feedback @jozefizso - I'll give this feedback to the team that owns access tokens and permissions so that they can track this work item. Once we have tokens that can be scoped to a label, we can take a look at adding that scope to the GITHUB_TOKEN./nTo add onto this suggestion I would also change the PAT option so that there is a runners: write scope for BOTH repos and organizations./nI have written GitHub Action which modifies labels in the repository. The auth token set by the issues: write permission does not allow creating/updating/deleting of labels in the repository, despite the API for labels being categorized under issues./n"
    },
    {
        "title": "Using GitHub Packages with GitHub Apps",
        "url": "https://github.com//orgs/community/discussions/26920",
        "upvotes": "289",
        "tags": [
            "Packages",
            "ProductFeedback"
        ],
        "rections": 35,
        "replies": 0,
        "comments": 5,
        "body": "I\u2019d like to manage a private RubyGems on GitHub Packages. And I\u2019d like to use a personal access token or GitHub Apps\u2019s token(installation access token) to authenticate./nCan i use GitHub Packages with GitHub Apps now?/nThank you for answering. I understand \ud83d\ude03/nIt would be great if adding package support to apps was considered as an improvement./nAny updates to this? This (and GitHub Packages support for fine-grained PATs, which I assume is related) is sorely needed functionality./nIs PATs still the only option to use GitHub Packages?/n"
    },
    {
        "title": "[Request] - Allow for configuration to prevent workflow runs from being deleted from GitHub Actions",
        "url": "https://github.com//orgs/community/discussions/7810",
        "upvotes": "282",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 13,
        "replies": 3,
        "comments": 1,
        "body": "By default, users can delete workflow runs if the run is completed or more than two weeks old (https://docs.github.com/en/actions/managing-workflow-runs/deleting-a-workflow-run)/nThanks for the feedback, this makes sense.  We'll add this to the backlog./n"
    },
    {
        "title": "I'm not receiving email notifications on my PR comments",
        "url": "https://github.com//orgs/community/discussions/44376",
        "upvotes": "261",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 4,
        "replies": 8,
        "comments": 13,
        "body": "Product Feedback/nMaybe it would help to check \u2714\ufe0f  email for participating too./nHere are steps you may try:/nI am having the same issue. Any reset button? I am not sure what I changed?/n@news-manishpatel Can you try choosing this option:\n\n?/nI'm having the same problem, did you manage how receive an email after a comment?/nI'm facing this same issue/nThe same here/nI think this issue is posted in the wrong section/n+1 same issue here. Getting all email notifications except replies to my comments./nMake sure your GitHub notification settings are configured to send email notifications for pull request activity. Follow these steps:/nKeep in mind that getting notifications for anything you are marked as \"Participating\" in, will STILL result in a lot of spam. Because \"Participating\" >= \"you left a comment on a pr\" || \"this is your pr\"/nSince this is reproducible by multiple people, I opened a support ticket/n@TraceyC77 thanks for opening the ticket. I have to remind myself every day to check if anyone replied to my comments on issues. It would be so much better to get an e-mail reminder/n"
    },
    {
        "title": "Release notes does not work when using cherry picking",
        "url": "https://github.com//orgs/community/discussions/19067",
        "upvotes": "258",
        "tags": [
            "Repositories",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 3,
        "body": "Hi there!/nI run in the same problem.\nThe auto generation lists only pull requests, not normal commits./nif I cherry-pick the commit of a PR to main in my release branch, I would expect the notes to add that PR when generating release notes that target that release branch./nI've asked a related question for the \"Generate release notes\" button in the GitHub UI here: https://github.com/orgs/community/discussions/113181. This issue does not have much traction, it seems./n"
    },
    {
        "title": "Missing workflow_dispatch at the Action tab",
        "url": "https://github.com//orgs/community/discussions/25219",
        "upvotes": "236",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 4,
        "replies": 3,
        "comments": 26,
        "body": "I was doing some tests with the workflow_dispatch and it was working great until I did a force push into master (it\u2019s a private and not used by others repository) to move the changes from master to a pull request.\nOne of those changes was the workflow_dispatch. After I did this the workflow doesn\u2019t shows up anymore at the Action tab./nThe workflow file must be committed in the default branch (master/main) if you want to use the workflow_dispatch event. Is it still present there or only on a feature branch?/nYes, the file is at the default branch and still doesn\u2019t show to me on the actions tab. It\u2019s not the first time this happens to me. Looks like GitHub get into an invalid state and after that, I can\u2019t use the manual workflow at the repository anymore./nIt\u2019s a bug with GitHub, I just confirmed. I changed the name of the files and the name of the workflow and now it\u2019s showing for me./nThanks. I had the same problem with not displaying the workflow button on the page. After changing the file name, it works./nMay we get a notification, when this bug is fixed? It\u2019s quite annoying. I faced it as well./nThis has been fixed, if you are still seeing a problem, please let us know where./nHey @andymckay !\nIt happened just today in my private repository. I have pushed there a copy of the public repository with already existing workflows. The workflow that was supposed to be triggered manually only wasn\u2019t detected by Github and therefore didn\u2019t show up in Actions tab. So, I wasn\u2019t able to trigger it. Neither via UI, nor via REST API. I had to rename a workflow file in master to make Github notice that workflow and let me run it eventually. Renaming a workflow in a branch didn\u2019t help./nThank you, I\u2019ll file an issue internally and the team will take a look./nI was able to reproduce what you describe.  I didn\u2019t need to rename the file, but instead just added a comment to the file and noticed the workflow was created./nStill couldn\u2019t get it to work in a private clone of a private repository. I\u2019ve tried adding a comment as @lupine86 suggested but the button still didn\u2019t appear./nIt is not working for me either! no button for the workflow is being shown./nI can confirm renaming workflow from the the orignal.yml  to fixed.yml fixed it for me as well. It is then also possible to rename to the orginal.yml to have it work afterwards./nHi @andymckay,/nHi @andymckay,/n@srinivasan-getstan, @abhinavan1812 I no longer work at GitHub, so am not able to provide much insight, sorry./nHi everyone/nNot able to see the Run Manual Workflow option even though if i give the workflow_dispatch in my yml file as attached in the below screenshot,\n/nEdit: Double-cheking the default branch fixed the problem. I thought the default branch was master but for some reason it was set to an inactive feature branch./nI changed the file name but it didn't work, but changing the name of the action solved it!/nsame thing happens for me as well on my private_repo and its quite annoying./nIt is still happening workflow_dispatch. The fix was to rename the filels but the workflow that has no longer a file can't be deleted./nAlmost three years, bug is still there./nStil facing this issue. Now able to trigger the actions from the UI manually/nI had to change the default branch from main to master to resolve this. Same yaml file for the workflow ./nI ran into this issue today. After renaming the file, renaming the workflow name, and merging to main, the Run workflow button is available. See mikesmithgh/kitty-scrollback.nvim#102/nUnfortunately, 2024  problem still exist.\nIt's absolutely random. Some actions not fixed even after renaming/recreation, some after several pushes and some works as expected  immediately after creation.../n"
    },
    {
        "title": "Disable reruns for specific job",
        "url": "https://github.com//orgs/community/discussions/54264",
        "upvotes": "233",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Question/n"
    },
    {
        "title": "GitHub Actions runners should report Azure region in the runner context",
        "url": "https://github.com//orgs/community/discussions/8014",
        "upvotes": "228",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 7,
        "replies": 1,
        "comments": 1,
        "body": "In our CI scripts we have dependencies on external services, such as Azure Service Bus, Cosmos DB, or other services hosted as containers in Azure Container Instances. In order to minimize the latency between the GitHub Actions runner and the other service, we'd like to set them up in the same Azure region./nHi @DavidBoike - very interesting feedback.  I hadn't considered this use case but it very much makes sense.  I'll give this some thought./n"
    },
    {
        "title": "How can I access the current repo context and files from a Docker container action ?",
        "url": "https://github.com//orgs/community/discussions/26855",
        "upvotes": "216",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 2,
        "comments": 10,
        "body": "Hello ! I am trying to build a new Docker container action that must interact with the current repo files.\nI understand how to setup and initialize my action with Docker, however I do not understand how am i suppose to acces the repository\u2019s files and the current job context Indeed, lets supose that we have a workflow that calls actions/checkout, how can I then acces these files from inside the container ? Do I have to mount a docker volume to GITHUB_WORKSPACE, or does Github Actions provide a better way to do this ?/n@obrassard When use a Docker container action in the workflow, it will automatically run with a volume mapping from GITHUB_WORKSPACE (on the runner machine) to /github/workspace (inside container).\u00a0/nThanks for your great answer !!!/nThat doesn\u2019t seem to be the case for me. I\u2019m running the checkout@v2 action before my Docker action but there doesn\u2019t seem to be a /github/workspace directory containing my source files./nThat\u2019s part of the container build, not run. The workspace directory is only mounted at run time. Also Docker builds in general can\u2019t access random files, only files in their build context (see the Usage section of the Dockerfile reference). Simply put, you can\u2019t use files from the repository running your action in the Dockerfile, only later in the code that\u2019s running in the resulting container./nIndeed, you won\u2019t have access to /github/workspace during the build phase of your docker image.\nThis directory is attached (mounted as a docker volume) to your container instance once it is up and running. So, in other words, you will have access to /github/workspace when the action run, not when the image is built. To perform operations on the files in /github/workspace, you could set a shell script as your action entrypoint./nThanks for your quick reply!/nIf there is documentation answering this question then please point me towards it, but I\u2019m struggling to understand how actions work in anything more complicated than the basic examples./nOk thank you for that. I\u2019ll have a read through the docs./nWhy not make them available during the build phase too?/nOk I think that makes sense. I\u2019ll have a look at the docs like you recommended./n"
    },
    {
        "title": "How to trigger a single build on either push or pull_request",
        "url": "https://github.com//orgs/community/discussions/26872",
        "upvotes": "212",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 4,
        "body": "I\u2019m already using Azure Pipelines for builds. I\u2019m now trying GitHub Actions for builds side by side, so I can compare them./nHello, your workflow is configured with \u201con: [push, pull_request]\u201d so it gets triggered twice when a commit is pushed to open a pull request. It looks to me like \u201con: push\u201d would work well for your use case./nThe devil in the details is that pull requests should not publish build artifacts, whereas pushes / merges to master should, so I need to be able to differentiate pull requests from pushes with the GITHUB environment variables:/nYou can specify the branches that you want builds to run on.\u00a0 WIth the on: [push, pull_request] setting, you\u2019ll get any pushes into _any_ branch, and pull requests into _any_ branch./nI published https://github.com/marketplace/actions/skip-duplicate-actions to solve this problem in an easy way.\nYou can give it a try if this is still an issue./n"
    },
    {
        "title": "Speed comparison: Github Actions takes 3m 32s, Circle CI takes 12s",
        "url": "https://github.com//orgs/community/discussions/26146",
        "upvotes": "210",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 11,
        "body": "Hi all,/nIn Github Actions, when you choose Github Hosted Runner to run your workflows, it provides a clean instance for every job execution without built layers nor dependencies\u00a0./n@yanjingzhuthank you for your reply. Github strongly advise not to use self-hosted runners for open source development (https://help.github.com/en/actions/hosting-your-own-runners/about-self-hosted-runners#self-hosted-runner-security-with-public-repositories)./nEdit: Just realized you are the one who made that example of caching the dependencies. See comment below./nI just saw that you are already using the cache (and are apparently the source of where the cache example is coming from). My bad. The logs from your build are gone now so I couldn\u2019t see the breakdown of where all the time was spent./nOh, sorry for missing that you are using a public repo. Yes, github actions doesn\u2019t suggest to use self-hosted runner for public repo. Using self-hosted runner is not a good suggestion.\u00a0/nI believe GitHub will have to find a solution to docker layer caching. This seems to be the number one reason for \u201cmy build is slower on GitHub Actions\u201d complaints. We are suffering from this greatly, but the enjoyment of using GitHub Actions eases the pain a little./n@rlittlefieldI already use actions/cache to cache Composer\u2019s vendor directory. My question is in relation to persisting files between jobs, which actions/cache does not do, as far as I can tell./n@yanjingzhuPlease check my Circle CI build again. I have merged the Circle CI config into the same branch, github-actions. Every single file is persisted between \u201cbuild\u201d job and \u201ctest-phpunit\u201d job. Both jobs execute and complete within 30 seconds combined./n@dannybenyou are right. Without layer caching, the product will always be slow. There is nothing we can do about it. I will contribute to the links you provided. Thanks very much for your response./nUpload artifacts will upload to github server side.\u00a0\u00a0I tried to fork your repo , I found that it is php-actions/composer action slows down the upload artifacts step, but I could not figure out why this happens.\u00a0\u00a0/nI was under the impression that actions/cache could persist files between jobs, as long as you have the same cache key. Isn\u2019t that the main idea?/n"
    },
    {
        "title": "Environment variables example not working",
        "url": "https://github.com//orgs/community/discussions/25708",
        "upvotes": "202",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 7,
        "body": "So I was reading docs and came to part of environment variable https://help.github.com/en/articles/virtual-environments-for-github-actions#environment-variables . When I copy pasted given example and run actions why given example is not working?. It is displaying Hello World ! but it should have displayed Hello World Mona The Octocat !/nEnvironment variables are case-sensitive. Either the variables names in the env key need to be uppercase or the env substitution in the run key need to be lowercase./nIts not working for me either, I thought it was me, but not sure it is anymore. ex. of my yaml/nThis is also not working for me.\u00a0 I can\u2019t use environment variables at all in my .yml./nname:\u00a0.NET Core/nDifferent shells have different syntax for accessing environment variables, and different OSes have different default shells./nThanks Jherico!/nThis works for me:/n"
    },
    {
        "title": "Forked repo doesn't trigger action",
        "url": "https://github.com//orgs/community/discussions/25749",
        "upvotes": "178",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 11,
        "body": "I want to use this\u00a0https://github.com/matchai/waka-box, as following the README, I should fork the repo first./nFirst, were you accepted to the beta for GitHub Actions?\u00a0 If not, that\u2019s a necessary first step./nYep, I 've accepted it./nI\u2019m also having this problem (on a different repo). Is this a bug with Github Actions?/nHi there @g1eny0ung! I was able to reproduce and fix with this temporary workaround. What about copying the contents of the schedule.yml, deleting the file, and creating a new file with the same name and contents as the original schedule.yml?/n@imjohnbo Thanks! It works for now!/nYou have to delete file, commit, than recreate file and commit again?/nYep. I test it, only update can\u2019t work./nSadly this doesn\u2019t work for us./nIs this still not available?/nI am facng same issue.\nPR opened from forked repo doesn not trigger actions./nHey there, any updates on this one @imjohnbo hopefully?/n"
    },
    {
        "title": "Concurrency: cancel-in-progress at top level doesn't seem to cancel running workflows?",
        "url": "https://github.com//orgs/community/discussions/26566",
        "upvotes": "173",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 6,
        "body": "Hi there, I just tried the new shipped concurrency feature (thanks for that!) and with the following workflow in a private repo:/nThe first link is about the concurrency key at the top level:/nSo far I was only able to get it to work when using cancel-in-progress at the job level./nThere\u2019s a remark about jobs.<job_id>.concurrency:/n@ocean90 I was very eager to utilize this feature when I saw the announcement, but I have had the same experience as you./nI wonder if this is related to your issue./n@yaananth gave an update in Actions concurrency bug report - #4 by yaananth for a related issue and so I tried the concurrency key on the workflow level again and it\u2019s now working too!/n"
    },
    {
        "title": "[GitHub Actions]Pull requests always include some outdated checks",
        "url": "https://github.com//orgs/community/discussions/26104",
        "upvotes": "155",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 5,
        "body": "I updated my github actions workflow files to new yaml format. And found out every pull request will contains a expected check that is outdated and not exists in current workflow file. This cause the pull request\u2019s status stuck in status \u201cSome checks haven\u2019t completed yet\u201d like below./nHi\u00a0@morphinewan,/nThank you for your reply. But my problem is \u201cESLint Jest\u201d task does not exists any more in fact. How can I disable the required checks of a non-exists check?/nFor more information./nYou can remove the outdated check in the protected branch settings of the repository settings./nThanks, problem is solved./n"
    },
    {
        "title": "Use variables in upload-artifact",
        "url": "https://github.com//orgs/community/discussions/25832",
        "upvotes": "154",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 4,
        "body": "This seems like it should be super simple:/nUse:/nI\u2019ll try that./nhttps://help.github.com/en/articles/contexts-and-expression-syntax-for-github-actions/nIt woulf be quite useful if we could access the runner context to write e.g. ${{\u00a0runner.home }}. This would avoid hard-coded paths when using the upload action:/n"
    },
    {
        "title": "Badge is always showing \"failing\"",
        "url": "https://github.com//orgs/community/discussions/25846",
        "upvotes": "147",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 4,
        "body": "Hi there. For some reason I can\u2019t figure out, the badge for my workflow is always showing \u201cfailing\u201d even through the worflow is not failing.\u00a0/nHi\u00a0@badsyntax,/nThanks\u00a0@badsyntax\u00a0,/nWe\u2019ve deployed a change to not default to the push event, the badge you posted should now work as expected.\u00a0/nAwesome thank you! :slight_smile:/n"
    },
    {
        "title": "Github Actions failure handling during deployment",
        "url": "https://github.com//orgs/community/discussions/25900",
        "upvotes": "145",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 13,
        "body": "Given a workflow that is triggered on = \u201cdeployment\u201d \u00a0I would like to both deploy and update the deployment-api. From what I gather I guess these are my alternatives:/nThank you for taking the time to write your feedback! Hopefully, someone else here has a similar workflow and can share their experience. In the meanwhile,\u00a0 I\u2019ve taken your feedback and passed it along to the appropriate teams.\u00a0/nI found a functional solution for this, going along with option number 1./nI\u2019ve been trying to come up with a solution for this on and off for the past couple weeks./n#1 Yes please :slight_smile:/nHi\u00a0@jerrylopez!/nHey @judoole\u00a0\ud83d\udc4b\ud83c\udffd/nThanks\u00a0@assimovt! And\u00a0aws-eb\u00a0looked great!/nBtw, did you find a solution to the create a log_url to the action\u00a0@assimovt? I also asked that in\u00a0https://github.community/t5/GitHub-API-Development-and/Github-Actions-url-to-run/m-p/16471#M506/nThx,\u00a0@judoole It\u2019s still in PoC as I can\u2019t get the log URL and description of the deployment. Also, noticed you\u2019ve bumped into a similar issue and tested that it\u2019s not being exposed in ENV. I think we have to wait for that to come in from GitHub./n@judoole Thanks for open sourcing github-deploy - it\u2019s been really helpful to get our Slack + GitHub Actions + AWS Beanstalk deployments rolling. I\u2019ve blogged about it\u00a0\u00a0\ud83d\udc49https://getslashdeploy.com/blog/slack-deploy-github-actions-aws/ check it out!/nThanks\u00a0@assimovt, that was a nice write up as well!/nI ended up solving a very similar problem to this when building deliverybot (https://deliverybot.dev). This is the repo that I\u2019m using to deploy to firebase from actions and set the correct deployment status:\u00a0https://github.com/deliverybot/status./nNice\u00a0@colinjfw\u00a0!/n"
    },
    {
        "title": "Error: Can't use 'tar -xzf' extract archive file... return code: 2",
        "url": "https://github.com//orgs/community/discussions/26321",
        "upvotes": "1288",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 12,
        "replies": 15,
        "comments": 12,
        "body": "https://www.githubstatus.com says nothing is wrong. But my builds suddenly failing at/nme too\nhttps://github.com/imiphp/imi/runs/6704164514/nmy fix/nissue here: Cache fails with zstd error - zstd -d: Cannot exec: No such file or directory \u00b7 Issue #811 \u00b7 actions/cache \u00b7 GitHub/nraised issue : Error: Can't use 'tar -xzf' extract archive file \u00b7 Issue #1923 \u00b7 actions/runner \u00b7 GitHub/nWe are having the same issue as well:/nIssue seems to be resolved. There were also some local cache on runners or something but it should work even with v2 now. More info in issue above./nMe too: Error on Github Action's job setting up ./nJust hit this issue. Not an issue with our codebase.\nCan't use 'tar -xzf' extract archive file: /home/runner/work/_actions/_temp_789369c1-1dbf-46ab-9c4d-5b97f1e700eb/ba1fdd03-73d3-4898-a44c-ceedda73824a.tar.gz. return code: 2./nactions/runner#1923 (comment)/n+1, can confirm\nhttps://github.com/battlefield-portal-community/bfportal.gg/actions/runs/3196541802/jobs/5218624844/nLooks like investigation is ongoing/nhttps://www.githubstatus.com says nothing is wrong. But my builds suddenly failing at/n"
    },
    {
        "title": "Cannot create PAT _with_ scope write:packages _without_ repo scope",
        "url": "https://github.com//orgs/community/discussions/26673",
        "upvotes": "1078",
        "tags": [
            "Packages",
            "ProductFeedback"
        ],
        "rections": 2,
        "replies": 0,
        "comments": 10,
        "body": "Per the documentation here:/nhe UI does not appear to allow this; when write:packages is selected, I am unable to deselect the parent repo scope, or any child repo scope./n\ud83d\udc4b Thanks for reporting this bug.  We have an issue to track and fix on our end./nHow does one edit an existing PAT\u2019s scopes? There doesn\u2019t seem to be an option to do anything except delete one that I can see.\nI was able to create a PAT without the repo scope by modifying the create token POST request with a proxy./nThe access tokens appear as a list, which I guess is where you can see the delete button. The access token description appears to me as blue, bold text. It is a link. Clicking the link will take you to a page where you can modify the scopes. (I agree this doesn\u2019t seem especially intuitive when there is a button for delete and not for edit)./nEven after creating the PAT, saving it, then attempting to edit the saved PAT\u2019s scopes, it\u2019s not possible to keep write:packages and remove repo scope \ud83d\ude26/nYup; it appears that it\u2019s no longer possible to remove the repo scope through the UI if you have the write packages scope (although I\u2019m pretty sure you could do it a few weeks ago)./nIt still seems to work when modifying the form through the browser console and then saving it./n@ziegfried,/nThanks @jcansdale! That worked! Just added delete:packages to the scopes (as mentioned in the docs):/nI am new with git,\nI\nWhile I was trying to clone a repository, I entered this error message:\nfatal: Authentication failed for \u2018https://github.com/Bodundeft/alx-pre_course.git/\u2019\nroot@5eea4a03ae82:/# git clone\nCloning into \u2018alx-pre_course\u2019\u2026\nPassword failed\nremote: Support for password authentication was removed on August 13, 2021. Please use a personal access token instead.\nremote: Please see Token authentication requirements for Git operations | The GitHub Blog for more information.\nfatal: Authentication failed for\nroot@5eea4a03ae82:/# git clone/n"
    },
    {
        "title": "Job logs load very slowly and cause browser to freeze with a very large group output",
        "url": "https://github.com//orgs/community/discussions/8848",
        "upvotes": "551",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 1,
        "comments": 1,
        "body": "My team recently implemented grouping Workflow commands in one of our Workflow actions (code test runner action) which always generates a large amount of logging output.  The action has a few distinct sections, and splitting them into collapsible groups of output improves job navigation and output readability./nThanks for the feedback and the detailed reproduction steps.  This is reasonably fast for me on macOS Safari, so this may be a bit of a browser oddity that we may need to consider.  I'll pass this along to the team.  Thanks again./n"
    },
    {
        "title": "Github Workflow Required check never resolving - \"Expected - Waiting for status to be reported\"",
        "url": "https://github.com//orgs/community/discussions/77942",
        "upvotes": "485",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 5,
        "replies": 4,
        "comments": 7,
        "body": "Bug/nMy organization is also encountering this issue. We made no recent relevant changes, and it seems to manifest across required checks without an obvious pattern. At a guess, there must be some issue with the check status webhooks not being received on GitHub's side./nWe have at least one case reoccurring this evening. I'm unsure if this is resolved./nStill occuring multiple times over here, so not resolved/nWe're having more engineers reach out to us about seeing this issue appear on their PRs./nAlso seeing this a lot more recently. It seems to occur when pushing to the same branch multiple times in quick succession. I suspect setting cancel-in-progress: false may be a sufficient work around if you can afford to do so./nHi folks, thanks for reporting this. Are you still seeing this issue? And could you clarify if it is happening with required status checks or with ruleset workflows, or both? Are you seeing it on other checks that are not required?/nHi @lrotschy we are also seeing the issue. I reported it already 3 weeks ago:\nhttps://support.github.com/ticket/enterprise/36/2492908\nBut still no solution from Github./n"
    },
    {
        "title": "Yaml anchors",
        "url": "https://github.com//orgs/community/discussions/25545",
        "upvotes": "477",
        "tags": [],
        "rections": 3,
        "replies": 1,
        "comments": 1,
        "body": "What\u2019s the current story with yaml anchors in github actions? Are they supported?/nCurrently Github doesn\u2019t support YAML anchors, but it is being tracked, it\u2019s recommended to vote on this similar ticket, thanks./n"
    },
    {
        "title": "Create GitHub Action NOT only on default branch",
        "url": "https://github.com//orgs/community/discussions/16469",
        "upvotes": "415",
        "tags": [
            "Enhancement",
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Heyy, this feature is really missing from GitHub Actions to create actions (.yml-s) NOT on the default branch.\nIf one would test a workflow, it's really annoying now to edit&commit&push always the workflow changes to the default, the whole process makes the default branch really messy, which everyone wants to avoid.\nI hope you will deliver this feature as soon as possible, it would be really really useful.\nThanks :)/n"
    },
    {
        "title": "Find what files changed in a pushed commit?",
        "url": "https://github.com//orgs/community/discussions/25170",
        "upvotes": "362",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 6,
        "body": "I want to get the file names or relative path of the changed files triggered by push. I am already filtering the action with the on.push.paths functionality in the workflow. I need to find what specific files changed as I am going to run a process on them and would like to only run it on the changed files./nPlease use below command to get the changed files in the push commit, please refer to this link for more details./nThanks that worked great. Now I just need to figure out how to pipe that into the next step.\u00a0/n\"Thanks that worked great. Now I just need to figure out how to pipe that into the next step. \"/nWhat if I pushed more than one commits at once? What would ${{ github.sha }} contain?/nHi\u00a0@andyli\u00a0,/nMonitor github file changes on commits, PRs, etc (on any repo) and get a notification using webhooks, look for patterns, review diffs, take actions, etc.\u00a0/n"
    },
    {
        "title": "[BUG] NuGet: Support build metadata properly",
        "url": "https://github.com//orgs/community/discussions/26074",
        "upvotes": "338",
        "tags": [
            "Packages",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 18,
        "body": "The repo for the following package is https://github.com/verybadcat/CSharpMath./nHi @happypig375,/nMultiple versions only differentiable by build metadata are considered the same version. This is how SemVer works. I am using metadata to store build dates - the package commit is encoded in the prerelease section./n@happypig375 am I understanding this correctly./nit should also support returning the package when the metadata itsn\u2019t metadata/nThe metadata IS metadata, no matter the content. Just support it properly, thanks./nI\u2019m also running into this issue. You can\u2019t even manually specify the build metadata as a workaround either since NuGet ignores it entirely./nHi @PathogenDavid,/nI\u2019ve sent you a PR. \ud83d\ude42\n/nThanks for putting this together!/nGot it merged and looks like it\u2019s working! I also tested it on my real GitHub Actions consumer and it\u2019s working as well ./nThe docs have now been updated to not insist on all lowercase! \ud83d\ude42/n@jcansdale The original bug mentioned in the top post has yet to be fixed?/n@happypig375,/nThanks for getting the docs issues sorted out!/n@PathogenDavid,/nAh, that would certainly do it! Filed an issue here:/nI\u2019ve created a PR with a fix for this. \ud83e\udd1e/nI replied on the PR, but for the sake of discussion consistency: I can confirm that fixed my issue. Thanks for getting the workaround fixed!/n"
    },
    {
        "title": "Organization-wide Github Actions",
        "url": "https://github.com//orgs/community/discussions/4123",
        "upvotes": "289",
        "tags": [
            "Enhancement",
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Hello/n"
    },
    {
        "title": "REST API allows us to set deployment environment \"selected branches\", but not apply deployment rules",
        "url": "https://github.com//orgs/community/discussions/14190",
        "upvotes": "282",
        "tags": [
            "Actions",
            "APIandWebhooks",
            "ProductFeedback"
        ],
        "rections": 3,
        "replies": 0,
        "comments": 4,
        "body": "REST API allows us to set environment \"selected branches\", but not apply the all important deployment rules/nThanks for the feedback @krisrecur - I'll put this on the backlog for future improvements./nAny news on triage of this in the backlog @ethomson? Or if you can mention someone else that's involved in this backlog./nFrom https://docs.github.com/en/rest/deployments/environments#create-or-update-an-environment:/nIs this now supported? :) - see https://docs.github.com/en/rest/deployments/branch-policies#create-a-deployment-branch-policy/n"
    },
    {
        "title": "Get the sha of the target branch on worklow run",
        "url": "https://github.com//orgs/community/discussions/25367",
        "upvotes": "261",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 17,
        "body": "This is part of the script we used on GitLab to get the list of migration files we want to run:/nMy colleague wrote a response in this thread, could you give their suggestion a try?/nI tried this Check pushed file changes with git diff-tree in GitHub Actions from the same thread because I need the list of changed files between multiple commits:/nThat log looks like you try to analyze the repository without first running actions/checkout, so the repository is not available. And since you want to look at the history, you might want to use its fetch-depth parameter, too./nThanks, I definitely miss checkout here. My current workflow looks like this:/n@airtower-luna @github-support I made some progress.\nDowngrading to checkout@v1 worked:/nHi @akoskm,/nEdit/nThat makes sense, when given one commit ID diff-tree shows the objects changed in that commit, you\u2019ll have to use the version with two <tree-ish> parameters, see documentation./nBecause I want to run the migrations only on branch develop, I realized I can get the hash of that branch with:/nDisregard my previous answer, this doesn\u2019t work./nWould it be possible to somehow use:/nHi @akoskm,/nYou\u2019re right, I just made the following test:/nHi @akoskm,/nThanks @weide-zhou,/nHi @akoskm,/nThanks @weide-zhou  for catching that typo. \ud83d\ude05/n"
    },
    {
        "title": "Allow filter for Branches/Tags in Manual Workflow selection",
        "url": "https://github.com//orgs/community/discussions/32730",
        "upvotes": "258",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 2,
        "body": "Hey there,/n\ud83d\udc4d  this is a requirement of mine too./n\ud83d\udc4d\ud83c\udffb This is also my desire.\nAnother request would be to add the input parameter values to the workflow name in the actions list when it is run, but that's another issue./n"
    },
    {
        "title": "Org-wide Required workflows - feature requests",
        "url": "https://github.com//orgs/community/discussions/45484",
        "upvotes": "236",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 6,
        "replies": 0,
        "comments": 3,
        "body": "Product Feedback/nRegarding your first point, see discussion here: https://github.com/orgs/community/discussions/43890/nAnother item that would be useful for sure is to not limit the triggers just to pull request.\nWe have tried to use on push trigger on the default branch in the required workflow triggers, but for some reason these events do not trigger the workflow./nWould also be great if there would be the possibility to bypass them like usual branch-protection rules./n"
    },
    {
        "title": "An action stuck in progress in UI. I see it finished succesfully in logs.",
        "url": "https://github.com//orgs/community/discussions/15133",
        "upvotes": "233",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 2,
        "replies": 5,
        "comments": 2,
        "body": "I expected to see a success report. My action did it job, from the log:/nThis happened to me once as well, all the individual steps are finished and marked as so in the UI, the job itself is still stuck running for 45 minutes now (the steps totalled to ~3 min). Canceling the workflow does not do anything. Hopefully the CI minutes won't count towards the quota \ud83e\udd1e\ud83c\udffc/nThis has been quite annoying. It happens both with Self-hosted runners and public runners. I've experienced over 5 m tasks on hold in the UI./n"
    },
    {
        "title": "How to avoid self-approval in environment",
        "url": "https://github.com//orgs/community/discussions/12241",
        "upvotes": "228",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 4,
        "replies": 3,
        "comments": 7,
        "body": "We want to have a GitHub actions workflow to deploy our application to production, but we want to add an approval step in the workflow./nHi @hidetatz - thanks for the feedback.  There's not at the moment, you'd need to require two approvals to accomplish this.  The reason that this functionality isn't available at the moment is because many workflow triggers do not have the notion of a person who start it.  For example, workflows triggered on a schedule aren't started by a particular user.  This is good feedback as we continue planning and iterating on environments; thank you!/nIs there any timeline for this feature, to check for self-approval and do not allow it? Or is not even on your new features list?/nMichiel van Oudheusden has written an article with a workaround to this problem: Using GitHub Environments approvals without the ability to self approve/nRequiring multiple approvals would be a nice feature. So would prohibiting self-approvals. Either one would make the approvals more useful to us./n\"There's an app for that\" \u2192 https://github.com/Raul6469/self-approve/nWe would love to have the \"avoid self-approval\" feature directly available in GitHub. It would ease compliance on our side/n\"Prevent self-review\" menu has been released.\n/n"
    },
    {
        "title": "Single workflow vs multiple workflows",
        "url": "https://github.com//orgs/community/discussions/25482",
        "upvotes": "216",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 4,
        "body": "Is there any advantage or convention to using multiple workflows vs a single workflow where there are many jobs?/n@markgoho,/nThanks @brightran - as I suspected, this question doesn\u2019t have one right answer. It seems like there\u2019s a great opportunity to provide more guidance to developers through the use of blog posts and documentation./nI have been migrating our CI to GH workflow in past month or so. My impression is that you will quickly realize when jobs have to run in the same workflow. When you try to split jobs in different workflows, you will either hit a wall where you just can\u2019t achieve what you want due to some limitation on GH or you will start to copy/paste substantial amount of yaml between workflows./nBrilliant response @benjamin-bergia/n"
    },
    {
        "title": "Delete branch cache on branch deletion",
        "url": "https://github.com//orgs/community/discussions/38807",
        "upvotes": "212",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "Product Feedback/nHi there @rdlf0 and welcome to our community! Thank you for the feedback!/n"
    },
    {
        "title": "[Feature Request]: Add A Dashbord To Have Seamless Management of GitHub-Hosted & Self-Hosted Runners",
        "url": "https://github.com//orgs/community/discussions/60611",
        "upvotes": "210",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Product Feedback/n"
    },
    {
        "title": "Github Actions is buffering output and not displaying step progress in real time",
        "url": "https://github.com//orgs/community/discussions/52284",
        "upvotes": "202",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 2,
        "body": "Bug/nI am surprised this issue remains. It's very frustrating when trying to review long running jobs. The only workaround I am aware of is to open a browser window for the run at the start, but it's awkward./nI still have this issue in 2024, with the github hosted runners./n"
    },
    {
        "title": "iOS UI tests broken in actions using Xcode 15 / iOS17",
        "url": "https://github.com//orgs/community/discussions/68807",
        "upvotes": "178",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 1,
        "replies": 1,
        "comments": 4,
        "body": "Bug/nSame issue here - was working fine with Xcode 14.3.1. I believe this is related to a known issue in Xcode 15 (here), but I may be wrong./nThe same issue occurs in CircleCI, and apparently Azure too./nHi, did anyone get to the bottom of this issue? Seeing the same in our pipelines/nFor our workflows we use Monterrey (macOS-12) and Xcode 14.2, this is until now the ideal scenario where our entire UI Test suite takes around an hour to complete./n"
    },
    {
        "title": "Strategy matrix of arrays/objects",
        "url": "https://github.com//orgs/community/discussions/24981",
        "upvotes": "173",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 8,
        "replies": 0,
        "comments": 1,
        "body": "Is there a way to create this kind of matrix, essentially each matrix value to be an array:/nUPDATE:/n"
    },
    {
        "title": "Postgres error - could not connect to server: No such file or directory",
        "url": "https://github.com//orgs/community/discussions/25137",
        "upvotes": "155",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 3,
        "replies": 0,
        "comments": 4,
        "body": "Hello - hoping someone can point me in the right direction.\u00a0 Trying to get an action working for Rails with Postgres support.\u00a0 Got the authorization bit sorted out (finally!) but now am at this error:/nHi\u00a0@thornomad\u00a0,/nHello\u00a0@weide-zhou\u00a0- thanks for taking time to help me.\u00a0 I have another repo I had used for a different test (basic rails app that uses postgres with no real configuration).\u00a0 I added the github action to that app in its own branch to demonstrate the failure I am having.\u00a0 You can see the action setting at:/nHi\u00a0@thornomad\u00a0,/nHi - thanks for working with me on this.\u00a0 It looks like the issue in the end was not defining host: localhost in the database.yml file./n"
    },
    {
        "title": "workflow_dispatch: and run-name: ${{ github.event.head_commit.message }}",
        "url": "https://github.com//orgs/community/discussions/70621",
        "upvotes": "154",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Question/n"
    },
    {
        "title": "Not all environment protection rules are available",
        "url": "https://github.com//orgs/community/discussions/32229",
        "upvotes": "147",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 53,
        "replies": 4,
        "comments": 1,
        "body": "Hi, I'm trying to setup deployment based on environment as it was explained in https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment . However when I was trying to create environment protection rules, I don't find Required reviewers and wait timer options available for me. I only see branch protection rules and secrets. Do I miss something or should I enable some settings to make it available?/nIt is very unclear but this simple feature is restricted only to Enterprise plan/n"
    },
    {
        "title": "github.sha isn't the value expected",
        "url": "https://github.com//orgs/community/discussions/25191",
        "upvotes": "145",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 58,
        "replies": 2,
        "comments": 3,
        "body": "I\u2019m trying to retrieve the SHA from the commit that triggers the action. So if I make a commit and then do a push, within that push action handler I want to get that commit SHA. My goal is to build a URL based around the SHA and then comment on the PR with the URL (using https://github.com/unsplash/comment-on-pr)./n@anderspitman When a workflow is triggered by pull request event, the github.ref will be refs/pull/<id>/merge. And the github.sha will be the pre merge commit id. If you have a pull request from dev to master, github.sha is not the commit which you pushed to dev.\u00a0\u00a0/nSorry for the late response. This does indeed do the trick. Thanks!/ni recently encountered the same issue, but github.event.pull_request.head.sha was not working for me./n"
    },
    {
        "title": "How can I provide a link to a workflow which supports workflow_dispatch with a branch pre-selected?",
        "url": "https://github.com//orgs/community/discussions/58253",
        "upvotes": "1288",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 1,
        "replies": 4,
        "comments": 1,
        "body": "Question/nTo create a status badge that allows for initiating the deployment directly by clicking the badge, you would need to customize the badge URL and link it to a specific action. Unfortunately, GitHub badges themselves don't have built-in functionality to trigger deployments or directly run workflows./n"
    },
    {
        "title": "Make something both workflow_call and workflow_dispatch",
        "url": "https://github.com//orgs/community/discussions/39357",
        "upvotes": "1078",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 12,
        "replies": 2,
        "comments": 6,
        "body": "Question/nDo I simply duplicate all the input parameters?/nWill be good to have a shared_inputs at-least between workflow_call and workflow_dispatch,  for anyone who's working on resuable_workflow it'll be much easier to test independently without any duplication in code./ni have tested and if inputs are same in both workflow_call and workflow_dispatch it works.\nanother thing to notice if we are using any input type 'choose' in workflow_dispatch, that same input cannot be used in workflow_call.\nAlternatively, i have used repository_dispatch in few workflows./nIMO, workflow_dispatch and workflow_call should be further unified. Something like use-call-inputs: true as already mentioned should be provided to avoid code duplication./nIMO, workflow_dispatch and workflow_call should be further unified. Something like use-call-inputs: true as already mentioned should be provided to avoid code duplication./nHello, I found this in googling. Yes the answer is you have to duplicate the inputs./n"
    },
    {
        "title": "Can you add binaries to releases with GitHub Actions?",
        "url": "https://github.com//orgs/community/discussions/27009",
        "upvotes": "551",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 8,
        "body": "I currently search for a way to automatically add generated binaries (in my case Jar files) to a release, which was already created, meaning it doesn\u2019t create a release and adds files, but instead listens for when I create a release and attaches the files to it./nSomething like this? https://github.com/actions/upload-release-asset/nYes, but from what I understand would this require the release to be created within the same workflow, while in my case I want to add the files/assets to the release I myself create./nCheck out https://github.com/softprops/action-gh-release/nI think you don\u2019t get my point./n@andre601 What did you come up with?\u00a0 I was looking to do something similar; define a workflow that gets executed when a release is created, which would build/upload the dist binary to it./nI started to use AButler/upload-release-assets as it allows me to define multiple files to upload./nTo close the loop on this, this is what I ended up with./nThank you very much, @blacksmoke16, this one must be accepted as a proper solution/n"
    },
    {
        "title": "Make ccache-for-gh-actions an official github provided action",
        "url": "https://github.com//orgs/community/discussions/102216",
        "upvotes": "485",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 1,
        "replies": 0,
        "comments": 0,
        "body": "Product Feedback/n"
    },
    {
        "title": "Skip approval for specific jobs",
        "url": "https://github.com//orgs/community/discussions/58020",
        "upvotes": "477",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 1,
        "comments": 2,
        "body": "Question/nI am looking for an answer to similar situation.Can someone help ?/n"
    },
    {
        "title": "[Deployments] Access to intermediate statuses of a deployment",
        "url": "https://github.com//orgs/community/discussions/119983",
        "upvotes": "415",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Product Feedback/n"
    },
    {
        "title": "Add branches option for workflow_dispatch",
        "url": "https://github.com//orgs/community/discussions/75933",
        "upvotes": "362",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "Product Feedback/nI have a similar request that I think would fit nicely with this one./n"
    },
    {
        "title": "! [remote rejected]  developer -> developer (protected branch hook declined) when maven release command is performed",
        "url": "https://github.com//orgs/community/discussions/67626",
        "upvotes": "338",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Question/n"
    },
    {
        "title": "How do I get GH Username based on Actions events",
        "url": "https://github.com//orgs/community/discussions/25196",
        "upvotes": "289",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 5,
        "replies": 1,
        "comments": 6,
        "body": "The below is the actions script where I need the username of github based on schedule event.\u00a0/nHey\u00a0@byteshiva, I am a little confused. Is the existing setup you are using not working? If not, who\u2019s username do you want? If the action is scheduled, then it\u2019s not being triggered by a different user, so why not just hardcode it?\u00a0/nHi\u00a0@byteshiva\u00a0,/nHey\u00a0@byteshiva, I am a little confused. Is the existing setup you are using not working?/nHi\u00a0@byteshiva\u00a0,/nThanks @weide-zhou\u00a0, - I\u2019ve added the ${{github.actor}} to get the username and have placed it in main action script and waiting for the job to be run. I\u2019ve tested it in standalone scripts. its working./nHi\u00a0@byteshiva\u00a0,/n"
    },
    {
        "title": "Limited number of high-performance GitHub-hosted runners?",
        "url": "https://github.com//orgs/community/discussions/37570",
        "upvotes": "282",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 5,
        "replies": 2,
        "comments": 4,
        "body": "I'm in the high-performance GitHub-hosted runners public beta and...I can maybe run 5 simultaneous workflows using larger runners. During the business day, my team could have 30+ workflows going at once. This won't do at all if these kinds of waits are what I have to look forward to./nExperiencing something that I think is related to this./nSame issue here - time spent on waiting for the runners completely negates the speed increase of the actual activities. Total times are actually longer than before./nMy experience is if I use this configuration/n"
    },
    {
        "title": "Bug: Idle scheduled workflow disabling also disables non-scheduled triggers",
        "url": "https://github.com//orgs/community/discussions/32197",
        "upvotes": "261",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 3,
        "body": "Describe the bug/nYeah, because of this I've been considering putting everything in a reusable workflow and including it into two separate workflow with different sets of triggers.../nSeen the same thing.  Workflow was disabled due to no commits in 60days. I also didn't know about this \"feature\".  It would be nice to have some indication on the main Actions page to indicate a workflow is disabled rather than having to click into the workflow to find out.  Pushing a new commit did not trigger the workflow as I would expect.  By all means disable the scheduling, but not the whole workflow./nThis issue in live:\nmupen64plus/mupen64plus-rsp-z64#15\nmupen64plus/mupen64plus-rsp-cxd4#61\nmupen64plus/mupen64plus-video-z64#22\nmupen64plus/mupen64plus-video-glide64#24\nmupen64plus/mupen64plus-video-arachnoid#15\nmupen64plus/mupen64plus-video-rice#108/n"
    },
    {
        "title": "always() doesn't work in composite action when workflow is canceled",
        "url": "https://github.com//orgs/community/discussions/37274",
        "upvotes": "258",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "When you'd like to run a job step always, even if the workflow was canceled, you can use the always() function:/n"
    },
    {
        "title": "Who can manually trigger a workflow using workflow_dispatch",
        "url": "https://github.com//orgs/community/discussions/26053",
        "upvotes": "236",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 5,
        "body": "I\u2019m using a workflow that is designed to be manually triggered only on workflow_dispatch.\nIt also uses an action (mhausenblas/mkdocs-deploy-gh-pages) that I use a GITHUB_TOKEN with in order to publish to my gh-pages branch./nHey @itsayellow! Welcome to the community and thanks for your post./nThanks for the reply!  I did indeed see those pages before./n@itsayellow,/nGreat, ok I think that answers my main concern.  Thanks!/n@itsayellow,/n"
    },
    {
        "title": "macos actions not running",
        "url": "https://github.com//orgs/community/discussions/55240",
        "upvotes": "233",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 2,
        "replies": 0,
        "comments": 0,
        "body": "Bug/n"
    },
    {
        "title": "GitHub RubyGems server is broken and we cannot install gems anymore",
        "url": "https://github.com//orgs/community/discussions/47572",
        "upvotes": "228",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "Bug/nThis appears to be fixed now. Can we get an RCA?/n"
    },
    {
        "title": "i get an error in my console",
        "url": "https://github.com//orgs/community/discussions/49485",
        "upvotes": "216",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 2,
        "comments": 1,
        "body": "Question/n"
    },
    {
        "title": "Error Deploy gh pages",
        "url": "https://github.com//orgs/community/discussions/59600",
        "upvotes": "212",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 2,
        "replies": 0,
        "comments": 10,
        "body": "Question/nI'm seeing the same issue.../nSame here/nSame here. This should be resolved urgently./nI think it's this: https://www.githubstatus.com/incidents/ws2l6203cs7g/nsame here. I will wait for the resolution of https://www.githubstatus.com/incidents/ws2l6203cs7g/nSame here/nSame here/nI am also experiencing the same here. Still \"Waiting\" status for more than 37 minutes now./nsame here, my deploys stopped working today, no problems before now.../nThe issue is fixed for me when triggering a new deployment./n"
    },
    {
        "title": "Adjustable Artifact Expiration",
        "url": "https://github.com//orgs/community/discussions/25458",
        "upvotes": "210",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 4,
        "body": "This doc says artifacts automatically expire in 90 days./nHI\u00a0@chingc,/n@andreagriffiths11 Hi, I was just wondering if there\u2019s any word as to whether there are plans to implement this./nI\u2019d love to see this implemented. Even if we can\u2019t set the expiration time to an arbitrary value, providing options for \u201ctiers\u201d like 90d (current) / 30d / 7d would be nice and way better than the status quo./nYou can now change artifact and log retention duration both from Actions Settings tab or via YAML. You can learn more about this feature here. Feedback is welcome!/n"
    },
    {
        "title": "Does actions/checkout count against Git LFS bandwidth usage?",
        "url": "https://github.com//orgs/community/discussions/26775",
        "upvotes": "202",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 6,
        "replies": 0,
        "comments": 9,
        "body": "We are considering migrating our CI infrastructure from a locally hosted Git LFS/Jenkins Pipelines instance to GitHub hosted LFS and GitHub Actions./nThank you for your question. Based on my test, after I checked out a 142MB LFS file in my workflow run, the Git LFS Data bandwidth is still showing 0. I have contacted github engineering team , when they give me response, I will update here as soon as possible.\u00a0/n@jaydenmilne\u00a0 I have confirmed that actions/checkout is counted into Git LFS bandwidth usage.\u00a0/nThank you for looking into this for me and the thorough response! It would be nice if this were reflected in the official documentation so people don\u2019t have to hunt through the community forum to find it. Is there someone else I shoud contact to give feedback on the documentation?/nI have already asked to declare that on official document.\u00a0/nIt\u2019s inconceivable to me that LFS pulls during GitHub Actions would count towards LFS bandwidth\u2026 first\u2026 you would assume its within GitHub\u2019s own networks\u2026 so why am I paying for them to tranfser files between their own devices?/nI think LFS bandwidth used within actions should be at least counted with smaller ratio since it should be using internal network bandwidth./nI was also pretty surprised that checking out code in Github Actions counts towards LFS bandwidth usage. I managed to use up my free LFS bandwidth quota for a month by building one LFS-heavy site a couple of times with Actions. This really turns me off using Github for my projects that require LFS, and maybe migrate to Gitlab or something else./nI just published an alternative gh-actions checkout action that caches all the LFS data, GitHub - nschloe/action-cached-lfs-checkout: GitHub checkout action with LFS files pulled from cache. Instead of/nAlas this does not work with submodules./n"
    },
    {
        "title": "Failed download of common actions on \"Set up\" job",
        "url": "https://github.com//orgs/community/discussions/25774",
        "upvotes": "178",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 8,
        "body": "I don\u2019t understand why these errors occur.\n12 minutes for set up \ud83d\ude25\n/nfacing the same issue since last 3 hours\u2026 eventually deployment times out/nHi, I am facing the same problem since yesterday. The jobs do eventually execute, but action build time is increased by one thousand percent. Includes setup job delays, failure to download packages like actions/checkout@v2, and hangups on git clones/git checkouts./nSame issue for us. Github Action Runs randomly getting cancelled./nSame problem. Runners do not pick up jobs or fail without any logs. GitHub status is still green though/nSame problem and did not occur again until action was retried many times./nLooks to be the same as Read timeouts and errors from GitHub URLs/nmight still be related to that problem, it\u2019s still on-going,/nlooks like its back up/n"
    },
    {
        "title": "Github Container registry (ghcr.io) packages not appearing in webinterface",
        "url": "https://github.com//orgs/community/discussions/25775",
        "upvotes": "173",
        "tags": [
            "Packages",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 7,
        "body": "Hello Github community,/n\ud83d\udc4b Thanks for trying it out!/nthanks for the direct URL @clarkbw , unfortunately the package (container image) doesn\u2019t appear there either (also changing visibility = all is the same):/nquick addition: I can indeed access this URL directly:/nExcellent! The Edit Package drop down will have options for changing the package visibility and deleting versions. The switch to public should allow for authentication free access./nsame here \ud83d\ude26\nany updates on that?\nThat makes migration from docker.pkg.github.com to ghcr.io painful for us.\ngive us at least some API call example/nHaving the same issue here. I can access the package by directly accessing the container URL but it doesn\u2019t show up in my private packages neither in its related repository./nWow, thanks for posting this. I didn\u2019t realize this issue was still a thing. My team will likely be switching to GitHub for container images next year. This is good to know./n"
    },
    {
        "title": "Securing use of third-party GitHub actions",
        "url": "https://github.com//orgs/community/discussions/26310",
        "upvotes": "155",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 6,
        "body": "In light of GitHub's commitment to npm ecosystem security | The GitHub Blog \u2013 I am wondering how GitHub plans to ensure the GitHub actions ecosystem also remains secure in the event of third-party action repository takeovers. As suggested in Security hardening for GitHub Actions - GitHub Docs \u2013 the safest way at the moment is to pin any third-party actions to a commit SHA, but unfortunately most documentation on GitHub and in third-party actions suggest to pin to a major version (e.g. @v1), which means it will automatically pull in subsequent tags for that major version./nThis could be utterly beneficial for Enterprise organizations.\nAt the moment all the time have to do these assessments by ourselves for each new version and it is still tricky process./nAt the very least, providing some kind of manifest/lock file that could be defined in the .github folder, which would apply to all actions (even those referenced within actions), would be very useful. Currently we have to maintain commit SHAs across hundreds of workflow files in our monorepo and this would greatly improve that experience./nAs the author of a couple of Actions I would suggest pinning to a full tagged version number like v1.1.0, pinning to a commit SHA is also fine if it is a tagged version. Nothing else is guaranteed to work and for my actions probably won\u2019t due to use of Docker and GHPR./nI feel your pain! I don\u2019t know if you\u2019ve done this already, but you could create your own manifest file and read it into each workflow; I haven\u2019t tried this but I guess it would work./nYes, that would work. We have done something similar for other things (for example using .nvmrc to read the Node version). I guess it is the best workaround for now, even though it adds a bit of complexity to our workflows./nMoved this discussion here: Securing use of third-party GitHub actions \u00b7 Discussion #18103 \u00b7 github-community/community \u00b7 GitHub/n"
    },
    {
        "title": "No assurance on scheduled jobs?",
        "url": "https://github.com//orgs/community/discussions/27130",
        "upvotes": "154",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 4,
        "body": "This is a re-post, as I just realized I started the thread in the wrong forum. (And, don\u2019t see any functionality to move it.)/n@kingthorin ,/nThanks @brightran/n@kingthorin ,/nI wrote a quick blog post with some additional information about this issue: https://upptime.js.org/blog/2021/01/22/github-actions-schedule-not-working./n"
    },
    {
        "title": "Can pull requests change actions?",
        "url": "https://github.com//orgs/community/discussions/27084",
        "upvotes": "147",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 3,
        "body": "One of the most common use cases for GitHub Actions is to run a test suite against pull requests./nPull requests can have their branch either in the source repo (yours) or a forked repo./nThank you for a very thorough response!/nJust to make it clear if it wasn\u2019t: Using pull_request_target and explicitly checking out the head branch is not safe, as everyone will be able to change the workflow to leak secrets:/n"
    },
    {
        "title": "Pip index support and python modules for Github Packages",
        "url": "https://github.com//orgs/community/discussions/12068",
        "upvotes": "145",
        "tags": [
            "Actions",
            "Packages",
            "ProductFeedback"
        ],
        "rections": 3,
        "replies": 0,
        "comments": 1,
        "body": "Are there any plans to support Pip and Python for Github Packages? While it's easy to use Github Pages to create an index and you can host packages in github repositories it would be nice to have handling of all organization packages hosted at the same place./nIt is an old request that is not being implemented./n"
    },
    {
        "title": "How do I get the logs for a service?",
        "url": "https://github.com//orgs/community/discussions/26282",
        "upvotes": "1288",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 7,
        "body": "Hi,/nAt the top right corner of the Actions tab, there is a link to view the raw logs.\u00a0/nhttps://help.github.com/en/articles/contexts-and-expression-syntax-for-github-actions#job-context/nThank you!/nThis would not work if the \u201cInitialize containers\u201d step has failed. How do we troubleshoot such a failure?/nI\u2019d like to know this too, I am having a similar issue with a MariaDB service (which incidentally was working fine a couple of days ago)./nI\u2019d like to have way to see logs for all these services/nHi/n"
    },
    {
        "title": "Release / Prerelease action triggers",
        "url": "https://github.com//orgs/community/discussions/26281",
        "upvotes": "1078",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 2,
        "replies": 1,
        "comments": 6,
        "body": "I\u2019m having some trouble writing triggers for when I make a new release of my project. I have two workflows that are triggered on different releases (Releases vs. Pre-Releases). I only want the Pre-Release Workflow to run on Releases that are marked as a pre-release and only run the Release Workflow on releases not marked as a pre-release./nThere is not a released type for release event, if use published instead, \u00a0when create a pre-released version, we also need to publish it. So published type workflow will be trigged both Pre-Release and actual releases./nOr is there a way to have one workflow run and use that if tag to run one or the other? The only real change between the two workflows is where I\u2019m CDing into a directory (beta vs. repo) So if there were a simplier way to combine both that would work as well/nIs not a really good solution but thank you! I hope github will allow us to have a prereleased and released types in the near future :slight_smile:/n@ckgrafico Good news! GitHub engineering team is working on adding released type to Release event. I would be on production in the near future. Although I don\u2019t have a timeline for it , you could keep an eye on\u00a0https://github.blog/changelog/ for new released features.\u00a0/nThanks, this will do for us./nFollow up on this: If I have a workflow (c.f. Add pre-release support to publish workflow \u00b7 Issue #1907 \u00b7 scikit-hep/pyhf \u00b7 GitHub) that I want to run on/n"
    },
    {
        "title": "I would like to be able to have a quick search box to find an action by name",
        "url": "https://github.com//orgs/community/discussions/76406",
        "upvotes": "551",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 2,
        "body": "Product Feedback/nSame here - a filter search for actions would be a great enhancement/nI noticed a solution was added to the public roadmap two weeks back:\nhttps://github.com/orgs/github/projects/4247/views/1?filterQuery=is%3Aopen+-status%3A%22Q4+2022+%E2%80%93+Oct-Dec%22%2C%22Q2+2023+%E2%80%93+Apr-Jun%22++workflow&pane=issue&itemId=48129706/n"
    },
    {
        "title": "How to create a PAT with write:packages and without repo permissions?",
        "url": "https://github.com//orgs/community/discussions/24930",
        "upvotes": "485",
        "tags": [
            "Packages",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 6,
        "body": "I am using a public repository on GitHub Free to experiment with GitHub Packages./nThat\u2019s peculiar! I have an existing token with only read:packages and write:packages permissions, but if I try to create a new one I see the same behavior that you\u2019re describing./n\ud83d\udc4b Thank you for reporting this.  It looks like we have a bug on our end.  You should be able to create a PAT without the read scope for use with Container Registry./nThank you very much. The workaround works perfectly./nI cannot un-check the repo permissions when creating or editing a PAT with only write:packages selected, so the workaround doesn\u2019t seem to work anymore./nI was able to edit a PAT a few weeks ago to deselect the repo scope, but this is no longer working./nA fix for this should be deployed soon./n"
    },
    {
        "title": "Does deletion of the job rids of stored artefacts and logs?",
        "url": "https://github.com//orgs/community/discussions/50934",
        "upvotes": "477",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 1,
        "replies": 4,
        "comments": 1,
        "body": "Question/nIn general when a GitHub Actions job is deleted, the stored artifacts and logs associated with that job will also be deleted automatically. You do not need to manually delete them separately./n"
    },
    {
        "title": "Xcode 11.2.1 Support",
        "url": "https://github.com//orgs/community/discussions/25552",
        "upvotes": "415",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 10,
        "body": "Hello, I\u2019m really fan of GitHub actions which is greate./nI finished a long build, and got excited to see it attempt to deploy to TestFlight. Then I got an error saying it couldn\u2019t deploy, due to this issue. I hope Xcode 11.2.1 gets added to Actions soon. Can any Actions devs give a possible timeframe? Thanks./nAn update to the mac image with Xcode 11.2, 11.2.1, and 11.3 beta1 will start rolling out this week!\u00a0/nThanks for the update. \u00a0I\u2019m waiting on this too. \u00a0Is there a way to get the right version of xcode any other way while we wait for the updated image? \u00a0I can foressee this happening a lot!/nYou can use xcversion for download it in ci./nCould be interesting to update the doc :D\u00a0/n@yanjingzhu Just a note, Xcode 11.2 has been deprecated by Apple and can\u2019t be used for any deployments, so this version should probably be deprecated on here as well./nIt\u2019s more than a week past already and those your users, who are required to use swift 5.1.2 can not use your service as it has broken software. Any updates on this?/nI just create actions for select xcode if locally available or download from Apple Developer./nHi Yanjingzhu,/n@blane1988 I\u2019m running a build right now with Xcode 11.2.1. The documentation hasn\u2019t been updated yet, by the looks of it./n"
    },
    {
        "title": "API to manage repo secrets?",
        "url": "https://github.com//orgs/community/discussions/25023",
        "upvotes": "362",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 5,
        "body": "Is there going to be an API to manage (create/update/delete) repository secrets?/nFound a related question:\u00a0https://github.community/t5/GitHub-Actions/Github-Apps-to-add-secrets/m-p/28259/nThe Actions api shipped today\u00a0https://developer.github.com/v3/actions//n@chrispat Could you relay a question/message to your support team?/nThanks for letting me know.\u00a0 I have passed the info over to the engineering team./nThis is great news! May I ask when the go-github client library will be updated to include the functionalities?\u00a0https://godoc.org/github.com/google/go-github/github/n"
    },
    {
        "title": "##[error]Bad credentials",
        "url": "https://github.com//orgs/community/discussions/25035",
        "upvotes": "338",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 4,
        "body": "We\u2019re trying to use the\u00a0svenstaro/upload-release-action in CosmoScout VR. While it works very nicely for our workflows running on Linux, it somehow fails with this error on a Windows host./nThis is still an issue\u2026/nWhile I did not get any response yet, I found an official documentation on this issue!/nThe only way to make it work seems to be using a separate job for release creation and pass the files between them via artifacts: https://help.github.com/en/actions/automating-your-workflow-with-github-actions/persisting-workflow-data-using-artifacts#passing-data-between-jobs-in-a-workflow./nUsing a separate job and passing artifacts using upload/download doesn\u2019t work, unforutnately.\u00a0 The expiry timer seems to kick off when the workflow containing the jobs start,\u00a0 not when the job starts.\u00a0 I tried the multi-job approach and got the same bad credentials result, even though the job that used those was\u00a0 configured to start only after the long-running build job ended (via needs).\u00a0 Now that I\u2019m reading the docs carefully, that\u2019s what it says:/n"
    },
    {
        "title": "Append PATH on Windows",
        "url": "https://github.com//orgs/community/discussions/25119",
        "upvotes": "289",
        "tags": [],
        "rections": 0,
        "replies": 2,
        "comments": 9,
        "body": "I\u2019m trying to install https://scoop.sh/, but I fail to add it to the PATH environment variable for subsequent steps. I tried:/nEach step is run its own process space so environment changes do not automatically propgate.\u00a0 If you want to update the path you can use the add-path command as documented\u00a0https://help.github.com/en/articles/development-tools-for-github-actions#add-a-system-path-add-path.\u00a0\u00a0/nThanks a lot, this worked without problems!/nThe cited documentation suggests the modification is seen by all subsequent steps in the job.\u00a0 So it would seem at odds with your assertion that each step is its own process./nIt seems like the correct way on Windows is (contrary to the doc):/nUltimately had to monkey at the typescript level\u00a0https://github.com/dickmao/setup-paths\u00a0to change PATH./nHi, Is there any documentation about this windows add-path style? From the offical docs, I couldn\u2019t find it./n@d4nte wrote:/n>\u00a0Each step is run its own process space so environment changes do not automatically propgate.\u00a0 If you want to update the path you can use the add-path command as documented\u00a0https://help.github.com/en/articles/development-tools-for-github-actions#add-a-system-path-add-path.\u00a0\u00a0/nA little bit of googling and here it is:\u00a0https://help.github.com/en/actions/reference/workflow-commands-for-github-actions#adding-a-system-path/n"
    },
    {
        "title": "Allow Reusable Workflows to call Other Reusable Workflows",
        "url": "https://github.com//orgs/community/discussions/18565",
        "upvotes": "282",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 6,
        "replies": 0,
        "comments": 0,
        "body": "Can you please allow reusable workflows to call other reusable workflows./n"
    },
    {
        "title": "Bug in IF conditions on inputs for reusable workflows",
        "url": "https://github.com//orgs/community/discussions/25293",
        "upvotes": "261",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 10,
        "body": "When a reusable workflow (called workflow), contains if conditions (based on the input of the job) at job level, there is a observation that the if condition seems to execute and use value globally (causing jobs which are being skipped because of a check)./nSame issue seen on our pipelines here:/nFaced same issue, our CI/CD is pretty much blocked now/nI\u2019ve even removed the IF, and the second job continues to be skipped. We are really blocked!/nSeems to happen when a sibling job gets skipped, any subsequent jobs then get skipped, even if they are not related./nThanks for the info. With this we are able to workaround temporarily. Also opened a github ticket pointing to this thread to see if we raise the criticality on this./nWatch this issue - Bug in IF conditions on inputs for reusable workflows \u00b7 Issue #1602 \u00b7 actions/runner \u00b7 GitHub/n@Surveyforcustomers invalid link/nIf i realy understend, you need change the job 3 like this:/nYou need to wrap the whole expression in ${{ ... }} or leave them off entirely:/nThis is resolved from Bug in IF conditions on inputs for reusable workflows \u00b7 Issue #1602 \u00b7 actions/runner \u00b7 GitHub ./n"
    },
    {
        "title": "Secrets for PRs who are not collaborators",
        "url": "https://github.com//orgs/community/discussions/26163",
        "upvotes": "258",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 1,
        "replies": 0,
        "comments": 13,
        "body": "I want to be able to preview on Netlify the PRs that outside contributors propose./n@kaihendry\u00a0,/nHow do I express that I build on PR but only if it is a collaborator to avoid the failure messages?/n@kaihendry\u00a0,/n@kaihendry\u00a0,/nThere is no automated way to do this right?/nAlthough this is just an idea, that automcation may be created with GitHub Actions because GITHUB_TOKEN has write permission to original repo./nI made a PoC GitHub Actions for merge preview./nAh, this looks promising. But I am not sure how to view your workflow file./nThanks./nI made another more general GitHub Actions than before. You will get preview-branch to run GitHub Actions with the secrets for forked repos./nAha! I understand\u2026\u00a0 only owner can run it allowed-associations: '[\"OWNER\"]'/nThanks!/nWhoa, this makes Github actions next level in my opinion./n"
    },
    {
        "title": "matrix include",
        "url": "https://github.com//orgs/community/discussions/25144",
        "upvotes": "236",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 4,
        "body": "From:/nSince a change allowing one to add to the matrix using \u2018include\u2019 would be a breaking change, maybe add the functionality using a name like \u2018additions\u2019?/nHow about ignoring includes and writing matrix as a list?/nThe current include/exclude behavior is symmetric. It is reasonable for me. But it is different meaning from travis-ci\u2019s include.\u00a0travis-ci\u2019s include is very usuful for me. If GithubActions add the new feature that behaves as travis-ci\u2019s include, it\u2019s nice. I propose the feature name add: or append:. I choose verb because include: and exclude: are verb./nI believe this has been solved in\u00a0actions/runner#343/n"
    },
    {
        "title": "proposal to enable Unique Icon for actions using GITHUB_TOKEN",
        "url": "https://github.com//orgs/community/discussions/25187",
        "upvotes": "233",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 3,
        "body": "Hello,/nThank you for the feedback. We will keep this idea in mind for a future update./nBeing able to configure a specific GitHub App for a workflow to \u201crun as\u201d would be fantastic./nDear\u00a0@chrispat,\u00a0/n"
    },
    {
        "title": "Build got was canceled unexpectedly",
        "url": "https://github.com//orgs/community/discussions/26100",
        "upvotes": "228",
        "tags": [
            "Actions"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 9,
        "body": "While running the build command, the job got cancalled for some unexpected reason./nThis is the configuration for the GitHub action workflow I am using but it is not working./nThanks for being here\u00a0@mittalyashu, I believe you got this going? If you have any other issues please feel free to post again.\u00a0In the meantime, we\u2019re looking forward to seeing you around!/nNo, I am still facing this same issue./nApologies for the delay, taking a look at your action I feel it might be a syntax issue, see this image and give it a go, let us know if it works./nIf you\u2019d like listen to two events, such as issues and pull_request send this is a list to on: for example: on: [issues, pull_request]. Hope that helps./nI want to ignore few of branches from pull requests, that\u2019s why I have added./nYou are using the matrix for your actions, and one thing about the matrix is that it will fail fast if one of the tests didn\u2019t pass [ref]./nI wrote a big answer but for some reason I cant find it so I\u2019ll make it short./nAh! I see./n"
    },
    {
        "title": "\"every step must define a uses or run key\" I am getting above mentioned error. suggest possible solution",
        "url": "https://github.com//orgs/community/discussions/26608",
        "upvotes": "216",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 3,
        "replies": 0,
        "comments": 6,
        "body": "/nThe second step in your list has only a name, which should probably be part of the next step (which doesn\u2019t have one)./nwill you explain more specifically. I am unable to get your point. I have a little knowledge of coding./nThe steps part of the workflow is a list. In YAML each list item is marked by a dash at the same indentation level, like so:/nLine 26/27 of your screen shot both have hyphens so the uses bit isn\u2019t considered to be \u201cin\u201d the named step./nStep names are optional. The log will display \"Run \" if you only specify uses and \u201cRun <1st line of commands>\u201d (possibly truncated) if you only provide run./nI appreciate your effort for me. I have learned my mistake. May God give you reward/n"
    },
    {
        "title": "Scheduled GitHub action failed",
        "url": "https://github.com//orgs/community/discussions/26983",
        "upvotes": "212",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 10,
        "body": "I received the following error:/nSaw same issue, and now seeing:/nSeeing the exact same here as well. I\u2019m thinking there\u2019s something wrong in the GitHub Actions infrastructure at the moment./nSame issue for me with 2 repositories (managed runner and self-hosted runner)./nSeeing the same issue here as well. I take it to mean that it GitHub is unable to create the host the actions will run on. Nothing has changed in our action configuration, so I second/third/fourth/fifth the idea that Actions are broken./nI am getting the same error as \u201cThis Check failed\u201d for any github action triggered\u00a0/nMy action runs every hour on the hour, this time I got:/nI was just able to get an action to run./nSame, it\u2019s back for the moment./nApologies - this is an internal GitHub error message. We were rolling out a new deployment that had errors for some workflows, and I\u2019m afraid that yours was one of the workflows affected./nIt seems this is happenning again for last half an hour or so but I dont see it on\u00a0https://www.githubstatus.com//n"
    },
    {
        "title": "GH Actions Array Support",
        "url": "https://github.com//orgs/community/discussions/7875",
        "upvotes": "210",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 1,
        "comments": 2,
        "body": "We recently ran into an issue where we had to create a work around in a GH workflow yaml file in order to populate an array./nThanks for the feedback - at the moment, the fromJson() approach that you've taken is indeed the one that I'd recommend.  I'm interested in doing some work in the new year to make advanced workflows like this easier to build, and I'll keep this in mind./nHello! I'm also interested in array of string support for  GitHub actions/n"
    },
    {
        "title": "Feature request: pass git push options to GitHub Actions to skip the CI",
        "url": "https://github.com//orgs/community/discussions/5808",
        "upvotes": "202",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 5,
        "replies": 0,
        "comments": 0,
        "body": "There is a feature in git, which allows sending a string while pushing: https://git-scm.com/docs/git-push#Documentation/git-push.txt--oltoptiongt\nGitLab uses it to skip the CI: https://docs.gitlab.com/ee/user/project/push_options.html\nIt would be amazing to have the ability to get git push options in GitHub Actions push event to skip the CI./n"
    },
    {
        "title": "Retry failed steps",
        "url": "https://github.com//orgs/community/discussions/12933",
        "upvotes": "178",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 2,
        "replies": 0,
        "comments": 1,
        "body": "I'd like actions to automatically retry steps:/nInteresting! I hadn't considered adding retries at this level (one of my projects does have some integration tests that hit the network and thus does have a retry loop). There are definitely a handful of things to consider here - in this example, since there's no clean-up at the step level and you'd start the retry from the state where the failed job left off - but it's an interesting idea nonetheless. I'll make sure that this is on the backlog./n"
    },
    {
        "title": "GitHub Actions being unreliable in the past few days",
        "url": "https://github.com//orgs/community/discussions/13360",
        "upvotes": "173",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 2,
        "replies": 3,
        "comments": 4,
        "body": "Just in the past 2 weeks, there were 6 incidents involving GitHub Actions./nAgain, third day in a row:\n/nIt would really be good to know if we're going to get a post-mortem on this, transparency breeds confidence./nHi everyone. Thanks for the question. We post regular service updates on our blog, including a post about our recent service disruptions and will share more in our March Availability Report in the next few weeks./nThanks @ethomson - hadn't seen that blog. I find it way easier to be sympathetic with when reading things like that - reminds me that GitHub's DB/solution architects are mere mortals just like me. If you should see the state of my event handling queue... ;)/n"
    },
    {
        "title": "[Github Actions][Feature Request] Allow re-running specific matrix item",
        "url": "https://github.com//orgs/community/discussions/5940",
        "upvotes": "155",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Hi,/n"
    },
    {
        "title": "Npm install is taking 10+ minutes to finish",
        "url": "https://github.com//orgs/community/discussions/26648",
        "upvotes": "154",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 5,
        "body": "Hey there.\nI have been using github actions for all my tests.\nnpm install step only took 1 minute last week, but these couple days it took 10+ minutes to just install. Any one experience the same issue?/nsame here, npm install or ci takes > 5 min, where it took normally 30 sec.\nAny idea on the issue/nAfter some digging around, it appears NPM uses the old and discontinued git:// protocol. See https://github.blog/2021-09-01-improving-git-protocol-security-github/./nThanks @timbeks How do you set it? It there a global way to set it? I don\u2019t want to add it at each step of my workflows/nHi @BioCarmen ,/nThe most direct approach would be stick it as a step just before your npm install step. Or as part of the NPM install step like so: git config --global url.\"git@github.com:\".insteadOf git://github.com/ && npm install. No need for adding it to every step, just the npm install./n"
    },
    {
        "title": "Using secrets for code and database credentials",
        "url": "https://github.com//orgs/community/discussions/26264",
        "upvotes": "147",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 20,
        "body": "Hi there/nThat\u2019s what GitHub secrets are, aren\u2019t they?/nYes exactly. I use them always for the Action / Deploy process to store my FTP credentials in it. But now i have a repository cotaining a php file with credentials for my database and i dont want to expose them. I hoped that there is a way to hide them with with secrets./nidea; can I create a file via cat ${{ SECRET }} > file.php in the workflow? If so, I would have the file containing the access data created by the workflow\u2026?/nI haven\u2019t tested it personally, but the documentation describes how to commit an encrypted file and decrypt it using a secret. Maybe that would help?/nHaving any sort of credentials hardcoded in a PHP file sounds like a bad idea. Why don\u2019t you you let PHP read the credentials from environment variables for instance?/nCan you be more specific? I know there is such a thing, but I don\u2019t think I\u2019ve really worked with it./nSomething along the following, with the database password stored as GitHub secret with name SCRIPT_CREDENTIALS:/nSorry, I was on the road for a few days and could not test nor answer anything./nCan you check what the working directory is with pwd?/nThanks a lot for this!. I want to do the same using python and email credentials, instead. In python I\u2019m using os.environ.get() to read the secrets, but with no success so far. Any ideas on how to do it with python?/nTo quote from your Stackoverflow post:/nThank you, it worked!. And thank you for the recommendation to move pip install to a previous step. For others interested in using secrets inside python, I can confirm that os.environ.get() does the job./n.py file/nAre you using Python 2?\nos.environ['...'].decode('utf8') might do the trick./nThere was an issue with the GitHub secrets, was setting secrets in environment instead of repo.\n@canovasjm helped me solve it.\nThank you @Simran-B @canovasjm/nI am trying to use the above approach in a flutter web app with no success,\nCurrently I have a secret key hardcoded in my app in a *.dart file\nIs it possible to access the github secrets directly in the code?\ne.g I have/nIs it possible to access the github secrets directly in the code?/nThanks for the reply\nI am not much familiar with these scripts/nThe run key defines the command to run. Based the comment in your example it should probably look similar to this:/nHi from 2023,\nhow to i use this on c#?/n"
    },
    {
        "title": "\"inherited access\" feature lacking basic controls and docs",
        "url": "https://github.com//orgs/community/discussions/31412",
        "upvotes": "145",
        "tags": [
            "Packages",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "Inherit access from source repository (recommended)/n+1/n"
    },
    {
        "title": "Priority for self-hosted runners",
        "url": "https://github.com//orgs/community/discussions/25309",
        "upvotes": "1288",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 4,
        "body": "Hi,/n@taschik,/nThanks @brightran for the reply. This would work for just two different classes of runners but is not viable anymore with more. On systems like Buildkite, you can configure a priority in combination with tags. It would be great to have this ability with self-hosted runners too. Perhaps a feature request?/nSame problem here. We are dynamically provisioning / removing workers based on their activity. The problem is that because workloads are randomized, a lot more workers are live than there could be./nLooks like the above behavior is no longer active:/n"
    },
    {
        "title": "Read private organization package from workflow action (with GITHUB_TOKEN instead of PAT)",
        "url": "https://github.com//orgs/community/discussions/53343",
        "upvotes": "1078",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 2,
        "replies": 0,
        "comments": 1,
        "body": "Question/nHi @JRebella have you resolved your issue? I have run into the same issue.\nI think #46641 and #43521 are talking about the same issue./n"
    },
    {
        "title": "Documentation for github.event objects",
        "url": "https://github.com//orgs/community/discussions/27058",
        "upvotes": "551",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 32,
        "replies": 2,
        "comments": 4,
        "body": "Is there a way to see the actual documentation / specs for the github object we can access when setting up workflows? I tried to echo github.event for instance but that just prints object\u2026/nThe best documentation I\u2019m aware of is here: Events that trigger workflows/nThanks for the response. Unfortunately I had already seen this page too and there isn\u2019t much there either in terms of verifying that the event is indeed for workflow_dispatch./nI did manage to find how to do so by first adding a step to print out the github object./nUsing echo threw some errors for me\nI used this one to avoid errors:/n"
    },
    {
        "title": "Status check for a matrix jobs",
        "url": "https://github.com//orgs/community/discussions/26822",
        "upvotes": "485",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 41,
        "replies": 6,
        "comments": 12,
        "body": "I build several subprojects using a job with the matrix strategy. The matrix is dynamic - depends on the branch used. All of those matrix jobs need to succeed for the code to be good to merge. But I fail to find a way how to check the composite status of the branches. Which direction would you recommend?/n@edzis,/nI\u2019m using a job that needs matrix job to check all matrix jobs are successful. For example:/nDo you mean that you set different matrix configurations in the workflow on different branches?/n@edzis ,/n@brightran I believe we are not on the same page.  I believe it might help for me to share more insights about the setup. Here is a short description and the action setup is shared on https://gist.github.com/edzis/17602cb75eb6346b9096b7b53498a424/nHi @edzis,\nIIUIC you want to summarize a matrix job to a single check. This way, you can tick only one checkbox in the protected branch settings of the repository and later matrix entries will only change in the corresponding workflow file./nThanks @hodbn, that fixes my issue!/n@hodbn @edzis this solution does not seem to work.\nIf one of the matrix jobs failed while another succeeded, needs.build.result value will be success./nIs there any update on this?/n@egmacke I was able to solve this using the following suggestion: Get status of parallel jobs into a single Webhook payload - #2 by weide-zhou/n@dudicoco thanks! That looks like a nice solution./nlate to the party but looks like result of matrix now works as expected when using: needs.<job_id>.result/n"
    },
    {
        "title": "Event to trigger workflow when pull request becomes mergeable",
        "url": "https://github.com//orgs/community/discussions/74392",
        "upvotes": "477",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Product Feedback/n"
    },
    {
        "title": "Reusable workflows UI - structured dependency view",
        "url": "https://github.com//orgs/community/discussions/51496",
        "upvotes": "415",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 4,
        "replies": 1,
        "comments": 6,
        "body": "Product Feedback/n+1 - this was the discussion I was about to start:/nI have the following structure:/nJust to echo the above, reusable multi-job workflows in combination with the matrix strategy is very powerful, but the UI experience is extremely lacking.../nThe same for me, very hard to understand what is going on when you use matrix and reusable workflow:\n/nThis is a very bad user experience, specially for monorepo structures which makes it almost impossible to understand what's going on./nA flat list is really bad if the job names have similar keys. The fact that skipped jobs don't generate the name and display the generic job id is too painful. Too difficult to navigate and ton a lot of complains from devs.\n/n"
    },
    {
        "title": "On: workflow_run: does not work for me",
        "url": "https://github.com//orgs/community/discussions/25288",
        "upvotes": "362",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 6,
        "replies": 2,
        "comments": 11,
        "body": "Hi all,\nI have a workflow that is triggered on release/n@sblantipodi,/nthanks for the answer, at the end I solved using a multi job workflow. but I understood your suggestion, thanks for the help. love GitHub and its community./nI encountered the issue on my repo here./nThe workflow dispatch UI on the website has a drop-down menu to select a branch. Maybe put some placeholder workflow on the default branch and the real workflow on the desired branch (here: master), with the exact name file name?/nOk so I am managing everything on the default branch now as actions  on master don\u2019t work like they should./nSo after doing a Test it seems to be that workflow_run is capped at max 3 subsequent runs ? that is weird/nIt could be a deliberate limit to prevent endless loops of workflows being triggered, but if this is actually a restriction then it should be documented./nHave also just hit this undocumented arbitrary limit of 3 consecutive runs using on workflow_run./nMet The same problem and find its in the following document: Events that trigger workflows - GitHub Docs: Note: This event will only trigger a workflow run if the workflow file is on the default branch.\n/nI am also seeing this issue, was there a resolution to it?/nIs it possible to use workflow_run: trigger from a workflow in different repository? I think this is more of a 'real use case' scenario./n"
    },
    {
        "title": "Download of actions on \u201cSet up\u201d job is failing. Throwing 503's",
        "url": "https://github.com//orgs/community/discussions/25744",
        "upvotes": "338",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 8,
        "body": "Seems like there is a problem with Github Actions? But Github Status pages show everything is normal. Is anyone facing the same issue? Can someone please help me out here?/nI think this is a global problem on GitHub ATM. Even though their status page isn\u2019t showing it./nphew I didn\u2019t screw up my repo lol. Same here\nedit: finally showing up on the status page\n/nLol, that\u2019s kinda comforting! I thought I messed up my repo/nAll the actions URLs resolve to https://codeload.github.com/ which is throwing angry unicorns at everyone./nHaving the same issue, worse is we need to put something to production today./nMy night shouldn\u2019t have ended like this. \ud83d\ude03/nEarly morning here! Bad start to the day \ud83d\ude41/nJobs are working again; able to checkout repos./n"
    },
    {
        "title": "How to modularize actions?",
        "url": "https://github.com//orgs/community/discussions/26320",
        "upvotes": "289",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 19,
        "body": "There are multiple questions created long back and no response on them later.\nThe recent one is in 2019 last reply without any solution.\nThere is no use to resurrect them, so creating a new one./nHi @ukreddy-erwin\nThere are a few ways to reduce duplication: composite actions and reusable workflows.\nThey can\u2019t solve all aspects but could help.\nPlease, take a look at a few articles:/nI tried the steps in the second link composite action as is but.\nI created a repo in my account ukreddy-erwin, GitHub - ukreddy-erwin/testactions/nActions can be in internal repo (you need Enterprise GitHub org), but not private.\nYou can checkout your action repo as any other private repo to specific subfolder and use it as \u201clocal\u201d action./nhow to keep in the same repo as a sub folder and refer them?/nYou can take a look at this thread Path to action in the same repository as workflow - #2 by yanjingzhu/nAlso this one is good example Multiple github composite actions in one repo - #2 by mcaskill\nonly token is needed to checkout private repository/nThanks @ViacheslavKudinov , I tried the steps but not working./n@ukreddy-erwin, please, change step to/nThank you it works, so we it would pick from the folder directly.\nSo, we can\u2019t keep multiple yaml files in the same folder right?\nIf can, how to refer in the users: .//nSo, we can\u2019t keep multiple yaml files in the same folder right?\nIf can, how to refer in the users: .//nIn jenkins, say I have my source code in repoA. I can keep my pipeline file in repoB and in a separate branch say testB.\nThen, in jenkins project, I can simply refer this repoB/testB branch pipeline file and it will run for repoA./nIt really depends what you want to achieve.\nBut technically you can use GHA from any repo and branch/tag, just use\nuses: my-org/my-action-repo@branch(or tag).\nSame for reusable workflow:\nuses: my-org/my-gha-repo/.github/workflows/reusable-workflow.yml@branch/nIf you don\u2019t have Enterprise account/org it will be more complex (or maybe even not everything is possible) if you want to use private repositories for GHA:s and reusable workflows./ncan we set something like./nYou have to use syntax eg:\nuses: myorg/repoB/.github/workflows/workflow.yml@branch1\npart .github/workflows is mandatory as I know and it is where reusable workflow has to be in your repoB, branch name comes after @./nCan you answer the input variables part also./nIf I remember correctly inputs not available by default as environment variables.\nYou need to use env section for job, eg\nenv:\nvariable: ${{ inputs.name }}\nPS  IT WAS THE WRONG SUGGESTION, SORRY!!!/nI tried and got below error./nLet me double-check and I will be back soon./n"
    },
    {
        "title": "Use GHCR image in uses field of job step?",
        "url": "https://github.com//orgs/community/discussions/37158",
        "upvotes": "282",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 6,
        "replies": 3,
        "comments": 4,
        "body": "I have an image that's being built and pushed to the GHCR./nHi there @abatilo and welcome to our community! Thank you for asking a great question \ud83d\ude42/nI think this is a bit of broken functionality. I've run into this as well./nJust faced this issue right now while migrating from Drone to Github Actions. In our case the registry is self hosted./nAdding a +1 to this, recently came across this today. Pretty disappointing./n"
    },
    {
        "title": "Endless 'Waiting for a runner to pick up this job...'",
        "url": "https://github.com//orgs/community/discussions/31587",
        "upvotes": "261",
        "tags": [
            "ProductFeedback",
            "npm"
        ],
        "rections": 35,
        "replies": 12,
        "comments": 14,
        "body": "Hi, folks!\nI'm trying to setup a workflows, but the runner doesn't start my job. I've requested ubuntu-latest and got a message Waiting for a runner to pick up this job.... I've canceled jobs and triggered it again for several times without success.\nCould anyone give me a hint to what I should do in this case?/nThe message looks like there might be a typo in the runs-on definition. But the wrong time indicates there might be another bug. If the workflow file is correct or you still have the same issue after fixing it, the best option is probably to submit a bug report./nI think there is a typo. You typed ubuntu-lates. It should be ubuntu-latest/nI had a similar issue with ubuntu-20.4 and struggled for a half day.../nHello !, i have the same problem but for me :\nWhen I launch my ci everything works fine with runs-on: ubuntu-latest but my runners does not detect/nI didn't realize until this page that I was using ubuntu instead of ubuntu-latest. Saved me a lot of time. Thank you very much./nEventually, now ubuntu-18.04 (deprecated) enters the eternal waiting. It worked in March./nI am using large runners. My problem was that I just created the runner, and it auto-assigns it to a group called \"Default\". But by default, all runners in this group do not allow you to run actions on public repositories  unless you click the check box for \"Allow public repositories\"./nFor me I just stopped the worflow and started it again and it started working now. I think for the first push you need to do it twice to make it work! Thanks./nI couldn't run it until I added one blank line after the jobs:(Does anyone know if this really matters?)\n/nI'm experiencing the same issue, I have tried and review some of the things pointed out here, but still not working. I'm using an aws auto-generated template for lambdas, so I'm wondering if the issue it's one of \"uses\" file that are being referenced in the job./nI have a similar problem. I would like to run a job on ubuntu-latest, windows-latest, macos-latest. When I enter them individually everything starts but when I enter them together it just says \"Waiting for a runner to pick up this job...\"/nGot the same issue, and my syntax and all defined values were valid./n@swiknaba\nmay be, it adds \"\\n\" to the string value? I found this problem when making a long string with \": >\" syntax, and finally solved it with \": >-\" variation, although YAML docs say it's not necessary/nFor anyone else having issues with this I think the reason mine was not working was because I was on a GitHub Enterprise Server (GHES) and per this page: https://docs.github.com/en/enterprise-server@3.9/actions/hosting-your-own-runners/managing-self-hosted-runners it says, \"Note: GitHub-hosted runners are not currently supported on GitHub Enterprise Server. You can see more information about planned future support on the GitHub public roadmap.\" So I think you have to host your own runner./n"
    },
    {
        "title": "Graceful job termination",
        "url": "https://github.com//orgs/community/discussions/26311",
        "upvotes": "258",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 34,
        "replies": 14,
        "comments": 17,
        "body": "When cancelling job there is chance that running software handle some resources that needs to release when job is cancelled. To make this robust way GitHub Actions should send signals for running process so that application can tear-down tasks properly. Gentle terminator would send first SIGINT, wait some seconds and if app still doesn\u2019t die it would send another signal SIGTERM and finally SIGKILL to force terminate it eventually./n@jupe,/n@jupe,/nHi @brightran/nHi,/nI can also confirm that using cancel-in-progress: true with a GitHub Actions CI pipeline that runs terraform plan does not work well. If the plan step is canceled it will just immediately terminate and not gracefully release the lock./nIf you\u2019re using terraform, I\u2019d suggest using atlantis:/nI confirmed; Github runner is using SIGKILL for cancel-in-progress./nCan we make job termination operate more gentle?\nUncompleted compilation file won't be clean after cancel-in-progress KILL make process./nThis seems like a common issue for everybody running tasks like terraform - that need to gracefully exit. You can and should disable fail-fast in the github action, so jobs don't get cancelled if a new one arrives. But having the cancel button in the UI which could be accidentally clicked by some user is really dangerous. In case of terraform that means potentially leaking resources - that need to be cleaned up manually afterwards./nI wrote a demo to illustrate and confirm the behaviour described above, which really should be in the docs./nI wrote this up better in a demo at https://github.com/ringerc/github-actions-signal-handling-demo since I wasn't satisfied with the answers from @BrightRan above, nor my earlier quick tests./nHas something changed in the way Github processing of the job termination ?\nI am not receiving any signal that can be catched anymore, everything just gets killed directly./nWhy is this marked as answered when it isn't really answered? How to avoid e.g. terraform apply to be killed without cleaning up?/nCould we maybe adjust the wrapper so that it invokes terraform via tini -- krallin/tini#8 -- or something like it which 'does a good job' (I'm guessing?) of forwarding signals to child processes .../nThis is the workaround I'm using now .../nHere is my workaround. Like @breathe , I don't use the terraform wrapper. Aside from that, I instead use tini to make sure all signals get propagated:/nI built a simple tool which speeds up the signals propagation based on the above material:\ndimikot/signal-fanout/n"
    },
    {
        "title": "Custom action using private docker registry",
        "url": "https://github.com//orgs/community/discussions/61470",
        "upvotes": "236",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Question/n"
    },
    {
        "title": "How to check status of previous step?",
        "url": "https://github.com//orgs/community/discussions/26060",
        "upvotes": "233",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 1,
        "replies": 1,
        "comments": 4,
        "body": "Hello,\nI have a workflow that builds docker image and next action is creating comment on each workflow run.\nHowever, I need to check if build step has failed or nott and take action./nIt\u2019s hard to say exactly what is causing your problem without a detailed description of the problem (and ideally a link to a workflow run), but I already see a few problems:/nHi @martyrs,/nThank you all.\nI resolved this with the following change:/nHi @martyrs,/n"
    },
    {
        "title": "Run workflow after pushing changes to a PR",
        "url": "https://github.com//orgs/community/discussions/25796",
        "upvotes": "228",
        "tags": [],
        "rections": 1,
        "replies": 0,
        "comments": 4,
        "body": "One of my workflows is set to run like this/nHi Peter,/nOk thanks!/nYes, the \u2018edited\u2019 type is triggered when updating PR itself, including title, body, state, base, and other stuff./n@weide-zhou/n"
    },
    {
        "title": "Feature Request: Display and Select Commit to Deploy in Github Actions",
        "url": "https://github.com//orgs/community/discussions/52049",
        "upvotes": "216",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 7,
        "replies": 0,
        "comments": 0,
        "body": "Product Feedback/n"
    },
    {
        "title": "Add option to include stdout, stderr and exitcode to steps output",
        "url": "https://github.com//orgs/community/discussions/83102",
        "upvotes": "212",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 2,
        "body": "Product Feedback/n+1 for this feature!/nI just discovered that capturing output cross-platform (matrix) tests can be a pain as \"tee\" exists on Linux but not on Windows for instance./n"
    },
    {
        "title": "Cancel a workflow without considering it failed?",
        "url": "https://github.com//orgs/community/discussions/27174",
        "upvotes": "210",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 5,
        "replies": 1,
        "comments": 9,
        "body": "How can a workflow be canceld but not considered a failure?/nHi\u00a0@jasonkuhrt\u00a0,/nThanks\u00a0@weide-zhou that looks like it will solve the issue. I\u2019ll give it a shot./nBut, how do I put an if condition on a job based on the step output of a previous job in the workflow?/nHaving a similar issue here./nHi! Is there a way to avoid to put if in all the jobs? Too much code duplicated.../n@weide-zhou I would agree with @cgr71ii ... this introduces a lot of code duplication and if you miss in a step refinement of the GHA workflow the if condition you end up with a half broken execution./nIt is possible to cancel via the GH API, but you create a \"cancel request\", which means you need to hold/wait the action (sometimes up to 30s or more) to prevent further steps from progressing, while polling the API to see if it has canceled. There's a couple OSS actions which implement this behavior, but it's sub-optimal at best./nIs there a workaround for cancelling a workflow without causing it to fail? Given that the workflow fails when it's cancelled via GitHub API, this will trigger all sorts of integrations to notify devs about a problem while there isn't one./nWe have CI with concurrency group configured. It cancels all CI on a branch if a new commit pushed.\nAll these cancelled workflows are reported as failed in email reports. There is no way to bypass that with if statement.\nI'll be happy to have a way to cancel without marking as failed./n"
    },
    {
        "title": "Github actions importer failing with Unable to locate credentials",
        "url": "https://github.com//orgs/community/discussions/55933",
        "upvotes": "202",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 2,
        "comments": 1,
        "body": "Question/nDid you ever find a solution for this? I am facing the same issue/n"
    },
    {
        "title": "GitHub Action pull_request attribute empty in workflow_run event object for PR from forked repo",
        "url": "https://github.com//orgs/community/discussions/25220",
        "upvotes": "178",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 18,
        "replies": 10,
        "comments": 8,
        "body": "2024-03-06 EDIT/nI have the same problem. I\u2019ve done other tests and I think the problem is the fork.\nWhen the Pull request comes from a fork repository, the PR object comes empty everywhere in the workflow.\nI tried in several ways, but I couldn\u2019t relate the pull_request number to that execution, workflow, suite, etc./nHi,/nThis issue persists, and is still not even documented by GitHub. It should not be considered \u201csolved\u201d, the solution provided above is merely a workaround./nI would be nice if this info is available natively from the workflow_run event rather than resorting to finding the PR number/nActually even from the REST API the pull request array is empty and it's not even a fork./nThis is still a problem./nI just came across the issue and found out (yet) another workaround. I prefer to avoid using artifacts to send the PR number information as those could be altered./nThe more you look at it the more it seems they really really really do not want you to know from the API what PR number is associated with a workflow run... but they're happy to show you in the UI and in an unformatted part of CLI output as someone else pointed out... baffling. Even if you query the workflow run from the API there's absolutely no indication of what triggered it.\n\nI don't really love the checking by owner and branch name solutions as that could technically be changed while the action is running. So hopefully GitHub provides an actual fix at some point./n"
    },
    {
        "title": "How to use repository action variables (plain text) on workflow action?",
        "url": "https://github.com//orgs/community/discussions/42133",
        "upvotes": "173",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 68,
        "replies": 0,
        "comments": 2,
        "body": "Product Feedback/nIt is in the vars context. So you should be able to access the repository variables by ${{ vars.TEST2 }}/n@github Please put a note on /{orgOrUser}/{repo}/settings/variables/actions page itself as a quick reference. Googling mostly takes us to https://docs.github.com/en/actions/learn-github-actions/variables this page is a TON of TMI and actually its kinda unrelated too/n"
    },
    {
        "title": "Using environment vars in job returns in empty strings",
        "url": "https://github.com//orgs/community/discussions/67846",
        "upvotes": "155",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Bug/n"
    },
    {
        "title": "Can I check the permissions of a token",
        "url": "https://github.com//orgs/community/discussions/25259",
        "upvotes": "154",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 64,
        "replies": 3,
        "comments": 8,
        "body": "Is it possible to get a list of the permissions of a given token?\nOr check if a token has a certain set of permissions?/n@tombrus,/nHi @brightran!/n@tombrus,/nThanks @brightran, I entered a feature request./nIt\u2019s fairly easy to check the permissions of a token using the github API:/nGreat henrik242! Thanks./nHi @tombrus and everybody else  - it's been quite some time since this was raised.\nWhat's the best way to do this in 2023?\nI am trying to accomplish this for the new fine-grained PATs that are provided via the ${github.token} context in actions./nFYI if you have the GitHub CLI installed, this is also possible with the gh auth status command, which you should be able to force to use a particular token via the $GITHUB_TOKEN env var, so something like:/n"
    },
    {
        "title": "Bug?! Fresh repos are publishing packages, but they are not showing up!",
        "url": "https://github.com//orgs/community/discussions/33237",
        "upvotes": "147",
        "tags": [
            "Packages",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 3,
        "body": "Hi,/nAnyone? @github-staff/nAdditional info:/nFound the issue. It's related to:/n"
    },
    {
        "title": "How to control the Description of Packages (published via Gradle/maven)",
        "url": "https://github.com//orgs/community/discussions/10694",
        "upvotes": "1288",
        "tags": [
            "Actions",
            "Packages",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 1,
        "comments": 3,
        "body": "Hi,/nHi,/nAny updates on this issue?\nIt's been more than a year since the last official reply and the \"About this package\" section is still empty./nIn my case, the package description is automatically generated, but it ignores my POM and instead uses the description from one of my dependencies (ANTLR 4)! That's even worse, because it actually forces me to manually correct the description to prevent confusion.\nThe description change then takes its sweet time to be reflected, and reverts whenever I upload a new version, which is just great :)/n"
    },
    {
        "title": "Releases published when author is github-actions won't fire push events",
        "url": "https://github.com//orgs/community/discussions/16244",
        "upvotes": "1078",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 11,
        "replies": 10,
        "comments": 3,
        "body": "Having set up an action with the on push tags: [\"*\"] event, this push event does not fire when a release is created via the GitHub releases UI when the author of the release draft is the special github-actions user, even when the release gets published later by an admin of the repo:\n/nOK, I am pretty sure now this is a bug in GitHub actions. That's because a release event actually does trigger, but, like reported a push event does not:/nI don't know, but I think this is a bug too./nThis is by design and documented:/n"
    },
    {
        "title": "Why is Docker not installed on macOS?",
        "url": "https://github.com//orgs/community/discussions/25777",
        "upvotes": "551",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 7,
        "body": "Hi there \ud83d\ude0a/nDocker does not support MacOS it is only avaialbe for Windows and Linux.\u00a0 The docker desktop developer experience actually runs your containers in a Linux VM and is not something that can be installed on a service as it is not supported or licensed for that scenario.\u00a0\u00a0/nFirst of all, thanks for taking the time to answer \ud83d\ude0a/nAs mentioned in the linked ticket, docker should be not supported on hosted macOS./nThanks for taking the time to explain this!/nWould it be possible to install another OCI tools, e.g. podman? It\u2019s supposed to be mostly a drop-in replacement, so for many use cases it might be a decent replacement. It could maybe also be used to run Docker actions on macOS./nFor anyone looking, here is how I got it working for me./nThanks I tried but even after installing docker,  not able to start docker engine.,\ncan you please check/n"
    },
    {
        "title": "Github Actions services not reachable",
        "url": "https://github.com//orgs/community/discussions/26114",
        "upvotes": "485",
        "tags": [],
        "rections": 0,
        "replies": 1,
        "comments": 9,
        "body": "I\u2019m trying to use Github Actions with a Docker compose-like setup. I would like to use a service container to start a postgres instance, to connect to from an elixir container. The way I read the docs, this should work:/nAnd yes, those environment variables are correctly picked up by the application and it really tries to connect to the hostname set in the variable \ud83d\ude09/nAnybody?\u00a0@jeremyepling, might you be able to help? I cannot for the life of me get this working./nOr you\u00a0@ethomson\u00a0?/nOne possibility is that the postgres service is not fully started by the time your steps try to access it (I\u2019ve seen this issue for mysql, postgres, etc)/nAdditionally, just in case I skimmed your question too fast and missed something:/nI have the exact same problem as\u00a0@juulsme but with my dynamodb-local service/nThank you for your response, I will try with the health check tomorrow! (it\u2019s midnight where I live now). I know about the docker networks, I\u2019ve tried using the container hostname first - that seemed most logical to me as well and I also spotted that the containers are started with the same network flag. I\u2019ll give it a go with the healthcheck :slight_smile:/nAnd I\u2019ll try the workdir thing too :slight_smile:/nThe healthcheck thing did the trick, although I\u2019ll keep the changed workdir in mind for future reference. Thanks for your help!/n"
    },
    {
        "title": "Return Runner Identity in OIDC Token",
        "url": "https://github.com//orgs/community/discussions/35794",
        "upvotes": "477",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "We have a hybrid approach where we use a combination of self-hosted runners and GitHub's public runners in a single repository. Where possible, we would like to use the public runners to reduce the strain on our self-hosted runners but there will be times where we want to use our self-hosted runners due to access to our internal resources./n"
    },
    {
        "title": "Organization-level required workflows - filter based repositories selection",
        "url": "https://github.com//orgs/community/discussions/53592",
        "upvotes": "415",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 15,
        "replies": 0,
        "comments": 0,
        "body": "Product Feedback/n"
    },
    {
        "title": "Path filtering is triggering the ignored workflow even though there are changes there",
        "url": "https://github.com//orgs/community/discussions/62453",
        "upvotes": "362",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Question/n"
    },
    {
        "title": "Setting a multiline environment variable fails",
        "url": "https://github.com//orgs/community/discussions/24952",
        "upvotes": "338",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 4,
        "replies": 0,
        "comments": 2,
        "body": "I tried to set a multiline environment variable from a Github action following the documentation, but I get an error that I can\u2019t reproduce locally. Do you have any clue about the reason, or suggestions on how to debug this? Ideally, I would like a docker image that does a dry run of the workflow./nI found the issue, instead of/nIt always strikes me how low level this syntax is for such a high level task like a GitHub action./n"
    },
    {
        "title": "How to run a workflow only once, even when triggered mutliple times",
        "url": "https://github.com//orgs/community/discussions/26741",
        "upvotes": "289",
        "tags": [],
        "rections": 1,
        "replies": 0,
        "comments": 7,
        "body": "I have a CI workflow that I want to run on PRs, but also when I\u2019m just pushing to my repo. That way, I can notice issues sooner during development when I have not yet decided to turn it into a PR. The workflow also needs to run when a PR gets merged into master. But when I simply enter/nThe way you have it setup it will always run on a push and when a PR is opened, yes. That would be expected when you configure it like that. If you only want to run it whenever you push a new branch (which is how I interpret your use case), you should listen just to the create event instead, so you\u2019ll end up with:/nThat way it won\u2019t be run when it gets merged into master, though. In other words, I want to run the workflow on every push for every branch within my repo, and also for PRs that come from forked repos. But reading the docs you linked for the pull request event, it seems that there is no such configuration and i just might need to change the way I think about these triggers./nIn order to trigger things when they are merged into master, you can use the following workflow structure:/nWe recently shipped support for if at the job level so this workflow should be easier now.\u00a0/nThis has some more comments on running checks twice: Duplicate checks on \"push\" and \"pull_request\" simultaneous event - #4 by yanjingzhu/nPersonally, as a newbie I find the explanations confusing. The accepted solution above only runs the CI on merge (which would make it not run at all when pushing to a feature branch in a PR, right?)./nExample :\n/n"
    },
    {
        "title": "Using exit code of previous step",
        "url": "https://github.com//orgs/community/discussions/25809",
        "upvotes": "282",
        "tags": [],
        "rections": 3,
        "replies": 1,
        "comments": 3,
        "body": "So I know you can use output of steps by referring to steps.\\<step id\\>.outputs.\\<output name\\>./nThis is the only solution to know if Action step completed successfully or not that I know./nPerfect hint, thank you! Works in my situation./nIf anyone gets to this from search: you can now also get the result of any of the previous steps:/n"
    },
    {
        "title": "Using a matrix defined input for a custom action",
        "url": "https://github.com//orgs/community/discussions/25899",
        "upvotes": "261",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 4,
        "body": "I want to use a custom action and provide a different value to an action input parameter based on the matrix element - for example, a platform specific URL./nIt doesn\u2019t seem like you\u2019d want a matrix here.\u00a0 I think I would approach this by having a script that sets the appropriate values\u00a0based on the operating system in the matrix, then uses those output values as inputs into the other actions.\u00a0 For example:/nShouldn\u2019t run step have id: configure set?/nYou sould also be able to do something like this/nThis is exactly what I was looking for, thanks a lot!/n"
    },
    {
        "title": "New workflow_run type \"success\"",
        "url": "https://github.com//orgs/community/discussions/17243",
        "upvotes": "258",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "I tried to find a previous discussion about this, but I was unable to find one. Hopefully I am not just wasting everyone's time with making a duplicate./n"
    },
    {
        "title": "Feature Request: invalid workflow file should show as failed or errored in PR / commit checks",
        "url": "https://github.com//orgs/community/discussions/25739",
        "upvotes": "236",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 4,
        "body": "I recently introduced an error in a workflow file in a PR but neglected to notice as the PR showed as green and passing all checks (it just hadn\u2019t run the jobs from that workflow)./nThank you for your feedback - we appreciate it and will pass it on to the Product team./nIt\u2019s been about a year since this was brought up. Is this still on the radar? An invalid workflow file should show up as a failure in PR/push checks. Show the green \u201call checks passes\u201d when your workflow itself has failed is clearly misleading and erroneous./nI have same question? I can not find a fix for this. It makes catching problems very difficult and could allow a merge to happen that should not happen. I would think that this should have been a high priority to fix./nmaybe the act tool can help./n"
    },
    {
        "title": "Write permissions for repo variables for GITHUB_TOKEN",
        "url": "https://github.com//orgs/community/discussions/53250",
        "upvotes": "233",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 1,
        "replies": 0,
        "comments": 0,
        "body": "Question/n"
    },
    {
        "title": "Having erratic \"docker command not found\" error with self hosted runners",
        "url": "https://github.com//orgs/community/discussions/29864",
        "upvotes": "228",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "Hi github community,/nWe've started experiencing the same error during \"Set up job\" step./n"
    },
    {
        "title": "Github regular macOS runner no longer able to run vagrant jobs.",
        "url": "https://github.com//orgs/community/discussions/73013",
        "upvotes": "216",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 1,
        "replies": 7,
        "comments": 1,
        "body": "Bug/nThis PR essentially updated VirtualBox 4 days ago: actions/runner-images#8653 Vagrant uses VirtualBox as backend on the macos-12 runners... maybe that is related?/n"
    },
    {
        "title": "Npm test never stops executing",
        "url": "https://github.com//orgs/community/discussions/25250",
        "upvotes": "212",
        "tags": [],
        "rections": 11,
        "replies": 0,
        "comments": 9,
        "body": "I used create-react-app to bootstrap a new project and left it as it is by default./nIt seems that when you execute the command npm test , you should explicitly set the environment variable CI , no matter its value is true or false./nDo you need both? CI=true npm test works but just setting the env var hangs when you add another command after the npm test/n/nFor anybody still reading this.\nI faced the same issue, found that I had --watch flag added to jest in the test script.\nThe test won\u2019t end in that case. Removed and everything is fine./n[If you are still reading this article]\nI have faced the same issue with angular \u201cng test\u201d and followed below steps:/nRun sudo apt install chromium-browser/n'--exit' option works for me/nThis one worked for me./n"
    },
    {
        "title": "How to share matrix between jobs",
        "url": "https://github.com//orgs/community/discussions/26284",
        "upvotes": "210",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 2,
        "replies": 0,
        "comments": 11,
        "body": "I\u2019m trying to build a regression test suite that basically builds a client and a server binary from different release versions, and then runs them against each other./nHi @marten-seemann,/nHi @weide-zhou, thank you for your reply./nHi @marten-seemann,/nHi @weide-zhou,/nHi @marten-seemann,/nDoes that mean it\u2019s not possible to have matrix jobs generated by a script? That seems like\u2026 a pretty basic thing for a CI, and I\u2019d surprised to hear that it\u2019s not possible on GitHub Actions./nI think I figured out a way to do this: I place the configuration in a separate file, matrix.json:/nActually this can be made to work, you just need a couple of minor adjustments to the code:/nhttps://vs-blogs.medium.com/dynamic-matrix-in-github-action-e516019cfdf5 (Approach 3) helped me/nIt took me a while to figure the best approach and here is what I propose to todo to reuse a workflow where the configuration (YAML -> JSON) is parsed and saved as \"matrix\" key/nYaml anchors would be a standard way to do this, but they're unfortunately not supported in github's execution./n"
    },
    {
        "title": "Refusing to allow a GitHub App to create or update workflow without workflows permission",
        "url": "https://github.com//orgs/community/discussions/27072",
        "upvotes": "202",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 5,
        "replies": 2,
        "comments": 2,
        "body": "Hi!\nI currently want to create a workflow to update another workflow scheduled (see the corresponding workflow).\nIt creates a new branch, makes some changes, commits them and tries to push via git push https://{actor}:{token}@github.com/{repo}.git {branch_name} command./nA likely reason is that the PAT isn\u2019t actually used when pushing the changes. In the linked workflow file I can\u2019t see any git commit or git push command. However I see that actions/checkout is called without a token parameter, which means it will configure Git to use the default GITHUB_TOKEN./nIn the linked workflow file I can\u2019t see any git commit or git push command./n"
    },
    {
        "title": "Using Github Action environment variables in shell script",
        "url": "https://github.com//orgs/community/discussions/27027",
        "upvotes": "178",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 13,
        "replies": 0,
        "comments": 3,
        "body": "Currently I\u2019m running into issues trying to get ${{ secrets.ENVIRONMENT_VARIABLE_NAME }} work within a bash script file. Does anyone know if using ${{ <context> }} is allowed in a bash script file? I can\u2019t find any information on this in the Github Actions documentation/nThat won\u2019t work, because \u201c${{ <context> }}\u201d and the \u201csecrets\u201d variable are GitHub Actions constructs that Bash doesn\u2019t understand. You\u2019ll have to pass the secret to your step as an environment variable:/nI can see this solution being a great work around for those only need to pass in a couple of environment variables into their bash script file. I\u2019ll mark this as the solution since this may benefit others in the future. Thanks!/nThe below works for me/n"
    },
    {
        "title": "Description field for workflows to be shown in UI",
        "url": "https://github.com//orgs/community/discussions/12213",
        "upvotes": "173",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 1,
        "replies": 1,
        "comments": 3,
        "body": "I am writing and more workflows to make full use of Actions, and while it's trivial to add comments in-line, I was wondering if it was possible to assign an official description to a workflow. I searched to no avail./nHi @es-fabricemarie - this is a really interesting idea.  Can you give me a few examples of the places that you'd want to see this?  (Screenshots would be great!)/n@ethomson --- I concur.  It would be nice if a description is supplied such as:/n"
    },
    {
        "title": "Feedback on session: Understanding the risk of script injection in GitHub Actions workflows",
        "url": "https://github.com//orgs/community/discussions/74396",
        "upvotes": "155",
        "tags": [
            "CodeSecurity",
            "Universe2023",
            "Speaker"
        ],
        "rections": 8,
        "replies": 0,
        "comments": 0,
        "body": "Speakers: Robert Anderson, Sr. DevOps Engineer, GitHub | Yadhav Jayaraman, Staff Solutions Architect, GitHub/n"
    },
    {
        "title": "If (not) startswith mutually exclusive steps",
        "url": "https://github.com//orgs/community/discussions/26386",
        "upvotes": "154",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 25,
        "replies": 1,
        "comments": 5,
        "body": "Hi,/n@valentijnscholten,/nWow, best reply ever. Thank you @brightran !/nIf the condition statement is started with \u201c ! \u201d ( Not ), the expression syntax \u201c ${{ }} \u201d can\u2019t be omitted./nI suppose this has less to do with GitHub Actions and more with YAML in general./nwhy is this not in the official documentation? \ud83d\udc4d @BrightRan/n"
    },
    {
        "title": "Secret ability to store Certificates",
        "url": "https://github.com//orgs/community/discussions/25521",
        "upvotes": "147",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 4,
        "body": "I am looking at using GitHub Actions to go through a build and deployment process for a module to the PowerShell Gallery. In this process we use a code-signing certificate from an authorized CA. Is there any option/ability for us to save the certificate in GitHub Secrets so we can securely use it within an workflow?/nHi\u00a0@wsmelton\u00a0,/nPowerShell we use the command Set-AuthenticodeSignature to sign the files. Our only options in this command is the certificate be in the cert store of the machine or a pfix file./nI\u2019m hitting this myself.\u00a0 Here\u2019s what I did./nSimilar to timheuer\u2019s answer, I have many workflows that requires a key file to be present on the runner, I have stored the files contents in a base64 encoded secret and simply decode and write it to a file in my workflow. Like:/n"
    },
    {
        "title": "Feature Request: Secrets GUI, allow masking real secrets and show normal variables",
        "url": "https://github.com//orgs/community/discussions/17277",
        "upvotes": "145",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 5,
        "replies": 0,
        "comments": 1,
        "body": "Hi!/nFwiw, if you have something that isn't truly a secret, you could store it w/ rot13 encoding and then decode it at runtime./n"
    },
    {
        "title": "GHCR images having dot in the name are not accessible in UI",
        "url": "https://github.com//orgs/community/discussions/25628",
        "upvotes": "1288",
        "tags": [
            "Packages",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 9,
        "body": "Docker images having dot in the repository name are not accessible via Packages UI when pushed to Github Container Registry (ghcr.io).\nIt is impossible to manage the package (set visibility level, delete package)./nWe\u2019ve pushed out a fix for this.  Could you verify its working now?  Thx!/nBig thanks - I can now access package settings via UI :slight_smile:/nDid you rollback the change - I cannot access the aforementioned package(s) again?/nYes, sorry about that.  The dot fix broke packages with a / in the them so we rolled it back. We\u2019ll have a fix for both coming out early next week.  Rails routes \u00af_(\u30c4)_/\u00af/nRolled back the rollback. You\u2019re good to go again!/nGreat! Thanks again :slight_smile:/nIt appears this issue has resurfaced again. Uploading a package with a dot results in a 404. Removing dot fixes the issue./nThis has been fixed now and your packages with dots should be visible/nThe dot fix broke packages with a / in the them so we rolled it back. We\u2019ll have a fix for both coming out early next week. Rails routes \u00af_(\u30c4)_/\u00af/n"
    },
    {
        "title": "Workflow is failing if no job can be ran due to condition",
        "url": "https://github.com//orgs/community/discussions/25146",
        "upvotes": "1078",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 2,
        "body": "I\u2019m trying to avoid one job to run conditionnally. For instance, let\u2019s say I want to control a \u201c/rebase\u201d command to only trigger the rebase job steps on PR:/nHi\u00a0@didrocks\u00a0,/nWhat is the status on this? Is it by design or a bug?/n"
    },
    {
        "title": "Homogenise inputs from callable workflows and event inputs from dispatchable workflows",
        "url": "https://github.com//orgs/community/discussions/9092",
        "upvotes": "551",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 6,
        "replies": 4,
        "comments": 2,
        "body": "pyTooling/Actions: Callable vs dispatchable workflows/nThanks for the feedback.  We wouldn't want to change the github.event, since there could already be inputs there, but I can imagine exposing the inputs context to cut down on code duplication./nWe are working on a fix for this issue.  We will expose inputs from workflow_dispatch events into the inputs context in addition to the github.event.inputs context./n"
    },
    {
        "title": "Support Managing CI/CD Variables Dynamically",
        "url": "https://github.com//orgs/community/discussions/9249",
        "upvotes": "485",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 2,
        "comments": 3,
        "body": "It seems that Github already supports creating secrets from the UI, but could this be extended to manage non-secret variables?/nGood question - at the moment you can add secrets via the UI (as you mentioned) or you can add non-secret environment variables to a workflow.  What sorts of limitations are you running into with workflow variables that would be solved with adding variables to the UI?/nit looks like this is now being planned github/roadmap#575/nRelated to #42055/n"
    },
    {
        "title": "Github Action Notification Preferences",
        "url": "https://github.com//orgs/community/discussions/4369",
        "upvotes": "477",
        "tags": [
            "Actions",
            "Notifications",
            "ProductFeedback"
        ],
        "rections": 3,
        "replies": 0,
        "comments": 1,
        "body": "It would be great to have a few more knobs and buttons for github action notifications./nAnd to add to that: If I have the workflow open during execution, I really do not need to get a notification that the workflow fails! (I am already look at it :-D )./n"
    },
    {
        "title": "How to prevent repository collaborators from triggering workflow",
        "url": "https://github.com//orgs/community/discussions/27110",
        "upvotes": "415",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 6,
        "body": "According to https://help.github.com/en/github/automating-your-workflow-with-github-actions/authenticating-with-the-github_token,/nI have the same thought./nAccording to\u00a0https://github.community/t5/GitHub-Actions/Question-on-actions-security/m-p/35028/\u00a0it seems that in order to achieve desired security boundaries we have to use forks./n@anantakrishna we have exactly the same problem. Have you figured out a solution without creating the overhead of a forked repository for every developer?/nNo, I have no news in this regard since then. So either use forks for collaborators (which is a pain, I should say) or move the deployment scripts (pipeline) to some other platform like Travis. Maybe having a separate repository on GitHub with the deployment actions might work, yet I have not tried it. Anyhow, not very convenient./nCritical workflows and secrets can be put behind an environment that requires approval before running. The required approvers can be restricted to non-collaborators. See Environments - GitHub Docs/nIndeed, this is something new! Thank you, @konradpabjan./n"
    },
    {
        "title": "Allow filtering releases by package name (improve monorepo support)",
        "url": "https://github.com//orgs/community/discussions/5579",
        "upvotes": "362",
        "tags": [
            "Actions",
            "Packages",
            "Releases",
            "ProductFeedback"
        ],
        "rections": 2,
        "replies": 1,
        "comments": 1,
        "body": "In the JavaScript/TypeScript world, it's increasingly common for projects to have a single 'monorepo' from which multiple packages can be published independently. The version number may or may not be synchronised between packages./nThis is good feedback - tagging @MylesBorins (who's been looking after releases and has an interest in monorepos) so that he can capture this feedback./n"
    },
    {
        "title": "ERROR\uff1a There was an error committing your changes: File could not be edited.",
        "url": "https://github.com//orgs/community/discussions/54940",
        "upvotes": "338",
        "tags": [
            "Actions"
        ],
        "rections": 20,
        "replies": 2,
        "comments": 9,
        "body": "Question/nThis is an active ongoing issue. Please check https://www.githubstatus.com/ for more updates./nThanks for posting in the GitHub community and we appreciate your patience. You can check our GitHub Status Page to see for real-time and historical data on system performance + subscribe to issues for updates./nSolution in my case:\nI'm not sure if that's the solution for all possible cases, but in my cases, it was happening because i was creating another file with the same name, not realizing there was a file already with the same name. for instance i had datastructure.md and i was creating another file datastructure.md. So the solution was simply to create file with a different name, as it was a mistake./nsame problem with me    .   because i  am using the network in company?/nSame problem just now and I couldn't even comment. It said \"You can't comment at this time.\"./nIs this resolved? I am getting \"There was an error committing your changes: File could not be created\" when I change or creating new file/nI am facing the same issue, the page did not load first with server error 500. Now it loaded but I am unable to make any changes. Was it resolved for anyone and if it did how long did it take?/n@RajagopalanV It seemed solved after a few minutes to hours when I commented it. It looked like some intermediate server issues in Github in general and later the website went back normally./nI'm getting this error now and github status is showing operational:/n"
    },
    {
        "title": "Automatically publish action to marketplace on release",
        "url": "https://github.com//orgs/community/discussions/26410",
        "upvotes": "289",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 3,
        "replies": 5,
        "comments": 5,
        "body": "Hi,/nOkay, good to know! It would be really helpfull if that can be explicitly added to the docs section I referenced in my first message. That way other people don\u2019t have to try and search a while to figure this out./n@mscoutermarsh\nAny progress on this?\nWhen can the new features be expected?/nI just found this discussion. Has anything changed in that matter?/nSorry! No updates at the moment. We aren\u2019t working on it yet. Teams are focused on a lot of other features./n"
    },
    {
        "title": "How can I get the e-mail address of the committer?",
        "url": "https://github.com//orgs/community/discussions/25448",
        "upvotes": "282",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 3,
        "body": "So I have a workflow in which a push (by the merge of a PR or a simple push) would trigger a bot to push to another repo with the user\u2019s name and details, that triggered the action. I managed to get the name by {{ github.event.inputs.name }}. But what about the user\u2019s e-mail?/nFor the push event, there is: ${{github.event.pusher.email}}./n@ohsayan,/n@dawidd6\u2019s link points to the legacy documentation, the new link is:\nhttps://docs.github.com/en/free-pro-team@latest/developers/webhooks-and-events/webhook-events-and-payloads#push/n"
    },
    {
        "title": "Raise a warning in github workflow",
        "url": "https://github.com//orgs/community/discussions/27123",
        "upvotes": "261",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 4,
        "replies": 0,
        "comments": 3,
        "body": "Hi/nI\u2019ll be honest, I can\u2019t seem to find a good way to do this./nThanks for the answer. Do you consider it as a good addition? I can open an issue (don\u2019t know where) to suggest that improvement/nI\u2019d go here and submit the feedback.  Share feedback - GitHub Support/n"
    },
    {
        "title": "Reusable workflow doesn\u2019t trigger status check",
        "url": "https://github.com//orgs/community/discussions/8512",
        "upvotes": "258",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 4,
        "replies": 4,
        "comments": 1,
        "body": "We have a required PR check based on a GitHub Actions workflow. This workflow is normally triggered on branch push and works fine./nI have the same problem. I just converted an action into a re-usable workflow and it no longer uses the job with matching name for updating the status check (they are both called validate)./n"
    },
    {
        "title": "Overlapping nodes in GitHub Actions job graph",
        "url": "https://github.com//orgs/community/discussions/55411",
        "upvotes": "236",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Bug/n"
    },
    {
        "title": "run logs are not available while it is running",
        "url": "https://github.com//orgs/community/discussions/48806",
        "upvotes": "233",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 1,
        "comments": 1,
        "body": "Product Feedback/nAgree - there are several unactioned threads on this topic over the past few years, e.g., https://github.com/orgs/community/discussions/35363/n"
    },
    {
        "title": "Path filtering on required pull request checks",
        "url": "https://github.com//orgs/community/discussions/26857",
        "upvotes": "228",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 4,
        "replies": 0,
        "comments": 6,
        "body": "We have a monorepo holding multiple microservices. On a pull request, we want to only run unit tests on a service that has been changed within the PR. We accomplish this with a workflow syntax like this:/nHi\u00a0@connorgraham\u00a0,/nThanks\u00a0@weide-zhou\u00a0/nI published an Action that solves all those required-check-problems: https://github.com/marketplace/actions/skip-duplicate-actions/nAnother \"solution\" found here https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/troubleshooting-required-status-checks#handling-skipped-but-required-checks/nYou can add a no-op.yml (or any name) that adds a dummy exit code for the required job:/nI tried to use skip-duplicate-actions but I think it's currently bugged and won't skip the jobs, instead I ended up using changed-files.\nI won't post an example here because changed-files provides already plenty of examples in their doc, for instance have a look at https://github.com/tj-actions/changed-files#on-pull_request-/n"
    },
    {
        "title": "GitHub Actions: Feedback to Starter workflows",
        "url": "https://github.com//orgs/community/discussions/8816",
        "upvotes": "216",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 19,
        "replies": 10,
        "comments": 5,
        "body": "Feedback to Starter workflows/nIt would be nice if we could do this at the org level./nI tried it on a few repos and it worked wonderfully. One tiny thing I think could help: (optional?) matrix strategies for both runtimes and operating systems. For the languages I tried (Go, Python) it defaulted to latest-language-release@ubuntu, but it'd be good if there was a way to run this against past three stable language releases on linux/windows/macos./nHey,\nI have an issue related to the github actions, When I open the actions tab of my repository; a server error always occur.\nI've tried to edit the workflow but still no progress./nThis is mentioned in this thread, but I'd like to put it here as a top-level answer: it's currently not possible to use non-public starter workflows in an org, because they must be in the public .github repository, which is a bit of a bummer./nIt would be great to also have the option to create starter workflows on enterprise level./n"
    },
    {
        "title": "How to do dynamic \"uses\" for reusable workflow",
        "url": "https://github.com//orgs/community/discussions/45342",
        "upvotes": "212",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 14,
        "replies": 5,
        "comments": 9,
        "body": "Question/nHow do we achieve this?/nDo you have a finite amount of possible environments? If no, you can skip reading this./nThanks @airtower-luna and @ChristopherHX for the answers, it is greatly appreciated.\nI'm accepting @ChristopherHX as the proper answer./nI have a different requirement that requires the same requested solution. We are in the processing of migrating workflows between orgs. The workflow in the new org will continue to be developed but the old workflow is frozen. We planned on storing the org name in a variable that the caller workflow would interrogate to call the right reusable workflow./nSad that this not a possibility, I understand the potential for injecting a foreign workflow, but we could at least be allowed to call workflows that are from the same repo or org./nI have a different use case, where I have a separate repository containing reusable workflows and reusable actions. The repository is semanticly versioned. Let's call that the \"reusable repository\"/nWhile dynamic uses is not directly supported, you can achieve what you want by nesting the remote reusable workflow inside another reusable workflow that is path based. Just before running your path based workflow job is run, you can create the workflow.yml file with required data and have it take advantage of pseudo dynamic uses. For your example you can add a prepare job that prepares your dynamic workflow file:/nIf triggering using workflow_dispatch instead of workflow_call would work for your case, then consider this workaround:/n"
    },
    {
        "title": "Possible to have multiple actions in a single repo?",
        "url": "https://github.com//orgs/community/discussions/24990",
        "upvotes": "210",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 3,
        "replies": 3,
        "comments": 2,
        "body": "Is it possible to have a monorepo consisting of many actions? e.g./nYes. For example the github/codeql-action repository is like this:/nAFAIK, if you want to publish it, it must be in a standalone repository./n"
    },
    {
        "title": "Startup Failed checks won't show",
        "url": "https://github.com//orgs/community/discussions/16152",
        "upvotes": "202",
        "tags": [
            "Bug",
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "What we see:/nAny updates from the GitHub support team on this?/n"
    },
    {
        "title": "feature request: download zip artefacts as .zip, not .zip.zip",
        "url": "https://github.com//orgs/community/discussions/26223",
        "upvotes": "178",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 3,
        "replies": 1,
        "comments": 7,
        "body": "After a action is finished I can download the produced artifacts from a popup menu in the upper right corner of the build log./nDid you use the action actions/upload-artifact\u00a0to upload artifacts in your workflow?/nThanks for the quick reply BrightRan!/nWhen using the action\u00a0 actions/upload-artifact to upload artifacts, the action will automatically package the files in the specific path \u00a0(can be a directory path or a file path) as a ZIP and names the ZIP with the specific name (artifact name)./nThat explains a lot! Thanks./nHello from 2024!/nIt would be nice having skipUnzip boolean option for the actions/download-artifact@v4 to get the artifact(s) as is (zip-compressed). I do my best to name the artifact the desired way (eg. AppName-version+hash.zip) for actions/upload-artifact@v4 in the previous job / step, and I need to simply get it later./nSee also actions/upload-artifact#426/n"
    },
    {
        "title": "Unable to download-artifacts",
        "url": "https://github.com//orgs/community/discussions/26618",
        "upvotes": "173",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 14,
        "replies": 6,
        "comments": 5,
        "body": "I\u2019m creating a workflow that need to save artifacts in build step and same artifacts in deploy step.\nupload-artifacts working well, but download-artifacts can\u2019t find the folder I\u2019ve uploaded./nI notice your \u201cdeploy\u201d job doesn\u2019t have a needs: build setting, so it should be started in parallel (if there\u2019s room in the runner queue). Considering the build is likely to take some time the likely answer is that the artifact hasn\u2019t been uploaded yet when the download-artifact step is running./nThank you. It worked fine!/nwhat was the actual command you ended up using? After reading about \u201cneeds\u201d I\u2019m still not sure how to direct it towards my build./nSince this came up as a top search result:/n"
    },
    {
        "title": "Feature Request: Support AWS ECR authentication scheme in GitHub Actions container",
        "url": "https://github.com//orgs/community/discussions/4770",
        "upvotes": "155",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 3,
        "replies": 0,
        "comments": 1,
        "body": "Currently, GitHub Actions supports setting static credentials for jobs containers: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idcontainercredentials./nThis would be a very useful feature - our organization uses ECR a lot (due to lower costs than in Dockerhub and credits) and it is very annoying that there is no straight-up way to use Private ECR repositories as Github actions containers. This is the sole reason why we are currently thinking of looking for an alternative CI/CD platform./n"
    },
    {
        "title": "Mix self-hosted and GitHub-hosted actions runners with spending limit",
        "url": "https://github.com//orgs/community/discussions/59664",
        "upvotes": "154",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Question/n"
    },
    {
        "title": "Is there a limit on the number of log lines / size for a single GitHub Action run?",
        "url": "https://github.com//orgs/community/discussions/49419",
        "upvotes": "147",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 5,
        "comments": 1,
        "body": "Question/n"
    },
    {
        "title": "Workflow run status is canceled when fail-fasting a matrix of reusable workflows",
        "url": "https://github.com//orgs/community/discussions/63860",
        "upvotes": "145",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 3,
        "body": "Bug/nI am curious whether the individual matrix jobs within the reusable workflow exhibit a race condition when attempting to set the status of the test job, consequently affecting the status of the caller workflow./nBug/nWe are experiencing the same issue with an additional twist: when fail-fasting a matrix of reusable workflows, neither failure() nor cancelled() are triggered, which is quite painful as we have no way to be alerted when our pipeline stops on main (except removing fail-fast) :\n/n"
    },
    {
        "title": "Workflow sharing concurrency group cancelled instead of pending",
        "url": "https://github.com//orgs/community/discussions/32376",
        "upvotes": "1288",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 10,
        "replies": 0,
        "comments": 6,
        "body": "I have two workflows sharing concurrency group:/nI see the same problem. Can someone reply on this? It's been 10 months since the original message./nMore than a year later and problem still persists. Can someone, please, take a look into it? It's obviously a bug./nI too was surprised to discover that jobs in the same concurrency group are canceled instead of waiting for an existing job within the group to finish. I can see why canceling is a desired behavior for some, but at least it should be made configurable./nDid you try setting cancel-in-progress: false? Note that at the moment there can be only one pending job, which will always be the latest one, so the previous pending jobs will still be cancelled./nRight now if I run 3 jobs about 5 seconds apart with the same concurrency group the following will happen:/nat the moment there can be only one pending job, which will always be the latest one, so the previous pending jobs will still be cancelled./n"
    },
    {
        "title": "Add a detailed monitor option to track GitHub Actions stats",
        "url": "https://github.com//orgs/community/discussions/13071",
        "upvotes": "1078",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 3,
        "replies": 0,
        "comments": 3,
        "body": "It would be awesome if GitHub offered per organization/user and at repository level historical stats of GitHub Actions:/nThanks for the feedback @oscard0m - I agree that this is an area that we can improve. I'll make sure that this is on our backlog. Thanks again./nIs there any update on this request? @ethomson\nIt would be good to have some ETA or is it part of road-map \ud83e\udd1e/nIs there any existing solution at the moment for finding the success rate of a GitHub Action in a repository?/n"
    },
    {
        "title": "Please make it possible to subscribe to failed workflows on the default branch independent of the triggering user",
        "url": "https://github.com//orgs/community/discussions/55379",
        "upvotes": "551",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 1,
        "replies": 0,
        "comments": 1,
        "body": "Product Feedback/nI completely agree, this would be such a valuable feature.  We currently have to use either a failed() job at the end of every workflow or use the webhook functionality.  It would be so much neater to allow notifications to be sent to a user / team from either the settings or the workflow definition./n"
    },
    {
        "title": "Allow actions/checkout to checkout a different private repo in same org",
        "url": "https://github.com//orgs/community/discussions/59488",
        "upvotes": "485",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Question/n"
    },
    {
        "title": "How to check if a container image exists on GHCR?",
        "url": "https://github.com//orgs/community/discussions/26279",
        "upvotes": "477",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 31,
        "replies": 9,
        "comments": 9,
        "body": "I\u2019m using GHCR as my container registry. The GitOps automation we use breaks if an engineer specifies an image that doesn\u2019t exist. For example, if the last built image is ghcr.io/my-company/my-image:1.0 but the engineer specifies ghcr.io/my-company/my-image:1.1 the automation breaks./nGHCR supports the Docker Registry API. You could either try to download the specific tag and see if you get a valid manifest, or retrieve the list of tags and check if the tag shows up. You\u2019ll need to use a token with read:packages scope for the requests./nI\u2019m asking specifically because other topics reference portions of the Docker Registry API that haven\u2019t been implemented yet (e.g. /v2/_catalog - Ghcr.io docker HTTP API). When I attempt to use the /v2/<name>/tags/list API endpoint, I get {\"errors\":[{\"code\":\"UNAUTHORIZED\",\"message\":\"authentication token not provided\"}]}. But using the same username and PAT I\u2019m able to successfully access the /v2/ API endpoint. I double-checked that the user has Read access to the GHCR package that I\u2019m trying to access./nYou can use the tags/list endpoint to grab all available tags./nNow that ghcr.io supports GITHUB_TOKEN, you can do the following/nBased on @13013SwagR\u2019s answer, here is my shell script version for Bash/command line./nREST services are okay, but what would really help users out is a basic search frontend, like Docker Hub enjoys./nHow can we list all the docker images that we have on the GitHub container registry?/nIt's difficult to query without a webui/nwhere is the documentation to use the API ?\ni am using the tags/list endpoint but want to know about more useful endpoints/n"
    },
    {
        "title": "workflow_dispatch trigger not available in branch, except it is!",
        "url": "https://github.com//orgs/community/discussions/8140",
        "upvotes": "415",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 7,
        "replies": 6,
        "comments": 3,
        "body": "When triggering a workflow with workflow_dispatch action and then selecting the branch that actually contains this workflow including the workflow_dispatch trigger, I get the following error:/nNever mind, there was a typo in the workflow that caused it to be unparsable in the develop branch.\nI'll leave the question here for those encountering the same problems: have another close look at your workflow ;)/nHi I Am facing the same issue but my case was a bit different, we have created a new branch not from any existing branch in the repo, just i try to add a workflow_dispatch to trigger manually but the workflow doesn't show in the action tab itself. i am search the workflow the in same other branch , am getting a error like \"Workflow does not exist or does not have a workflow_dispatch trigger in this branch.\". please any body suggest any solution to run the workflow_dispatch in a branch not created from main or master or any existing branch, but the workflow works if any push / PR happened in that branch if i reconfigure without manual trigger/nI had a similar issue with a branch, turned out that the new branch didn't have the workflow yml in the main branch as it was branched before that - just do a\ngit pull origin main and that'll resolve it./n"
    },
    {
        "title": "Pull request created in a GitHub action does not trigger workflows with pull_request trigger",
        "url": "https://github.com//orgs/community/discussions/65321",
        "upvotes": "362",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 16,
        "replies": 5,
        "comments": 3,
        "body": "Bug/nHi Markus,/nSome guidelines have now been added here:/nIn case someone at GitHub reads this, I think it would be great if the story for this was simplified! Let me tell a story./n"
    },
    {
        "title": "Status checks \"required if run\"",
        "url": "https://github.com//orgs/community/discussions/26092",
        "upvotes": "338",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 5,
        "body": "Is it somehow possible to change the branch protection from status checks that are required to \u201crequired if run\u201d?/nHi @pmeier,/nHm, that is unfortunate. Problem with you approach is that the PR is marked as \u201cnot completed yet (yellow dot)\u201d or failed forever, although that is not the case. I guess I\u2019ll remove the branch protection rules in that case. Thanks for your input./nYes this is a real shame./nany new update on this?/n@pmeier @ayushxx7 You could try this workaround:/n"
    },
    {
        "title": "Annotations, how to create them?",
        "url": "https://github.com//orgs/community/discussions/26703",
        "upvotes": "289",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 25,
        "replies": 1,
        "comments": 11,
        "body": "As title.\nIs it possible to create annotations? If yes, how?/nYou can use the following Workflow commands\u00a0to create W** arning \u00a0and Error**\u00a0annotations in the workflow:/nthanks for the reply./n@sblantipodi\u00a0,/nit\u2019s not an error, it\u2019s not a warning, it\u2019s a simple message that says:/n@sblantipodi\u00a0,/nlove this team! thanks/n@sblantipodi\u00a0,/nI\u2019m so impressed for the service, I really appreciate you answer.\nThanks!/nFor any googlers arriving here (like me):\nAs of July 2021, there is a \u201cnotice\u201d annotation (see GitHub Actions Toolkit):\necho \"::notice::my message text\"/nThanks for updating this thread with new info, future searchers appreciate it \ud83e\udd70/nThanks! Is there any way to get the text of annotation from the previously finished step?/n"
    },
    {
        "title": "Warning Icon for non-mandatory PR checks instead of 'X'",
        "url": "https://github.com//orgs/community/discussions/35424",
        "upvotes": "282",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 1,
        "replies": 2,
        "comments": 2,
        "body": "In our team we use Github Actions to run Checks on PRs.\nSome of the checks block a merge when they fail. Some other checks can fail but don't block a merge.\nGithub already offers this functionality which is great./nSome other checks can fail but don't block a merge./nI should say +1 for such feature/n"
    },
    {
        "title": "GitHub actions \"Re-run failed jobs\" does not re-run jobs that depend on failed jobs in matrixed reusable workflows",
        "url": "https://github.com//orgs/community/discussions/52505",
        "upvotes": "261",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 0,
        "replies": 3,
        "comments": 2,
        "body": "Bug/nI'm experiencing the same thing.\nAlso happens when you re run a successful job - the dependents are not run./nThis behavior seems to be a limitation or unintended behavior with how GitHub Actions currently handles re-running failed jobs in matrices, especially with nested workflows or reusable workflows./n"
    },
    {
        "title": "Actions Feature Request:milestoned event for pull requests",
        "url": "https://github.com//orgs/community/discussions/12846",
        "upvotes": "258",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 1,
        "comments": 4,
        "body": "Currently, an issue getting assigned a milestone triggers an event (milestoned) that can trigger a workflow. However, the same isn't true for PRs./nHi @albertvaka - as you noted, this is not supported today, per the documentation. I will talk to the team that manages triggers, but at the moment this is working as it's documented. It's possible that we can extend this in the future and if so, I'll make sure that this is on their backlog./nThis would be super useful for us, too to enable milestone-triggered checks for PRs./nI have been waiting for this for a few years. Someone else requested this way back when at https://github.community/t/feature-request-add-milestone-changes-as-activity-type-to-pull-request/16778/nThis has now been updated. Milestoning and demilestoning for a pull request now triggers a pull request event trigger, not issues event trigger. In fact, an issues event trigger does not occur anymore, only pull request event trigger. Figured this out the hard way of debugging literally everything except adding milestoned and demilestoned event triggers into the pull_request event triggers, the 'milestoned' and 'demilestoned' triggers for issues are no longer triggered by a milestone change in a pull request./n"
    },
    {
        "title": "Add Test Results support for workflows",
        "url": "https://github.com//orgs/community/discussions/12222",
        "upvotes": "236",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 2,
        "body": "Our CI pipelines often run hundreds or thousands of tests. When a small number of tests fail, it is useful to developers to be able to quickly see the failing test names and outputs, if desired. We are migrating from a CI service that had such functionality by uploading JUNIT XML files containing the test output after testing jobs./nThanks for the feedback, @dmattia - we'll take a look at adding this in the future./nMy design idea:\n/n"
    },
    {
        "title": "Join the Arm Virtual Hardware for GitHub Actions Beta! \ud83d\udea2",
        "url": "https://github.com//orgs/community/discussions/64612",
        "upvotes": "233",
        "tags": [
            "Actions",
            "GitHubEvent"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "/n"
    },
    {
        "title": "How to debug Error: Resource not accessible by integration errors",
        "url": "https://github.com//orgs/community/discussions/35213",
        "upvotes": "228",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 1,
        "replies": 0,
        "comments": 2,
        "body": "I am starting to work with GitHub actions, and one of the recurrent issues I hit is the error Error: Resource not accessible by integration. Most of the time the action you are trying to use has some issue or some note that helps you to resolve the issue, but it is not ideal, and you have to find that issue or that note in the documentation. This task is time-consuming.\nSo far all issues have been related to the permissions of the GITHUB_TOKEN, the resolution is to set the right permissions and that's it, but the error message does not give you any clue about the permission you need or the resource that is not accessible. It could be helpful to have the permission/resource fails to access into the message. Is there any way to debug these issues?/nGreat question @kuisathaverat! I'm glad you found our community! \ud83d\ude42/nAnything new on that matter?/n"
    },
    {
        "title": "Unit Testing (3.7) Expected- Waiting for status to be reported",
        "url": "https://github.com//orgs/community/discussions/65976",
        "upvotes": "216",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Bug/n"
    },
    {
        "title": "Use same runner image in job matrix containers",
        "url": "https://github.com//orgs/community/discussions/52956",
        "upvotes": "212",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 2,
        "comments": 2,
        "body": "Product Feedback/nIs there any Product Management feedback on this item?/n"
    },
    {
        "title": "Failures in fork repo are notified to developers of upstream repo",
        "url": "https://github.com//orgs/community/discussions/37095",
        "upvotes": "210",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 3,
        "replies": 0,
        "comments": 1,
        "body": "I am experiencing that failures in GitHub Actions in a fork repository are sent to upsteam developers./nHi there @mame and welcome to our community! Thank you for asking a great question \ud83d\ude42/n"
    },
    {
        "title": "Jobs/runners get killed after 16 minutes",
        "url": "https://github.com//orgs/community/discussions/40200",
        "upvotes": "202",
        "tags": [
            "Actions",
            "Issues"
        ],
        "rections": 0,
        "replies": 1,
        "comments": 2,
        "body": "Bug/nHi there @sylvestre and welcome to our community! Thank you for asking a great question \ud83d\ude42\nWhile you are waiting for a reply to your question, here are a few things you can do:/nMy team is also hitting this issue on Ubuntu 20.04:/n"
    },
    {
        "title": "Does use a GitHub action to update an article on a Jamstack site violate the GitHub Terms of Service?",
        "url": "https://github.com//orgs/community/discussions/27082",
        "upvotes": "178",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 9,
        "body": "I create a media site linked to an external CMS. The media site is built with the Jamstack architecture, and GitHub Actions is used to build and deploy the pages of the Jamstack site./nHi @nyamadori,/nThanks for your reply!\nI\u2019m sorry, the Terms of Use link I posted was incorrect./nHi @nyamadori,/nI\u2019ll ask a question to clear up my understanding./nI think that @nyamadori\u2019s question and concerns are a good point, the Terms of Use document seems to be vague regarding what constitutes \u201cserverless computing\u201d (a term which, in itself, could be subject of multiple interpretations), and (IMO) adding to the document a few practical examples of violating uses (and possibly of legitimate ones) could help clarify the difference./nAfter thinking about this post for a few days, I thought it would be better to post a ticket to GitHub Support for the terms of service instead of asking it on GitHub Community./nI\u2019m concerned about creating confusion in discussions on the GitHub Community, for example, with non-employees giving inappropriate answers to the Terms of Service./nYes, This is my question also./nI\u2019m afraid that I\u2019m not violating the following text in the above terms and conditions:/n"
    },
    {
        "title": "Reusing workflow in private repo (from same repo)",
        "url": "https://github.com//orgs/community/discussions/25719",
        "upvotes": "173",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 1,
        "replies": 5,
        "comments": 7,
        "body": "I know that Reusable Workflows are hamstrung by the fact that they cannot be reused across private repositories within an organization./nI\u2019m convinced this just doesn\u2019t work./nI had a similar issue with a corporate internal repo.  Apparently the uses line is case sensitive and must match what github thinks it is to work./nThank you.  I don\u2019t believe this is my issue since both my username and the repository names are all lowercase./nHi,\nits not exactly how you tried it before, but they announced local usage./nI think its only two ways how it could work\n/nHi @kolesnikovd\nIf you use one of Free, Pro or Team then reusable workflow has to be in same or public repo.\nFrom doc:/nThis is possible now , need to update the access settings of private repo that holds the workflow to allow access across organization - https://docs.github.com/en/actions/creating-actions/sharing-actions-and-workflows-from-your-private-repository/n"
    },
    {
        "title": "Run action on repo creation from template",
        "url": "https://github.com//orgs/community/discussions/25748",
        "upvotes": "155",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 7,
        "body": "I would like to generate scoped NodeJs repo from a template./nHi\u00a0@themoch\u00a0,\u00a0/nIt worked!\u00a0/nHi\u00a0@themoch\u00a0,\u00a0/nI understand completely./nOh, there is a good idea. We will consider it.\u00a0/nHi @yanjingzhu, is this still accurate advice?/nDoesn\u2019t work for me either./n"
    },
    {
        "title": "Documentation on registry_package event",
        "url": "https://github.com//orgs/community/discussions/26523",
        "upvotes": "154",
        "tags": [
            "Documentation",
            "Actions",
            "Packages",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 10,
        "body": "It seems the documention for the registry_package event is missing./nHi @riker09\u00a0,/nHi\u00a0@riker09\u00a0,/nFWIW, here\u2019s the link to the documentation: https://help.github.com/en/actions/automating-your-workflow-with-github-actions/events-that-trigger-workflows#registry-package-event-registry_package/nThis is still valid?/nIf there has been a rename it has not (yet) made it into the documentation. Here is a screenshot from today (Wed. 26th, Feb. 2020):/n_registry_package\u00a0_wasn\u2019t working for me. I tried to rename registry_package to package, but I get the following error:/nIf it wasn\u2019t documented, how exactly people found it to use it?/nIt was documented at\u00a0some point, and then it got removed later on. The documentation is updated to the latest changes of GitHub Actions. Sometimes documentation and actual behavior diverge. I would love to see this issue addressed, by having the documentation to be in sync with the released features. It would be helpful to have a documentation changelog as well. And GitHub Actions (Core) should have version tags which then could be referenced in the documentation. I have not spent any research time whatsoever to see if this is an actual feature request somewhere else./nYeah, I get the same error now. registry_package is not working (anymore?), the workflow does not even show up in the list of workflows of the repository. And renaming the event to package results in the same error \u201cInvalid workflow file\u201d./nI would like to know how to get the package name, so I can use it later in the workflow./n"
    },
    {
        "title": "Support multi-line string input for workflow dispatch",
        "url": "https://github.com//orgs/community/discussions/37899",
        "upvotes": "147",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 4,
        "replies": 1,
        "comments": 3,
        "body": "We are using GitHub Actions to manually release builds on TestFlight and tag them on git./nHi there @farshadtx and welcome to our community! Thank you for asking a great question \ud83d\ude42\nWhile you are waiting for a reply to your question, here are a few things you can do:/nCould you provide some other input that you could then use a step in the workflow to look up the changelog information?/nThe absense of multiline inputs forced me to convert my markdown changelog to json, then do ${{ fromjson(inputs.changelog) }} to parse the json string literal. It would be so much easier if I could paste newlines into the textbox. My workflow with the workaround looks like this https://github.com/ChristopherHX/github-act-runner/blob/1a704901af2094fbbd489f29d40151060d2c155c/.github/workflows/build.yml#L129 and I have to enter \"- item 1\\n- item 2\" that prevents me from pasting a markdown file./n"
    },
    {
        "title": "Escaping ${{ }} in workflows",
        "url": "https://github.com//orgs/community/discussions/26621",
        "upvotes": "145",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 6,
        "replies": 5,
        "comments": 3,
        "body": "Hi, I\u2019ve a need for literal ${{VAR}} in a workflow. I\u2019ve tried a number approaches to escaping the dollar sign, or the braces, but nothing seems to work:/nThere might be tricks to avoid having the dollar sign next to the braces, but depending on the concrete situation it may or may not be possible to let it evaluate to ${{VAR}} in the end./nThanks @Simran-B, that worked indeed!/nTried @Simran-B solution and got this line 1: ${{VAR}}: bad substitution so no luck/n"
    },
    {
        "title": "GitHub actions cannot find Gradle/maven packages",
        "url": "https://github.com//orgs/community/discussions/56824",
        "upvotes": "1288",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 2,
        "comments": 1,
        "body": "Question/nI'm going through the same problem/n"
    },
    {
        "title": "OpenIDConnect provider's HTTPS certificate doesn't match configured thumbprint",
        "url": "https://github.com//orgs/community/discussions/59455",
        "upvotes": "1078",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 0,
        "replies": 1,
        "comments": 2,
        "body": "Bug/nSeeing the same issue here as well, and the thumbprint matches what we have stored./nSee https://github.blog/changelog/2023-06-27-github-actions-update-on-oidc-integration-with-aws/ for the necessary remediation./n"
    },
    {
        "title": "Raw logs are publicly accessible",
        "url": "https://github.com//orgs/community/discussions/25922",
        "upvotes": "551",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 8,
        "body": "In my opinion, raw logs or any other GitHub Action output within a private repo should be private as well./nIs this really true ?/nThe raw logs for private are not publicly accessible.  You must have access to the repo to download and view them./nI can gain access to a file in raw form from a private repo using an anonymous browser window. This should not be possible. I have never logged into gh from an anon window./nThe only way I can think of this working would be to use the browser tool to capture the time limited SAS URL for the log in question and then use that URL in your anonymous browser.  However, to get that SAS URL you would have needed to be logged into GitHub with access to the private repository./nI\u2019m not asking how to do this, I\u2019m saying I can and I shouldn\u2019t be able to./nAnd I am asking how you are doing it.  I am not able to find a way outside of grabbing the time bound SAS url./nGet the raw url from your private repo, go to a private window, paste it in./nOk yes, that is exactly what I said.  You have to be logged in and have access to the repo to get that signed URL to download the raw log but once you have that URL you can download the raw log for 1 minute./n"
    },
    {
        "title": "actions/checkout@v3 \"Receiving objects\" less than 80 KiB/s",
        "url": "https://github.com//orgs/community/discussions/43834",
        "upvotes": "485",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 2,
        "replies": 2,
        "comments": 5,
        "body": "Bug/nCan confirm that we are seeing the same issue across multiple repositories in our organization. Not sure if it's some kind of throttling issue or something broken on the GitHub side?/nSame in our repositories and even worst speed then @jmglsn report now:\n/nThere has been an update to the GitHub status page: https://www.githubstatus.com/incidents/00km0kwpz23b/nhttps://github.com/orgs/community/discussions/43834#discussioncomment-4647294/nReport answered/n"
    },
    {
        "title": "Allow job id to be supplied to an ephemeral runner so that it only takes the supplied job id",
        "url": "https://github.com//orgs/community/discussions/19784",
        "upvotes": "477",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 3,
        "replies": 0,
        "comments": 2,
        "body": "I am writing an orchestrator for Actions runners running in Docker containers.  I want to whitelist specific actions so that they run in privileged containers, and can therefore use Docker in Docker (dind).  \"Dind\" is a security problem if unknown code is allowed to run./n\ud83d\udc4d\nThere are many other use cases for this feature as discussed in actions/runner#620, actions/runner#2106, and actions/runner#2147./n+1 to this/n"
    },
    {
        "title": "Rerun action but with latest code",
        "url": "https://github.com//orgs/community/discussions/9025",
        "upvotes": "415",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 4,
        "replies": 2,
        "comments": 4,
        "body": "Creating and testing actions can be a slow process. The usual process is/n@gr2m are you aware of workflow_dispatch?/nHi @gr2m - I strongly agree.  The inner loop for developing workflows and actions is Not Great.  This is something that I'd like to improve in the new year.  In the meantime, sorry that this is painful./nLove the idea, right now it\u2019s painful to test workflows./nWas there any decision on this request? \ud83d\udc40/n"
    },
    {
        "title": "Countdown to the \ud83e\ude90 Universe: Actions Community Check-in",
        "url": "https://github.com//orgs/community/discussions/70010",
        "upvotes": "362",
        "tags": [
            "Actions",
            "CommunityCheck-In"
        ],
        "rections": 6,
        "replies": 0,
        "comments": 1,
        "body": "/nDue to security restrictions, users can no longer use GITHUB_ENV to set the NODE_OPTIONS environment variable in their workflows. Developers who have NODE_OPTIONS set as an environment variable will now receive an error: Can't store NODE_OPTIONS output parameter using '$GITHUB_ENV' command./n"
    },
    {
        "title": "\"Rerun\" fails to parse when using Reusable workflows",
        "url": "https://github.com//orgs/community/discussions/40777",
        "upvotes": "338",
        "tags": [
            "Actions",
            "Issues"
        ],
        "rections": 0,
        "replies": 1,
        "comments": 3,
        "body": "Bug/nHi there @connorjclark and welcome to our community! Thank you for reporting this!/nThis remains an issue. Another failed retry: https://github.com/connorjclark/ZeldaClassic/actions/runs/5101682005/nWhich case ends up in a bad state of empty job list for the attempt to re-run all jobs./n"
    },
    {
        "title": "Git commands as if condition of a step in workflow",
        "url": "https://github.com//orgs/community/discussions/27148",
        "upvotes": "289",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 4,
        "body": "Hello, I want to only run the \u2018Commit and Push\u2019 step if there are some changes in the repo.\nWhat I tried to do:/nif: is no shell, so no, running commands there is not supported. What you can do is set an environment variable or output variable in a previous step, and check that. Example with environment variable:/nHi Luna,/nSorry, I put true and false the wrong way around in my example. According to the documentation git diff --exit-code will return 0 if there are no changes, and in Bash 0 means true, contrary to C\u2026 \ud83d\ude05/nNo, dont be sorry. Programming with such things is confusing./n"
    },
    {
        "title": "actions doesn't trigger on release edited if I just update the binary assets",
        "url": "https://github.com//orgs/community/discussions/47794",
        "upvotes": "282",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Bug/n"
    },
    {
        "title": "Reusable workflows unable to leverage GHA environments?",
        "url": "https://github.com//orgs/community/discussions/46744",
        "upvotes": "261",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 2,
        "replies": 2,
        "comments": 3,
        "body": "Question/nIs there any chance reusable workflows are not compatible with Environments?/nHey @pantelis-karamolegkos, jobs that call a reusable workflow support only a subset of keyword jobs.<job_name>.* keywords, you can find them here:\nhttps://docs.github.com/en/actions/using-workflows/reusing-workflows#supported-keywords-for-jobs-that-call-a-reusable-workflow/nYou can parametrise the environment and put it directly in the reusable workflow.\nNot passing an environment input will skip the environment keyword inside the reusable job./n"
    },
    {
        "title": "actions/cache@v3 errors with lots of \"Cannot open: File exists\"",
        "url": "https://github.com//orgs/community/discussions/58174",
        "upvotes": "258",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 2,
        "replies": 0,
        "comments": 3,
        "body": "Question/nI have a similar issue. It makes sense that it's a permission of some kind because when I run the action myself its fine. But when the action is run by dependabot it fails. Here is what my config looks like. My errors look exactly like the screenshot. Edit: I found a instance of this error where the workflow run passed, so I think this had nothing to do with runs by dependabot./nactions/setup-go sets up the cache so if you already use it, you do not need to use actions/cache?/nI had this issue and it got solved by setting the correct permissions on the cache directories and the go mod directory./n"
    },
    {
        "title": "Using environment in workflow_call",
        "url": "https://github.com//orgs/community/discussions/25238",
        "upvotes": "236",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 19,
        "replies": 13,
        "comments": 7,
        "body": "For some reason I am unable to access environment values (note: I\u2019m not referring to env values) in a workflow_call.  Here is my example:/nI think you have to explicitly pass down the secret to your workflow. So on your workflow call you have something like this./nThis is correct./nBy the time we get to the call_workflow step in script_outer.yml, the \u201cenvironment: dev\u201d is already out of scope because it pertained to the outer_test step.  So I would need to be able to re-declare the environment in the call_workflow step.  This is not possible however.  You will receive errors if you try to define an environment in the same step where you are using a uses.  This means you can not pass down a secret from the environment to the inner workflow.  You can only pass down secrets that are a part of the global scope and not ones that are a part of an \u201cenvironment\u201d specific scope./nIt sounds like I\u2019m having a similar or maybe the same problem. I can pass secrets down but not environment values even if they\u2019re in the outer scope./nNot the same issue but I have a work around for you.  If you have a step before \u201cbuild\u201d that declares an output, you can use that in the call to docker-build-and-push.yml.  Here\u2019s an example:/nI was finally able to get a solution/clarification from GitHub support.  The following example outputs \u201cMatch\u201d if you have an environment called TestEnvironment with a secret called TEST_SECRET set to 123 in your repository./nI am trying to pass env variable ECR_REPOSITORY_NAME to a workflow but it doesnt work\nI declare env variable in the same file/n"
    },
    {
        "title": "Cannot change workflow permissions",
        "url": "https://github.com//orgs/community/discussions/56704",
        "upvotes": "233",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 3,
        "replies": 5,
        "comments": 3,
        "body": "Question/nPlease try to follow the steps described here to change the default workflow permissions./nHi @jo-koe I can click on the other sections, but Read and write permissions is not clickable for me. Do you have a suggestion?/nadd this in top of your action file/n"
    },
    {
        "title": "Give the option to make check pass when only files matching paths-ignore have changed",
        "url": "https://github.com//orgs/community/discussions/8832",
        "upvotes": "228",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 1,
        "replies": 1,
        "comments": 2,
        "body": "Say I want to ignore changes to markdown files for a workflow:/nThanks @Anton-4 - I understand where you're coming from.  Right now when a workflow is required, the workflow really needs to run and changing that would be a breaking change.  We can take a look at improving this in the future.  In the meantime, you can use if conditions on your job to run the workflow but skip the actual job./nCurrently the only workaround is this./n"
    },
    {
        "title": "Matrix.os fails to match",
        "url": "https://github.com//orgs/community/discussions/25986",
        "upvotes": "216",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 4,
        "body": "Am trying to build pyinstaller executables for multiple OSs, Since MS windows uses \u201c;\u201d separators I used \u2018matrix.os\u2019 to switch the run command./n        if: matrix.os == 'ubuntu-latest' || 'macos-latest'/nThank you! That fixed it./n@arky,/nThank you @brightran @airtower-luna/n"
    },
    {
        "title": "Action runs when PR is created, but not when PR is merged",
        "url": "https://github.com//orgs/community/discussions/25073",
        "upvotes": "212",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 11,
        "body": "Hi,/nBy default a workflow is run when a PR is opened, synchronized or reopened to better optimize for CI workflows.\u00a0 If you want to run when the PR is merged you can specify that as follows./nThanks for your reply. I adjusted my .github/workflows/pull_request.yml file as you suggested, but it still didn\u2019t run upon merging a PR. Any further suggestion or insight?/nShould that be \u2018closed\u2019? e.g.:/n@jrobison-sb\u00a0 - @talldan was exactly right, it should be closed, not merged./nThanks\u00a0@cdb, that fix and the types option would make us very happy :slight_smile:/nAwesome\u00a0@talldan,\u00a0good to know! Fixing things makes me happy too :)\u00a0/n@ cbd Thanks for identifying this, and thanks for the super quick turn around time on the fix./n@cdb wrote:/nAnd what about checkout? Is there any workaround if I need to get the code from the merged branch for the pipeline?\u00a0/nare there any updates?/nIf I\u2019m reading the documentation correctly, closed will trigger on any reason for closing a PR, so my action could be triggered when a PR is closed without merging which is not what I need.\u00a0/n"
    },
    {
        "title": "Do build artifacts of open source (public) projects count towards the storage limit?",
        "url": "https://github.com//orgs/community/discussions/26438",
        "upvotes": "210",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 3,
        "body": "Hi,/nHi @peterjuras\u00a0,/nThanks for the clarification, I saw the documentation and that is why I was asking. In particular the following quote from the article you shared \u2026/nOh, thank you for pointing this out. What a valuable improvement. I have submitted a request in our internal channel to update the billing document . Thank you for helping us build a better GitHub Actions.\u00a0\u00a0/n"
    },
    {
        "title": "Private Repository Actions",
        "url": "https://github.com//orgs/community/discussions/21269",
        "upvotes": "202",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "At the moment the support gap for using custom actions in any scalable way is wide, between public repositories and internal repositories (which requires you to have an enterprise account)./n"
    },
    {
        "title": "Add \"manage_runners:org\" permission",
        "url": "https://github.com//orgs/community/discussions/17260",
        "upvotes": "178",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 2,
        "replies": 1,
        "comments": 1,
        "body": "The only way we've found to share a runner across several repositories is to declare it at organisation level./n/n"
    },
    {
        "title": "workflow_dispatch picking the branch",
        "url": "https://github.com//orgs/community/discussions/18648",
        "upvotes": "173",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 1,
        "comments": 1,
        "body": "We have package publishing behind a workflow_dispatch, we have one main branch which will produce a full release and other branches which produce a pre-release versions./nHello/n"
    },
    {
        "title": "How to enable hardware virtualization in github self-hosted action runners?",
        "url": "https://github.com//orgs/community/discussions/26216",
        "upvotes": "155",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 6,
        "body": "I want to run my CI job in github self-hosted action runner(linux) but that job needs hardware virtualization to be enabled. Is there any way to enable hardware virtualization in self-hosted runner? In other words, can I create a vm inside self-hosted runner?/nHi,\u00a0/nThanks for reply. Sorry, I misunderstood self-hosted runners as github-hosted runners. I want to add self-hosted runner to github repository. So I downloaded actions-runner package on my baremetal mechine(ubuntu 16.04) and tried to run config.sh but it fails with following error:/nYou can find the runner logs folder _diag under actions-runner folder. You can provide logs here for us to investigate.\u00a0/nI was able to solve the issue by adding proxy url in \u201c.proxy\u201d file. Thanks./nMore info here:\u00a0https://github.com/microsoft/azure-pipelines-agent/blob/master/docs/start/proxyconfig.md/nSpeaking of which, this is enabled on Travis natively, but not on Github Actions.\u00a0 We\u2019d really like to test our selinux configuration but we can\u2019t do so easily on Github Actions due to KVM hardware nested virt not being enabled, at least not without doing some self-hosting.\u00a0 Any chance this will change?/n"
    },
    {
        "title": "GitHub Actions: Using non-fixed names in upload-artifact",
        "url": "https://github.com//orgs/community/discussions/26959",
        "upvotes": "154",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 11,
        "body": "Hi,/nHey,\u00a0@lelegard! Good question.\u00a0 If the step creating the version and the step needed the version are both run in the same job, you can set the environment variable at the job level./nHi\u00a0@managedkaos,/nI think the piece you are missing is that steps in a job can set environment variables for use by later steps in the job by echoing specially-formatted strings, as documented here. I do that all over the place in my own workflow, for reasons just like you are describing. The YAML file doesn\u2019t need to hard-code all environment variables, earlier steps can set them up based on whatever process you need./nAgree!\u00a0 The workflow should take care of the settings automatically and not require manual intervention./nActually,\u00a0@managedkaos using the mechanism I mentioned whereby a step can set an environment variable for use in subsequent steps and jobs does work even when you are using actions like the artifact upload action, because you can use the workflow expression syntax to interpolate the environment variables into the action configuration, and the values set by your previous step will, in fact, be used. I do exactly that in my own workflow. Here is where I set some environment variables in an earlier step, and here is where I use those values in a later step with an upload action./nYep, so it is @brunchboy!\u00a0 That\u2019s pretty cool. \ud83d\ude03/nPretty cool indeed. It works./nFor reference, if anyone is interested in seeing the result on a real project, the corresponding YAML file is the following: https://github.com/tsduck/tsduck/blob/master/.github/workflows/nightly-build.yml/nThanks for the pointer,\u00a0@managedkaos!/nit might sound counterintuitive, @kittaakos, but can you give more details on how the artifacts with non-fixed names are named? In your example, it looks like the names follow some pattern like:/nThanks for your time,\u00a0@managedkaos./n"
    },
    {
        "title": "\"if: github.ref == x\" while not on the branch now causes a build failure",
        "url": "https://github.com//orgs/community/discussions/25128",
        "upvotes": "147",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 12,
        "body": "Hi,/nHi\u00a0@cfarrend\u00a0,\u00a0/n@yanjingzhu yes this is what we normally expect, and it has been the case for months now. Issue is that recently we are now getting errors for this so we are wondering if anything has changed for GitHub actions in relation to our account./n@cfarrend\u00a0 I could not reproduce your issue in my side. If this issue happened in a private repo,I would recommend you to submit a support ticket to contact GitHub Support directly.\u00a0/nI am afraid that would be the case\u00a0@yanjingzhu, issue is that GitHub support tickets in the past take usually 20 days for a response so was wondering if it could somehow be expedited via GitHub actions forums as it\u2019s a bit of an annoyance to our development process, similar to the last ticket/nI am sorry to hear that . Could you please share your organization name and repo name here?\u00a0/nWe have exactly the same problem and I have an example in a public repository: TYPO3-Documentation/sphinx_typo3_theme#69 - if anyone wants to take a look, I\u2019d be grateful./nSame problem here with all our private repositories. Hopefully, that change in behavior will be reverted./nHey\u00a0@yanjingzhu our organization is \u201cqctrl\u201d (https://github.com/qctrl)/nHi All, I have reported this issue in our internal channel, when there are any good news about it, I will update here at the first time. Sorry for any inconvenience.\u00a0/nI see those checks being skipped now instead of failing, so it was fixed?/nHey\u00a0@aleksi same thing here, seems to show as \u201cskipped\u201d now. Might be a new feature?/nYeah, this issue has been fixed already. Skipped job should show skipped not failed now. Sorry for any inconvenience.\u00a0\u00a0/n"
    },
    {
        "title": "Does a pull_request merge always trigger the push event?",
        "url": "https://github.com//orgs/community/discussions/27017",
        "upvotes": "145",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 3,
        "body": "Hello all,/nHi\u00a0@actuallymentor\u00a0,/nSo to summarize: yes an \u2018on.pull_request.close\u2019 always triggers a \u2018push\u2019 event/nNo, because a pull request can be closed without merging it and so there would be no push event in that case./n"
    },
    {
        "title": "Publishing a release from GitHub actions does not publish to GitHub marketplace",
        "url": "https://github.com//orgs/community/discussions/7941",
        "upvotes": "1288",
        "tags": [
            "Actions",
            "Releases",
            "ProductFeedback"
        ],
        "rections": 1,
        "replies": 3,
        "comments": 7,
        "body": "Summary/nhey @untitaker. I'm trying to hunt down the right folks from the marketplace team to take a look at this./n@saquibkhan can you please take a look?/nLooping @priyakewlani18 and @ushakiran-r for initial triage/nHey @MylesBorins ,/n@priyakewlani18 Sorry, I guess that wasn't entirely clear from the initial post, but your scenario is actually a different one. I use a GitHub actions workflow to publish my marketplace action from CI. There is no Draft Release button I ever click on./nIs there any update on this? I am also running into this issue and manually updating each release feels very painful to me/nPasting this here as a reference:/n"
    },
    {
        "title": "Allow workflow dependencies on other workflows",
        "url": "https://github.com//orgs/community/discussions/12688",
        "upvotes": "1078",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "It would be helpful to have a needs key like we have for a job, but for workflows, that would allow specifying another workflow's completion prior to running it./nThe way that we'd recommend doing this today is using composites - which it sounds like you're doing. It sounds like you want more visibility into the execution of those composite jobs - you're thinking of the tests as a separate thing which should fail in this case. I think that makes sense, and I'll talk with the team about this and give some thoughts to ways that we might be able to expose it. I appreciate the needs suggestion, this seems like a possible way that we can give that visibility./n"
    },
    {
        "title": "Github Actions Workflow metadata",
        "url": "https://github.com//orgs/community/discussions/4188",
        "upvotes": "551",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 6,
        "replies": 1,
        "comments": 2,
        "body": "The current Actions context metadata contains the following field:/nAddtional fields are welcomed as well: I would like to add or change the text show in the workflow run, for example here or add additional info on top of the workflow name./nChiming in with one more use-case: @paritytech needs the workflow_path for https://github.com/paritytech/pr-custom-review in order to enforce that the action is created from a workflow in a specific path. This enforcement helps in securing the workflow's code against deletions or other changes which could modify it without approval from its owners. Further explanation is given in paritytech/pr-custom-review#69./n"
    },
    {
        "title": "Adding symbols to nuget package",
        "url": "https://github.com//orgs/community/discussions/15767",
        "upvotes": "485",
        "tags": [
            "Actions",
            "Packages",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Is it possible to add symbols to nuget packages hosted on GitHub packages in any way or is this not supported yet?/n"
    },
    {
        "title": "GitHub package repository settings exposed to API",
        "url": "https://github.com//orgs/community/discussions/29643",
        "upvotes": "477",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 2,
        "body": "Ever since new package repositories do not have Inherit access from source repository set by default, we are in need to set this value to true automatically whenever we create a new package repository. However, we can not find a way to do this through api.github.com./n+1/n+1/n"
    },
    {
        "title": "Add Runs-on and container image support to Defaults",
        "url": "https://github.com//orgs/community/discussions/17186",
        "upvotes": "415",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "In a workflow with many jobs, instead of having to add a runs-on line for each/nThat would be a cool feature/n"
    },
    {
        "title": "GitHub Actions: how to tell if a release is \"set as the latest release\" in a published action?",
        "url": "https://github.com//orgs/community/discussions/56186",
        "upvotes": "362",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Question/n"
    },
    {
        "title": "GitHub Actions If contains function not working with env.VARIABLE",
        "url": "https://github.com//orgs/community/discussions/26516",
        "upvotes": "338",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 1,
        "replies": 0,
        "comments": 2,
        "body": "I have setup an environment variable using:/nI had to remove the ${{}}, this works:/nYeah, you are right. According to this document - When you use expressions in an if conditional, you do not need to use the expression syntax (${{ }}) because GitHub automatically evaluates the if conditional as an expression./n"
    },
    {
        "title": "inputs context not working for concurrency group",
        "url": "https://github.com//orgs/community/discussions/35341",
        "upvotes": "289",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 6,
        "replies": 12,
        "comments": 4,
        "body": "When run the below workflow throws The workflow is not valid. .github/workflows/run.yml (Line: 14, Col: 10): Unexpected type of value '', expected type: String. for the below workflow.\nAny ideas?/nHey @dkirrane!\nThe concurrency expression can only use the github context./n@dkirrane inputs will work, if you will use concurrency inside of jobs block:/nThe inputs object not being available but the github.event.inputs one is, absolutely classic GitHub \ud83e\udd26\ud83e\udd26\ud83e\udd26/nSeems to be working now with inputs/n"
    },
    {
        "title": "How to cancel a job from a step?",
        "url": "https://github.com//orgs/community/discussions/67407",
        "upvotes": "282",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Question/n"
    },
    {
        "title": "Avoid creating another deployment when environment is referenced in a workflow run triggered \"on deployment\"",
        "url": "https://github.com//orgs/community/discussions/56443",
        "upvotes": "261",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 4,
        "replies": 0,
        "comments": 1,
        "body": "Product Feedback/nTo add to this, there should be a way to disable automatic Deployment object creation using the environment field for other reasons as well, not only when the trigger is deployment./n"
    },
    {
        "title": "Building .vdproj files using GitHub Actions",
        "url": "https://github.com//orgs/community/discussions/49560",
        "upvotes": "258",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "Question/n"
    },
    {
        "title": "Better overflow/wraping needed for long workflow names",
        "url": "https://github.com//orgs/community/discussions/72693",
        "upvotes": "236",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "Product Feedback/nAt a minimum can we please have tooltips containing the entire job name./n"
    },
    {
        "title": "Give Self-Hosted Runners a maintenance mode",
        "url": "https://github.com//orgs/community/discussions/53433",
        "upvotes": "233",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Product Feedback/n"
    },
    {
        "title": "Conan as a package ecosystem for dependencies",
        "url": "https://github.com//orgs/community/discussions/26383",
        "upvotes": "228",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 3,
        "body": "Hi/nHi @Kicer86 \u2013 We have it on our radar, but unfortunately do not have a date to share yet.  We\u2019ll update the roadmap when we have landed on a date: https://github.com/github/roadmap/nAny update on this, since this was anwered 3 years ago? It surprised me that the largely advertised Github Packages does not have support for something as basic as Conan. Apparently even vcpkg isn't support; and that is a Microsoft product./nI would also like to know the status of this :)/n"
    },
    {
        "title": "How to share shell profile between steps? (or: how to use nvm/rvm in steps?)",
        "url": "https://github.com//orgs/community/discussions/25061",
        "upvotes": "216",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 3,
        "body": "I have a workflow consisting of two jobs:\u00a0 frontend (nodejs) & backend (ruby); that I\u2019m attempting to migrate from TravisCI./nYou were close: You can actually just add shell: bash -l {0} (the -l was missing from yours) for steps where you need to source the bash_profile. See:\u00a0https://www.gnu.org/software/bash/manual/html_node/Bash-Startup-Files.html,\u00a0/nTo have a working sample snippet. Adding a local Composer\u2019s bin to the path. The Drupal step would fail without shell: bash -l {0}./nPutting this here as it's an issue I ran into. If you don't also set -e the job status may not update correctly (this may only happen if the script is run in a composite action though)./n"
    },
    {
        "title": "[Feature Request] Get source repo of reusable workflow easily",
        "url": "https://github.com//orgs/community/discussions/38659",
        "upvotes": "212",
        "tags": [
            "Enhancement",
            "Actions"
        ],
        "rections": 1,
        "replies": 0,
        "comments": 4,
        "body": "In OIDC, there is a property: job_workflow_repo_ref which links back to the current reusable workflow./nHi there @joemarshall and welcome to our community! Thank you for this feature request!/nGitHub finally added github.workflow_ref/github.workflow_sha/n+1 this! It's been really inconvenient to require OIDC token perms just to figure out the reusable workflow's name and ref/nAnd now with the new restriction introduced by https://github.blog/changelog/2023-06-15-github-actions-securing-openid-connect-oidc-token-permissions-in-reusable-workflows//n"
    },
    {
        "title": "Check which event triggered the workflow",
        "url": "https://github.com//orgs/community/discussions/26784",
        "upvotes": "210",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 3,
        "body": "Well, I\u2019d like to know if it\u2019s possible to know which event triggered the workflow. I mean, my yaml file is like this:/nYou can check the event type like this:/nthat\u2019s exactly what i was looking for, thanks!/n/n"
    },
    {
        "title": "Trigger action on.schedule only if there are changes to the branch",
        "url": "https://github.com//orgs/community/discussions/27128",
        "upvotes": "202",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 10,
        "replies": 2,
        "comments": 3,
        "body": "I would like to run an Action once every 24 hours, only if commits have been made to the target branch in the last 24 hours (or since the last run). This is for calculating code coverage on a large repo, which takes about 20-30 mins./nHey\u00a0@nheath99, this is not a functionary that is supported out of the box. I suggest adding in an additional piece to the action that uses Python or another language to check the git contents to see if there\u2019s a commit in the last 24 hours.\u00a0/nHi\u00a0@nheath99\u00a0,/nyou can do something like this:/n"
    },
    {
        "title": "Upload images in the workflow summary",
        "url": "https://github.com//orgs/community/discussions/58569",
        "upvotes": "178",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Question/n"
    },
    {
        "title": "Arm-based hosted runners are coming to GitHub Actions! \ud83d\udea2",
        "url": "https://github.com//orgs/community/discussions/73040",
        "upvotes": "173",
        "tags": [
            "\ud83d\ude80Shipped",
            "Actions",
            "Universe2023"
        ],
        "rections": 11,
        "replies": 2,
        "comments": 5,
        "body": "/nI tried signing up for the private beta waitlist last night and this morning, but the form is failing validation on submit./nHi @mpriscella , Thanks for reporting this and sorry about the hassle. I have raised this to my team internally and will update you with the next steps soon./nHi @mpriscella , this was an issue with validation on the backend that we've already fixed. Even when the form errored out - it might've still recorded your submission. But we want to ensure you're on the waitlist. Could you please fill in the form again and let us know if it works now? Thanks!/nFrom the waitlist pages/nI joined the waitlist a while ago, and haven't heard anything./n"
    },
    {
        "title": "Maximum length for the comment body in issues and PR",
        "url": "https://github.com//orgs/community/discussions/27190",
        "upvotes": "155",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 7,
        "replies": 2,
        "comments": 7,
        "body": "I would like to know where I can find the maximum length of fields in the API. I am mostly interested with the maximum length for the body parameter for the issues.createComment API. These maximum length are not supplied in this documentation and the error message does not advertise it either.\nThanks!/nHey there @vdesjardins \ud83d\udc4b/nThanks a lot for the kind welcome @nethgato :slight_smile:/nVery welcome @vdesjardins and thank you for clarifying that you\u2019re working with Actions, and not the API./nI found the culprit. In fact the argument too long error was caused by an environment variable passed to the github-script. The step was not even executing. I replaced it with a generated file in the previous step and just reading it back in the github-script before processing./nI\u2019m having the same issue. How did you read the generated file back into the github-script?/nLike this:/nI just ran some tests (March 31st, 2024) to see if the limit changed. I used github.rest.issues.createComment with the GitHub action actions/github-script@v7 to create the comment. Creating a comment with a body of 2^17 x characters works, but creating one of 2^18 x characters fails with the message/n"
    },
    {
        "title": "Github workflow not triggered when release is edited",
        "url": "https://github.com//orgs/community/discussions/53137",
        "upvotes": "154",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Bug/n"
    },
    {
        "title": "Prevent cleaning up specific orphan process during \"Complete job\" step",
        "url": "https://github.com//orgs/community/discussions/58311",
        "upvotes": "147",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 2,
        "comments": 2,
        "body": "Question/nI am also facing the same issue. When I start the pm2 process, it kills those in the complete job section.\nWhere I can make changes to stop killing these orphan process?\n/n"
    },
    {
        "title": "Reusable Workflows - how to reference own called repo from within a reusable workflow?",
        "url": "https://github.com//orgs/community/discussions/18602",
        "upvotes": "145",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 4,
        "replies": 3,
        "comments": 2,
        "body": "Related to #18601, is there any way to reference the repo of a reusable workflow within the reusable workflow steps itself, via something like the env or github contexts?/nYou can use needs. Have a look at this example: https://github.com/MathiasReker/CI-CD/blob/develop/.github/workflows/ci-cd.yml/n@HariSekhon Currently we don't have context that has reusable workflow details (like called repo / called workflow path etc)./n"
    },
    {
        "title": "Use Docker layer caching with docker-compose build (not just docker)",
        "url": "https://github.com//orgs/community/discussions/25728",
        "upvotes": "1288",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 16,
        "replies": 1,
        "comments": 6,
        "body": "Hi,/nAdded a basic PoC here where I build with docker-build-push action and then use docker-compose up with --no-build/nok, found the solution. I realized that maybe the docker-build-and-push action didn\u2019t actually do anything with the generated image, i.e. it was not made available to the runner / docker. Turns out this is true and even documented:/nNote that there\u2019s a bug that makes the cache grow and grow if you do it this way. There\u2019s a fix here./nI struggled to get this working - docker-compose would not pick up on the cache content, in spite of following the suggestions around using the load parameter etc./nThis is not working \u2026 I have build args in docker-compose and it is not providing on the builds\u2026 Also, the logs doesn\u2019t show any indication\u2026/nAwesome! It works. Just don\u2019t keep in mind that the tag in Action workflow and specified image name in the docker-compose.yml have to be the same. Otherwise, it rebuilds the image instead of using cache./n"
    },
    {
        "title": "Command/Control + F for find in Github Actions should highlight the search term",
        "url": "https://github.com//orgs/community/discussions/110910",
        "upvotes": "1078",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Product Feedback/n"
    },
    {
        "title": "ANSI color output in webview?!?",
        "url": "https://github.com//orgs/community/discussions/26944",
        "upvotes": "551",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 2,
        "replies": 0,
        "comments": 9,
        "body": "Hello,/nYes, we support ANSI colors./nHi\u00a0@jens-maus\u00a0,/n@weide-zhou wrote:/n@mscoutermarsh wrote:\nYes, we support ANSI colors./nOk, after some more investigation I could solve the problem myself. I simply had to add the command-line option \u2013colors when executing mocha (see\u00a0jens-maus/occu-test@0a57c8f)./nHi\u00a0@jens-maus\u00a0,/nFYI, if you\u2019re using chalk, you may also set the environment variable FORCE_COLOR to 0 for no color, 1 for more color, 2 for even more color, or 3 for the most colorful of colors:/nThere does indeed seem to be a problem with GitHub Actions not working as one would expect with/nHi\u00a0@perlun\u00a0,/n"
    },
    {
        "title": "Git Lfs Bandwidth didnt reset",
        "url": "https://github.com//orgs/community/discussions/38948",
        "upvotes": "485",
        "tags": [
            "Actions"
        ],
        "rections": 3,
        "replies": 1,
        "comments": 5,
        "body": "My GitHub lfs bandwidth exceed the free 1GB, my account says i have to wait  5 days to reset my quota. I have been waited 6 days and nothing has been reset, but now it says i have to wait 30 days to reset my quota./nmaybe Support can help/nI also meet this issue./nOh no, I am still at 0 days, I hope I dont run into this issue ://nSame issue! Has anyone been able to find a solution?/nI did the following and it fixed the issue:/n"
    },
    {
        "title": "how to trigger a workflow in another repository using GitHub Actions",
        "url": "https://github.com//orgs/community/discussions/43427",
        "upvotes": "477",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "Hello everyone,  new to the GitHub community./nPuedes configurar tus flujos de trabajo para que se ejecuten cuando ocurre una actividad espec\u00edfica en GitHub, en un horario programado o cuando se produce un evento fuera de GitHub./n"
    },
    {
        "title": "Set env variables for scheduled workflow based on cron expression",
        "url": "https://github.com//orgs/community/discussions/25928",
        "upvotes": "415",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 13,
        "replies": 2,
        "comments": 2,
        "body": "I want to reuse my workflow jobs scheduling them at various times of the day but with different input\nBasically something like this/nHi @andrzej-kodify,/nGreat, that\u2019s the workaround I\u2019ve been after. Thanks a lot :slight_smile:/n"
    },
    {
        "title": "Feature Request: Job Context field for Full Job Matrix Name",
        "url": "https://github.com//orgs/community/discussions/16614",
        "upvotes": "362",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 3,
        "replies": 0,
        "comments": 0,
        "body": "It would be really useful to have a single field in the job context that matches the fully job name when a job is run with a strategy that uses a matrix./n"
    },
    {
        "title": "Reusable workflows: Unable to access correct vars context in job that references environment",
        "url": "https://github.com//orgs/community/discussions/110873",
        "upvotes": "338",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 5,
        "replies": 0,
        "comments": 0,
        "body": "Bug/n"
    },
    {
        "title": "Github workflow status badges - custom left-hand-side text!",
        "url": "https://github.com//orgs/community/discussions/63964",
        "upvotes": "289",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 1,
        "replies": 1,
        "comments": 1,
        "body": "Product Feedback/nDid this ticket get any attention? Is sad to see people running out to 3rd parties just for not having a desired label/n"
    },
    {
        "title": "Feature Request: .actionsignore file instead of redundant paths-ignore twice in every workflow yaml - equivalent to .gitignore, .dockerignore, .gcloudignore etc.",
        "url": "https://github.com//orgs/community/discussions/18608",
        "upvotes": "282",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Feature Request to add a .actionsignore file support to GitHub Actions to not trigger GitHub Actions workflows when files matching paths in that file are changed./n"
    },
    {
        "title": "Problem reinstalling a github runner",
        "url": "https://github.com//orgs/community/discussions/53008",
        "upvotes": "261",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Question/n"
    },
    {
        "title": "How to run multiple self-hosted runners on a single host",
        "url": "https://github.com//orgs/community/discussions/26258",
        "upvotes": "258",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 80,
        "replies": 7,
        "comments": 16,
        "body": "We\u2019re using self-hosted runners in our organization and it\u2019s working fine. What I want to do now is use bigger instances and run multiple runners per host./nHi @dmerrick,/nThank you, I was able to get this working by running config.sh from different directories for each worker./nHi Dmerrick,/nHey Pradeep,/nThanks for the reply Rahul. I wanted two runners for the same repo, is it possible?/nYep it is possible, I\u2019ve tested it./nOK, thanks Rahul, I will have a look./n@ rahul-kumar-saini can you please share some examples of how to deploy multiple runners on a single host for single repository different branches./n/nIs this possible single git hub repo with multiple self hosted runner.under that repo one directory point to one runner another directory another runner.how can we do structure in entrypoint.sh if you could help./nOnce we start the github runner for same repo, same host. How do we use that in our Github Actions?\nPlease provide an example on how to specify in the \u201cruns-on\u201d/nPlease provide an example on how to specify in the \u201cruns-on\u201d/nhow many self-hosted runners we can create in same host ? any limit ?/nLots of good information here, but I feel like it hasn't really been answered./nI wanted to share a tip that might help those who want to generate 3+ runners programmatically but who don't want to have to grab new tokens. Although I hear those tokens can be shared, that might not be useful in an install script./nThere is a simple wrapper script which setup multi self-hosted GitHub action runners on single host./n"
    },
    {
        "title": "Self-Hosted Runner: \"once\" and \"timeout\" options",
        "url": "https://github.com//orgs/community/discussions/28628",
        "upvotes": "236",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "Today, the GitHub Action Runner agent only supports two modes: either you start with --ephemeral, which runs exactly one job and then removes your agent, or it runs forever picking up jobs until it is killed or removed./nWe would like these features too./n"
    },
    {
        "title": "Composite action inputs inside a shell script",
        "url": "https://github.com//orgs/community/discussions/27088",
        "upvotes": "233",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 1,
        "replies": 2,
        "comments": 3,
        "body": "Hello!\nHow can I access composite action inputs inside a shell script?/nI\u2019ve had that issue, too, unfortunately the bug report is still unresolved:/nthanks for workaround! \ud83e\udd29\nIs it safe to pass secrets in env from inputs?\nFor example:/nThe SUPER_SECRET environment variable will be available to everything called from the command(s) defined in the run parameter. In this case that\u2019s your script and anything it calls (unless the script overrides the environment variable). So it depends on your script. \ud83d\ude42/n"
    },
    {
        "title": "How do you include a file with a reusable workflow?",
        "url": "https://github.com//orgs/community/discussions/63863",
        "upvotes": "228",
        "tags": [
            "Actions",
            "General"
        ],
        "rections": 6,
        "replies": 3,
        "comments": 2,
        "body": "General/nYes, there is special handling for how myworkflow.yaml should reference script.js. When you call a reusable workflow, GitHub Actions will copy the contents of the workflow file to the current working directory. This means that the script.js file will not be available in the current working directory unless you explicitly reference it./n@kthompson What you're trying to achieve doesn't appear to be documented anywhere. Having said that, you can clone the repository containing the reusable workflow and associated files in its own step, thereby making the files available to subsequent steps in the workflow:/n"
    },
    {
        "title": "GitHub Actions Not Run on PR Generated by GitHub Actions",
        "url": "https://github.com//orgs/community/discussions/25602",
        "upvotes": "216",
        "tags": [
            "Actions"
        ],
        "rections": 2,
        "replies": 2,
        "comments": 2,
        "body": "I\u2019ve found a dozen or more posts talking about GitHub Actions not running on forks or other kinds of PRs. That\u2019s not my problem.\u00a0/nLooks like you are using the create-pull-request action I created. If you check the README there is a note about this./nThanks, Peter! Yes, using your action (forked for security). I missed that note. Good looking out.\u00a0/n"
    },
    {
        "title": "Action to add a commit to a PR",
        "url": "https://github.com//orgs/community/discussions/24945",
        "upvotes": "212",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 5,
        "comments": 3,
        "body": "Hi,/nJust tried to manually commit & push, but that fails:/nI was able to make it work, using gh:/nIt didn't work for me , here is the code I used, it fails to push to the pr with no permission error/n"
    },
    {
        "title": "Running jobs in a container and OIDC",
        "url": "https://github.com//orgs/community/discussions/33254",
        "upvotes": "210",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "Hello everyone,/nI believe the only way of doing it is to have another job to obtain OIDC creds and then seed them downstream, i.e.:/n"
    },
    {
        "title": "JavaScript Actions in Alpine containers are only supported on x64 Linux runners. Detected Linux Arm64",
        "url": "https://github.com//orgs/community/discussions/53407",
        "upvotes": "202",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Product Feedback/n"
    },
    {
        "title": "What is the \"correct\" way to validate inputs for a manually triggered workflow",
        "url": "https://github.com//orgs/community/discussions/48373",
        "upvotes": "178",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 27,
        "replies": 8,
        "comments": 3,
        "body": "Question/nChatGPT is a \ud83d\udc04\ud83d\udca9 generator./nI'm sorry that you didn't get your question answered... it seems pretty legit question, irregardless with how you are trying to find the answer..../nThere's no official recommendation for input validation yet, but common approaches include:/n"
    },
    {
        "title": "All GitHub Actions pipelines failing with \"this job failed\" message",
        "url": "https://github.com//orgs/community/discussions/53164",
        "upvotes": "173",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 20,
        "replies": 15,
        "comments": 8,
        "body": "Bug/nhi, we see the same error today with no obvious reasons. i'll keep an eye on this thread to see if others have the same issue/nSeeing this issue as well. Previously successful workflows are now showing \"this job failed\" with no further info, when re-run./nThis started happening to my jobs on several repositories starting last night, we're on the enterprise plan and way, way below the usage limit.  Is there something going on w/ runners?  I'm also seeing jobs just stuck in the \"Queued\" status./nhttps://www.githubstatus.com//nI'm getting this sometimes too, for no apparent reason, on things that previously built fine./nIs anyone with \"This job failed\" again? experiencing it now just from a single repository... Additionally, the GH status page doesn't show any major outages./nWe are experiencing this since the morning (BST time). Random actions are failing (even within the same repo) and status is \"This Job Failed\". Action runs for 0 seconds, so it probably does not run at all./nWe have also started to get this screen on existing workflows.  I've noticed a pattern that we get the empty \"This Job Failed\" message when the job fails due to exceeding the maximum execution time.  In the past the web showed those details of why it failed.  Using the gh cli you can still get to those details but it would be great if it showed up in the web again./n"
    },
    {
        "title": "How to get commit message on pull_request workflow?",
        "url": "https://github.com//orgs/community/discussions/28474",
        "upvotes": "155",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 28,
        "replies": 5,
        "comments": 1,
        "body": "Hi there,/nSo I would be thankful if anyone knows how I can solve this./n"
    },
    {
        "title": "Explanation for GitHub Workflow run statuses",
        "url": "https://github.com//orgs/community/discussions/70540",
        "upvotes": "154",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 1,
        "replies": 0,
        "comments": 1,
        "body": "Question/nI'd like to know the lifecycle for the states as well. The official docs just mention the states without specifying what they signify. For e.g. what's the difference between requested, waiting, pending and queued?\nSome clarification would really help/n"
    },
    {
        "title": "workflow with concurrency",
        "url": "https://github.com//orgs/community/discussions/33142",
        "upvotes": "147",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 1,
        "replies": 3,
        "comments": 3,
        "body": "I have  6 workflows where requirement is to run in sequential fashion, no  dependency . however at given time only one workflow out of\n6 should be running./nIMHO it is currently not possible. According to docs, any pending jobs/workflows in the same concurrency group will get canceled.\nI'm facing the same issue because I want to limit my workflows (started with workflow_dispatch) to run sequentially, one at a time, and as far as I've found, it is impossible.\nMaybe some suggestion to GitHub to implement such a feature to limit running instances of workflow without canceling any pending runs, keep them pending until the currently running one finishes./nconcurrency is for allowing your jobs to shortcut when, for example, you have lots of pushes that trigger workflow from a branch, but only care about the latest results, not the one in the middle... (say your workflow takes 10 minutes, and you push every 2 mins a set of small changes... without concurrency, you'll have a new set of actions triggered for each push. With concurrency, you can abort already running and/or queued jobs that would do the same thing on obsolete refs to not waste time on them, and getting to the final run you need much faster)./n"
    },
    {
        "title": "Check details missing when \"All checks have passed\"",
        "url": "https://github.com//orgs/community/discussions/69844",
        "upvotes": "145",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 0,
        "replies": 2,
        "comments": 3,
        "body": "Bug/nAlso having this issue./nThis is a very strange change. Is there any reason why this is desirable?/nThere is also a regression where the popover is misplaced and sticks out of the window since today, so I suspect someone deployed style changes recently that break these popovers./n"
    },
    {
        "title": "If statement in actions elongates \"Setup job\"",
        "url": "https://github.com//orgs/community/discussions/59530",
        "upvotes": "1288",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 2,
        "replies": 0,
        "comments": 1,
        "body": "Bug/nAny info on this?/n"
    },
    {
        "title": "\"Waiting for a runner to pick up this job\" When three jobs start simultaneously. Larger runner group supports 5 jobs..",
        "url": "https://github.com//orgs/community/discussions/38221",
        "upvotes": "1078",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 2,
        "body": "2022-11-03T17:34:39.3658615Z Requested labels:\n2022-11-03T17:34:39.3658691Z Job defined at:\n2022-11-03T17:34:39.3658715Z Waiting for a runner to pick up this job...\n2022-11-03T17:37:02.2883733Z Job is about to start running on the runner:/nHi there @bhjelstrom and welcome to our community! Thank you for reporting this \ud83d\ude42/nWe're seeing the same issue. Is Github able to reproduce this or is there any info we can provide?/n"
    },
    {
        "title": "Github Action - Prompting inputs",
        "url": "https://github.com//orgs/community/discussions/19260",
        "upvotes": "551",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 2,
        "replies": 3,
        "comments": 1,
        "body": "Hello ! I developed an action that requires 2FA Auth (EDIT : Not really 2FA Auth actually, more like a code that is sent to an email).\nI want to be able to prompt an input during the execution of my action (because right now my action simply dies whenever I'm required to provide the code I receive, cauz' I can't input it).\nAnd from what I've researched, it doesn't seem to be an available feature in the current state of Github Actions.\nCould this be implemented ?/nYou can probably use something like \"oathtool\", put the 2FA private key in a github secret and generate the 2fa token inside the action./n"
    },
    {
        "title": "How concurrency works with tasks queue",
        "url": "https://github.com//orgs/community/discussions/63573",
        "upvotes": "485",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Question/n"
    },
    {
        "title": "Use GitHub Packages as Conan Remote",
        "url": "https://github.com//orgs/community/discussions/5026",
        "upvotes": "477",
        "tags": [
            "Actions",
            "Packages",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "We are currently evaluating several Git \"service providers\" to host our company's code base.\nAs we mostly develop embedded software in C / C++, we wish to use Conan as a package/dependency manager./n"
    },
    {
        "title": "Expressions in Docker URI",
        "url": "https://github.com//orgs/community/discussions/26382",
        "upvotes": "415",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 8,
        "body": "I\u2019m trying to pass an ${{ expression }} inside a Docker URI in my workflow, as such:/nI was able to run it using:/nI had this exact problem without finding a solution. I will try the workaround but I would still like to know if this is a deliberate design decision, and the reasons in that case./nActually my use case is the proposed workaround from the OP: having the action take a parameter which is the dockerhub image name./nWe currently do not support expressions in the uses tag in order to to know which repos we need to pull down as we are processing the job. \u00a0We also have a feature that limits the usage of third party actions and if actions are defined as an expression we would not be able to block that before the job starts on the runner./nHello\u00a0@chrispat\u00a0, thanks for the clarification./nLack of support for expressions in the \u201cuses\u201d tag imposes quite an inconvenience for docker-based actions.\u00a0 Would it be possible to specify a path to a Dockerfile using an expression in the with stanza?/nI also would like to be able to use the/nI created this action as a workaround for this use case. I\u2019m using it since some time successfully./n"
    },
    {
        "title": "Overwrite runs-on defined in workflow_call",
        "url": "https://github.com//orgs/community/discussions/26801",
        "upvotes": "362",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 3,
        "body": "I\u2019m creating a general workflow_call to create easy to use templates that is supposed to be used by both companies and open-source.\nSome users will use self hosted servers and others will use \u201cubuntu-latest\u201d/nI didn\u2019t think about this yet, it seems you can use expression syntax in runs-on with your input./nEasier solution then I hoped for, I should have thought of it as well.\nThanks for the quick reply and the great example!/nThanks for jumping in with that speedy reply, @ChristopherHX! Glad to hear this helped, @NissesSenap :slight_smile:/n"
    },
    {
        "title": "Merge queue feedback: failed status check don't remove pr from queue early",
        "url": "https://github.com//orgs/community/discussions/35083",
        "upvotes": "338",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 5,
        "replies": 0,
        "comments": 0,
        "body": "Hi,/n"
    },
    {
        "title": "Deploy to remote server using SSH fails on \"Host key verification failed\"",
        "url": "https://github.com//orgs/community/discussions/26564",
        "upvotes": "289",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 2,
        "comments": 9,
        "body": "I\u2019ve Generated new SSH keys (private & public), stored the private SSH key as a secret and added the public one to .ssh/authorized_keys on my server./nThat message means that the connection failed because your server could not be authenticated. You should write the host key (from /etc/ssh/ssh_host_KEYTYPE_key.pub) to the ~/.ssh/known_hosts file on the runner together with the host name, e.g.:/nThank you!/nThat error probably means that your server doesn\u2019t accept the configured private key for the target user. Check that the matching public key is included in the authorized_keys file of that user./nOk, i will try to with your approach./nOk, so I\u2019ve changed my approach,/nI solved it!!!\nApparently keys were protected with passphrase \ud83e\udd2f./nCould you please provide an example with rsync? thanks in advance/nWhat are you trying to do with rsync? There shouldn\u2019t be any difference, if SSH works you can use rsync over SSH without any additional steps./nrsync works with ssh, like @airtower-luna said, all you need is a working ssh\u2026/n"
    },
    {
        "title": "[Github Actions] Contexts and steps if conditionals are unusable with incomplete docs",
        "url": "https://github.com//orgs/community/discussions/26119",
        "upvotes": "282",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 7,
        "body": "When I echo the context for steps as mentioned in the docs i get {} and job just has two fields.\u00a0/nHey\u00a0@geekodour,/nJust to be even more clear about my question, I think job.steps.\\<step_id\\>.status does not exist yet. as job context is just/n@andreagriffiths11 any update on this? \u00a0/nTry/nIt doesn\u2019t work either way because job.steps.<step id>.status is null. job is the following simple object:/nSince I\u2019m finding many parts of the docs are still more like a whishlist, I\u2019m starting this repo, that tracks progress of the missing features:\u00a0https://github.com/meeDamian/github-actions-bugs/actions, I\u2019ll be adding one feature check, per scheduled daily workflow file.\u00a0 Feel free to contribute, or peek-in to see if it\u2019s already implemented :)./nThat is a bug in the docs that I have opened a PR for.\u00a0 You can\u2019t compare the status of an individual step, you can just check the status of the entire job to that point.\u00a0 The built in status functions in that doc compare against the overall job status./n"
    },
    {
        "title": "Actions and Packages - Check in  \ud83c\udd95",
        "url": "https://github.com//orgs/community/discussions/36130",
        "upvotes": "261",
        "tags": [
            "Actions",
            "ProductFeedback",
            "CommunityCheck-In"
        ],
        "rections": 22,
        "replies": 1,
        "comments": 6,
        "body": "Hello everyone and hope you\u2019re having a great October so far. We\u2019re back with the latest from the Actions and Packages world. \ud83c\udf0e/nAll is well/nAmazing! Thanks for the update!/nThanks for the update!/nThis needs to be resolved, it's a blocker for us./n@Akash1134 could you tell me the rate limits for public packages (container images) with Github Packages?\nThe docs suggest that storage and egress/data transfer are free for public packages, but I figure there must be a rate limit or something. Thank you!/nAre there any plans to enable runners to be shared account-wide rather than having to set up or migrate to orgs?/n"
    },
    {
        "title": "GHA cache is so slow when caching small objects",
        "url": "https://github.com//orgs/community/discussions/55049",
        "upvotes": "258",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "Question/nTo expand a bit on the above:/n"
    },
    {
        "title": "Has github given up on actions?",
        "url": "https://github.com//orgs/community/discussions/67831",
        "upvotes": "236",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 1,
        "replies": 0,
        "comments": 0,
        "body": "Product Feedback/n"
    },
    {
        "title": "How to reuse docker build on further steps/jobs without pushing to registry?",
        "url": "https://github.com//orgs/community/discussions/26723",
        "upvotes": "233",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 1,
        "comments": 6,
        "body": "I would l like to be able to reuse the Docker image that I built in a step in the upcoming ones. I want to avoid pushing that image to a registry. I have not been able to find out how to do that./nI would l like to be able to reuse the Docker image that I built in a step in the upcoming ones./nHi @airtower-luna,/nMost of those images look like they\u2019re the ones cached on Actions runners. Without more details about your workflow (full job and its output) I don\u2019t think it\u2019s possible to say what may be going wrong, I can only say it works in my workflows. I use Docker commands directly though, without docker/setup-buildx-action./nPlease let me know what additional details would you like to know!. What logs do you want to see?. I  list the images on as you can see the fresh new image is not there. The docker part of the workflow Is all there. You mentioned that you are not using BuildX. I can need to use buildX in order to be able to pass a secret. Without Adding BuildX that is not possible./nI refactored my workflow to use docker/build-push-action@v2 and added the actions/cache@v2 too. I am still not able to see myimage:latest in the Lint and Test step./nI managed to save my docker image, by saving it as an artifact :-). This will allow me to use it in the following steps :-)./n"
    },
    {
        "title": "Automatically support vN, vN.M references",
        "url": "https://github.com//orgs/community/discussions/9847",
        "upvotes": "228",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 15,
        "replies": 0,
        "comments": 3,
        "body": "Currently it appears that in order to support, for example, a reference to me/myaction@v1, I have to create a tag for v1 in my repository./nRefs:/nThanks for the feedback.  I agree that \"sliding tags\" is not particularly ergonomic.  The team has a few things on their plate at the moment, but this is something that we'll take a look at in the not-too-distant future./nI think while tag parsing is certainly a feasible solution it also involves pulling and parsing the entire list of remote refs, which isn't always desirable./n"
    },
    {
        "title": "Allow Secrets to be overridden when using Inherit with reusable workflows",
        "url": "https://github.com//orgs/community/discussions/55437",
        "upvotes": "216",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "Product Feedback/nI'd also love to be able to include all of the inherited secrets, and just override one or two others./n"
    },
    {
        "title": "Disable environment protection wait timer in workflow when not needed",
        "url": "https://github.com//orgs/community/discussions/60064",
        "upvotes": "212",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 1,
        "replies": 3,
        "comments": 1,
        "body": "Question/n"
    },
    {
        "title": "Storage for Actions and Packages",
        "url": "https://github.com//orgs/community/discussions/62496",
        "upvotes": "210",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 7,
        "replies": 0,
        "comments": 2,
        "body": "Question/nHi @andre-lx ! The best place to go for answers to account-specific questions like this one is opening a ticket on our Support page. Best of luck \u2764\ufe0f/nI've experienced this also on an account that's only used around 40mins of actions run minutes, across 5-6 runs @ 40Mb of artifacts per run.  I've opened a support ticket also and received no response.  Wierdly it seems to be ticking up, yesterday it was 3.24GB and today it's 3.3GB./n"
    },
    {
        "title": "'Microsoft.NETCore.App', version '3.1.0' Not found",
        "url": "https://github.com//orgs/community/discussions/40475",
        "upvotes": "202",
        "tags": [
            "Actions",
            "Issues"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 2,
        "body": "Bug/nHi there @cthredgold-quativa and welcome to our community! Thank you for asking a great question \ud83d\ude42\nWhile you are waiting for a reply to your question, here are a few things you can do:/nHi,/n"
    },
    {
        "title": "Merge Queues lack PR info",
        "url": "https://github.com//orgs/community/discussions/41941",
        "upvotes": "178",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Product Feedback/n"
    },
    {
        "title": "workflow_dispatch trigger does not display branch name and does not appear in pull request checks",
        "url": "https://github.com//orgs/community/discussions/42836",
        "upvotes": "173",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Product Feedback/n"
    },
    {
        "title": "Actions queued, degradation of service",
        "url": "https://github.com//orgs/community/discussions/49038",
        "upvotes": "155",
        "tags": [
            "Actions"
        ],
        "rections": 5,
        "replies": 2,
        "comments": 3,
        "body": "Question/nKnown issue, track it https://www.githubstatus.com/incidents/qfby3shb6r3w/nHi, I'm bumping this. I have a Run in \"Queued\" since 3 days. How can I resolve this ?/nHi @acuD1 , Sorry that you're having issues. I'd recommend that you re-run the Actions that were queued. The incident was resolved on Mar 03, 2023 - 21:14 UTC. Please note that you are not being billed for these runs and new runs are not affected by the incident./n"
    },
    {
        "title": "GitHub Actions \u2013 Actions Runner General availability",
        "url": "https://github.com//orgs/community/discussions/59735",
        "upvotes": "154",
        "tags": [
            "\ud83d\ude80Shipped",
            "Actions",
            "ProductFeedback"
        ],
        "rections": 5,
        "replies": 3,
        "comments": 2,
        "body": "Auto-scaling self-hosted runners using the Actions runner controller and runner scale sets is now generally available./nI just spotted this here - but there's no related announcement on the ARC repo, only an unmerged issue to move the docs out of preview. Is there any more info? Will we be seeing a new version above 0.4.0 soon with changes?/n"
    },
    {
        "title": "steps output",
        "url": "https://github.com//orgs/community/discussions/26108",
        "upvotes": "147",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "I run a step that sets an output, but the steps object is empty in the next step./nAdd id field to you step, see\u00a0https://github.com/rusnasonov/vscode-hugo/blob/master/.github/workflows/build.yml/n"
    },
    {
        "title": "Github ignoring npm tags now?",
        "url": "https://github.com//orgs/community/discussions/27495",
        "upvotes": "145",
        "tags": [
            "Packages",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 3,
        "body": "An integration pipeline I used would tag a canary release every so often npm publish --tag canary for example. However starting yesterday it seems github \"tags\" all packages as latest and the --tag flag is ignored?/nI am experiencing the exact same issue at our organization. Every tags is always tagged as latest, other tags such as beta or next are not applied at all/nIndeed, I've seen the same behavior. I noticed the announcement of the v2 of the npm registry perhaps this is related, I'm not sure./nSame for our organization. Even caused a small disruption when an incorrect version was used in production./n"
    },
    {
        "title": "Create a check run, details_url is not being set",
        "url": "https://github.com//orgs/community/discussions/26757",
        "upvotes": "1288",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 1,
        "replies": 0,
        "comments": 8,
        "body": "Hello all!/n\ud83d\udc4b Hey @bkwhite, that repository is private so I don\u2019t have access to it./nHello! Sorry that repo got moved to an org./nWe don\u2019t support showing a details_url for check runs created with the Actions GITHUB_TOKEN./nThanks to everyone helping here!/nIt would need to be from a GitHub App, as the Checks API only works with Apps./nHi @joshmgross thanks for answering this question. I just ran into this too./n\ud83d\udc4b We have some documentation here: Getting started with the Checks API - GitHub Docs/nI also ran into this limitation, when trying to create a secure way of receiving pull requests, following this:\nhttps://securitylab.github.com/research/github-actions-preventing-pwn-requests//n"
    },
    {
        "title": "Copying test file from docker container to GitHub repository",
        "url": "https://github.com//orgs/community/discussions/26791",
        "upvotes": "1078",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 5,
        "body": "Hi. Apologies if this has already been answered. I have a github action that is setup to run a selenium test in a docker container. The test creates a TestResult.html file on the docker container. I am binding a volume that contains the test dll to \u201c/test\u201d folder on the docker container. The TestResult.html is also created in the \u201c/test\u201d folder on the docker container. When I execute this manually from my local machine, the volume that contains the test dll and the \u201c/test\u201d folder are in sync and the TestResult.html file is saved in the folder on my local machine automatically. However, when I run this through GitHub actions, the test runs successully but nothing is saved in the synced volume on GitHub. Is there a way to copy this result file from the docker container into my github repository? I tried adding the step \u201cdocker cp MyContainer:Path/to/file ${{ github.workspace }}/Artifacts\u201d in my action.yml where Artifacts is a folder I have created in my GitHub repository. The step shows as passed but no file is saved in the Artifacts folder.\u00a0 Thanks./nThe build results on the VM provided by Actions are separate from your repository, unlike on your local file system. The repository is checked out, the workflow runs, and then the VM (including its files) is discarded./n@tdalvi\u00a0,/n@tdalvi\u00a0,/n@brightran\u00a0@airtower-luna Thank you both for the suggestions. I managed to solve this issue last Sunday. Here is what I did. After the test run was complete and the test file created on the container, I ran the command \u201cdocker cp name of container:/path/to/testfile/TestResults.html .\u201d.\u00a0 In case it is not obvious, there is a \u201c.\u201d at the end of that statement. This copied my test file from the container to the location \u201c/home/runner/work/myrepo/myrepo\u201d. Then, in the next step I used the upload artifact as @airtower-luna suggested. For the \u201cPath\u201d, I entered \u201c./TestResults.html\u201d. The file was uploaded as an artifact./n@tdalvi I am doing a similar functionality but running into issues with generating the test file in docker when I run it from GitHub Actions. It works in local and html gets added to test reports folder. How can I make sure I can generate the report and use volumes to copy to the local folder?/n"
    },
    {
        "title": "Clarify what concurrency really means and its syntax",
        "url": "https://github.com//orgs/community/discussions/25782",
        "upvotes": "551",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 3,
        "body": "Checking the documents on concurrency, I couldn\u2019t quite understand how to apply them to specific use cases. Suppose that we have three workflows, A, B and C. B and C take a long time, A is fast, but it\u2019s quite convenient to run them at the same time, that is, concurrently.\nHowever, I want B to stop if A fails, and also C to stop if B fails. So how can I do this?\nMy hunch would be to have B belonging to two concurrency groups, and then use cancel-in-progress (which I understand does not prevent them running at the same time). But alas, there does not seem to be a syntax that allows a workflow to belong to two groups. Is that the case? Is there any workaround?/nBasically, if you want jobs to run in parallel, don\u2019t use the concurrency setting. It\u2019s for limiting simultaneous runs from different events./nYou can use the API to cancel jobs, so you could use an extra step that runs on failure() to have it shoot other things./nGood point, I should\u2019ve written that there\u2019s nothing built into the workflow syntax for that purpose. API works. \ud83d\ude42/n"
    },
    {
        "title": "Combining on: push with on: schedule",
        "url": "https://github.com//orgs/community/discussions/25806",
        "upvotes": "485",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 3,
        "body": "Is it possible to have a workflow that runs both on push and on schedule?/nYou can solve it with/nJust reminder, the shortest interval you can run scheduled workflows is once every 5 minutes./nI was so close! Thank you/n"
    },
    {
        "title": "on pull_request labeled",
        "url": "https://github.com//orgs/community/discussions/25819",
        "upvotes": "477",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 2,
        "body": "We can tell an action to run when a label is added (or removed), but I can\u2019t seem to narrow the action to _which_ label was added./nHi\u00a0@dudo,/nSeems like you might be on the team - any plans on adding this functionality? Your solution is very similar to the original \u201cfilter\u201d solution, but more robust label support would be pretty powerful./n"
    },
    {
        "title": "unknown blob error when i'm trying to push image to Github Package Registry by Actions",
        "url": "https://github.com//orgs/community/discussions/25822",
        "upvotes": "415",
        "tags": [
            "Packages"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 8,
        "body": "Hello experts!/nI tried example by\u00a0Chris Patterson./nI think it might be an issue with Package Registry. I\u2019m seeing the same thing. I reported to GitHub Support, and they seemed to confirm an issue on their end escalated to engineering./nI have exactly the same issue with Github Package Repository than\u00a0@collinbarrett while pushing, only \u201cdocker-base-layer\u201d is updated! So it seems that this issue is still not fixed/nI have also met this issue. But after I run the task again, everything works fine. Seems it\u2019s a random issue./nToday i received an email\u00a0\u201cAnnouncing general availability for GitHub Actions and GitHub Package Registry\u201d./nYeah\u00a0@webmakaka the workflows runs! But, if you get back from the Github Package Registry your just built docker image with the tag latest, which is the one you use to build, do you get the last change? I don\u2019t, it seems that it is the tag docker-base-layer which gets the changes/nForget my last message! It seems that it is working now, at least when I get back the latest image on my local machine, the image got my latest code change. So, it seems that it is my CD action which doesn\u2019t work/nHi\u00a0@laurentkempe l/n"
    },
    {
        "title": "How to build project targeting Net35 with GitHub Actions",
        "url": "https://github.com//orgs/community/discussions/25825",
        "upvotes": "362",
        "tags": [],
        "rections": 2,
        "replies": 1,
        "comments": 1,
        "body": "I have a project that targets .NET Framework 3.5. How do I build it in a GitHub Actions workflow?\nThere is an action for setting up a dotnet core environment: Is there something similar to Net35? Or some other way to do it?/nYou can call \" msbuild.exe\" which is installed on \u201cWindows Server 2019\u201d and \u201cWindows Server 2016 R2\u201d virutal environments to build .Net Framework projects./n"
    },
    {
        "title": "Using the output of run: inside of if: condition?",
        "url": "https://github.com//orgs/community/discussions/25871",
        "upvotes": "338",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "Is there any way to get the output of a run: script into the if: condition? The feature I\u2019m basically looking for is a step output from run: but that doesn\u2019t look possible according to the documentation./nThis should work./n"
    },
    {
        "title": "GITHUB_ACTION environment variable missing - breaking issue",
        "url": "https://github.com//orgs/community/discussions/25905",
        "upvotes": "289",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 6,
        "body": "Could someone from Github please confirm what has happened to the GITHUB_ACTION environment variable that is still documented, but is currently not being set inside workflows./nThere was a bug in a recent runner rollout: https://github.com/actions/runner/releases/tag/v2.272.0. We progressively roll runner updates to customers so some customers were impacted by this update (it broke GITHUB_ACTION context, as you saw). We are rolling it back now and all customers should be fixed by 10 am EST./nThanks for the update @hross, and appreciate the openness about the issue and your future mitigations/nI would like to say that I don\u2019t think that this issue was handled well, and Github should rethink how it rolls out updates like these. Besides the sheer magnitude of this bug (completely breaking widely used actions like Reviewdog) that shouldn\u2019t have made it into production in the first place, it seems that it was rolled out at the end of a workday, based on the timing of it and none of the staff being around to deal with the fallout. In Japan this meant an entire day of our workflows being broken, and it was not even clear what the issue was. We lost man hours on this and it was sheer luck that we didn\u2019t need to rely on Actions for a hotfix./n@hross this seems to have broken for me again. Was the bad tag rolled out again without a proper fix?/nCan you give more detail on the issue you are seeing? We do not have any current issues I am aware of (and have not updated the runner recently). You can watch releases here: https://github.com/actions/runner/releases./nThanks for keeping us honest here and we realize this caused unacceptable customer impact. We are using this as a chance to learn and update how we handle this type of issue. Once again I apologize for the breakage this caused and we hope our updated mechanisms for testing this and rolling it out will not cause further problems./n"
    },
    {
        "title": "Cache pulled docker images (already built and published)",
        "url": "https://github.com//orgs/community/discussions/26330",
        "upvotes": "282",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 8,
        "body": "I have a workflow that needs to download a couple of heavy images already built from dockerhub registry. I would like to cache them instead download them everytime I run a workflow, but I can\u2019t figure out how to do it (If there is a way)/nIt wasn\u2019t clear how the docker image is downloaded during your workflow./n@guillermoprados\u00a0,/n> GitHub\u2019s cache action does not support to cache the builds of Docker images./nthanks\u00a0@brightran I didn\u2019t see those threads\u2026 I need to become a better googler :D. At least I know now I\u2019m not crazy for thinking on it./n@lucianposton that\u2019s great! I didn\u2019t know about that command./nyou\u2019re awesome!! thanks man :)\u00a0/nHave you been able to get this working in Windows? Using the same configuration that you describe I get an error during docker save :/nWe ran into a similar issue and built a dirt-simple docker-cache action that uses the docker load + docker save technique described above. I haven\u2019t tested it on Windows, but I see no reason it wouldn\u2019t work cross-platform unless Bash is at a different path on GitHub\u2019s Windows images, which would be trivial for me to fix. For even better performance, you could alternatively upload the Docker images you are pulling to the GitHub Container Registry and simply pull them from there, although that probably doesn\u2019t help if a dependency is doing the pulling./n"
    },
    {
        "title": "How can we get the ggshield GitHub Action verified?",
        "url": "https://github.com//orgs/community/discussions/30428",
        "upvotes": "261",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Hi GitHub team,/n"
    },
    {
        "title": "Usage of expressions and contexts in uses clause",
        "url": "https://github.com//orgs/community/discussions/27048",
        "upvotes": "258",
        "tags": [],
        "rections": 5,
        "replies": 7,
        "comments": 10,
        "body": "I\u2019ve got a use case where I want to test my action in an example workflow.\nThis works out great for me with hardcoded values in the uses clause. But it would be much more elegant to be able to use context variables like github.repository in the uses clause to be fork agnostic./nYou can use path as argument for uses, so this should do the trick/nThank you very much. This did the trick. Kudos to you \ud83d\ude03/nFor a bit more color.\u00a0 Because we have the settings where a repo or org owner can specify if they want third party actions or not we need to be able to resolve the full list of referenced actions before we start the workflow.\u00a0 If we enabled expressions in the uses section that would not be possible until runtime and we would potentially get hours into a job before it failed due to this policy./nThank you for this explanation/nDo you have a working example for this? When I tried this it was not doing anything:\u00a0https://github.com/eps1lon/actions-label-merge-conflict/blob/2f617ca50dfb880adbf628a61e3d4f427561a1df/.github/workflows/ci.yml#L24/nThis works fine for me if you have an action.yml in your root directory/n@wipe2238 The link to the docs seems to be outdated./nYou can work around this with nested composite actions; although the job step's uses need to be static/resolvable, if one of those actions is a composite action, its own uses won't be resolved until the action runs. So we can use this to our advantage to dynamically build a composite action that runs our desired action. It's a tad convoluted, so I made a generic action to make this a little more sane \ud83d\ude05/n"
    },
    {
        "title": "Push by workflow does not trigger another workflow anymore",
        "url": "https://github.com//orgs/community/discussions/37103",
        "upvotes": "236",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 4,
        "replies": 3,
        "comments": 3,
        "body": "Hi,/nHi there @RyanMeulenkamp and welcome to our community! Thank you for asking a great question \ud83d\ude42/nI believe that, by default, git in a workflow is authenticated with that same token. You should be able to bypass this restriction by setting up your own personal access token instead of using the builtin secrets.GITHUB_TOKEN/github.token.\nFurther reading: https://docs.github.com/en/actions/using-workflows/triggering-a-workflow#triggering-a-workflow-from-a-workflow/nactions/checkout sets up the repository so it'll always send the GITHUB_TOKEN in an Authorization header, unless you tell it otherwise. What you add to the URL doesn't matter with that, I'm surprised it worked at some point. \ud83d\ude05/n"
    },
    {
        "title": "Add Debian repository to supported package registries",
        "url": "https://github.com//orgs/community/discussions/39006",
        "upvotes": "233",
        "tags": [
            "Actions",
            "General"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "General/nThis would indeed be really helpful as currently a lot of projects only attach .deb or .apk or .rpm to releases, which defeats the initial purpose of easing the discovery, delivery, installation and setup of tools since standard package managers such as yum or apt cannot be used/n"
    },
    {
        "title": "Allow to Customize the Conclusion of a Job",
        "url": "https://github.com//orgs/community/discussions/53528",
        "upvotes": "228",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 3,
        "replies": 0,
        "comments": 0,
        "body": "Product Feedback/n"
    },
    {
        "title": "ubuntu-20.04 error: cannot open libtsan_preinit.o: No such file or directory",
        "url": "https://github.com//orgs/community/discussions/63391",
        "upvotes": "216",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 1,
        "replies": 0,
        "comments": 3,
        "body": "Bug/nThis is potentially an Ubuntu issue: https://bugs.launchpad.net/ubuntu/+source/gcc-10/+bug/2029910/nIs there any work around?/nIs there any work around?/n"
    },
    {
        "title": "Change startup order of job -> services to services -> job",
        "url": "https://github.com//orgs/community/discussions/9056",
        "upvotes": "212",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 1,
        "replies": 3,
        "comments": 2,
        "body": "Please, change the startup order of GitHub Actions job from:/nThis seemingly simple change would allow compiling C/C++/Rust projects that depend on C/C++ code with native toolchains and packages, which saves quite a bit of headaches when cross-compilation toolchains or pkg-config definition files are not that feasible, while keeping all the build steps nicely defined inside the workflow file, and not needing an additional container. For context, these are the kind of ugly hacks that people are doing right now: https://gitlab.com/rust_musl_docker/image/-/tree/master/nSorry, I read through actions/runner-images#2095 and I don't think that I fully understand the why here yet.  It sounds like your fundamental concern is that you want to be able to do something like docker run --rm --privileged multiarch/qemu-user-static:register --reset before you run a job container.  Is that roughly accurate?  You're just trying to use service containers as a means to get there?/n"
    },
    {
        "title": "Self-Hosted runners: runs-on tag with multiple labels does not work as documented",
        "url": "https://github.com//orgs/community/discussions/50172",
        "upvotes": "210",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 6,
        "replies": 0,
        "comments": 3,
        "body": "Bug/n@Ryker-LabJack I do not have a solution for you, but I am as well bashing my head over the excessively helpful \"You have an error in your yaml syntax\" error message. My situation is the same as you describe, essentially:\nruns-on: [ self-hosted, ${{ matrix.os }} ]\ndoes not work as one would expect from the documentation; [ self-hosted, explicit-os-name ] works fine, though./n@Ryker-LabJack, @franke-biosaxs I just ran into the same You have an error in your yaml syntax error using runs-on: [ self-hosted, ${{ matrix.os }} ]. I was able to get this to work by using alternate yaml syntax for arrays (dashed - list) rather than [ ] brackets. Check it out:/nTry enclosing the parameterized values in quotes like this:/n"
    },
    {
        "title": "Include the datetime that matches cron and triggers a schedule workflow in the context",
        "url": "https://github.com//orgs/community/discussions/39078",
        "upvotes": "202",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Product Feedback/n"
    },
    {
        "title": "Create Artifact Container - Attempt X of 5 failed with error: read ECONNRESET",
        "url": "https://github.com//orgs/community/discussions/76352",
        "upvotes": "178",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 3,
        "replies": 6,
        "comments": 1,
        "body": "Bug/nWe see the same issue on self-hosted runners with pipelinesghubeus24.actions.githubusercontent.com since yesterday. Do you still have this problem @serene-capybara ?/n"
    },
    {
        "title": "Run common task in github action or alternative of before_script in github workflow ci",
        "url": "https://github.com//orgs/community/discussions/27136",
        "upvotes": "173",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 3,
        "body": "Hello all,/nCan we place all common commands in a job that is like before_Script  or something like that?/n@uditgaurav,\nCurrently, GitHub Actions does not support the feature likes before_script in Gitlab CI./nYou can use composite run steps actions . These are actions that are solely defined in YAML (documentation)./n"
    },
    {
        "title": "I don't see \"Publish this action to the GitHub Marketplace\" when creating a new version",
        "url": "https://github.com//orgs/community/discussions/24965",
        "upvotes": "155",
        "tags": [],
        "rections": 2,
        "replies": 2,
        "comments": 16,
        "body": "Hello - I\u2019ve searched around for a bit and I don\u2019t see anyone with my issue exactly. I have a GitHub action I\u2019ve been working on tirelessly and I\u2019m unable to cross the finish line (144 commits later). When following the instructions here, I\u2019m stuck at the beginning \u201cSelect\u00a0 Publish this action to the GitHub Marketplace\u201d. I was given access to GitHub Actions beta, however I don\u2019t even see this option (screenshot attached). Do I need to do something to see this option?/nEven when I clone the example by choosing \u201cUse this template\u201d I can reproduce. It seems like for some reason my account isn\u2019t setup, even though it actually is (screenshot below). Wondering what more I need to do and why I can\u2019t find documentation about it./nLooking into this for you./n@mscoutermarsh\u00a0- I have beta access already. See my screenshot in my second message./nOh, I gotchya - my user account. Well that\u2019s annoying and unintuitive. I do appreciate your help\u00a0@mscoutermarsh. Fingers crossed - I just requested./nHaha, all good. Is there any way my request for access can be escalated?/nYou\u2019re in. No waitlist at the moment. \ud83d\ude00/nYes, I\u2019m in - thank you so much\u00a0@mscoutermarsh\u00a0/n/nI ran into this problem a few times because my action.yml file was accidentally named action.yaml.\u00a0 :P\u00a0 GitHub will only show a \u201cPublish this action\u2026\u201d if it\u2019s the first./nSame issue here: I can\u2019t release my GitHub Action on the Marketplace because there isn\u2019t any \u201cpublish\u201d checkbox.\nSee: https://github.com/cedx/setup-dart/releases/n@cedx/n@deborah-digges Yes\u2026 by contacting the GitHub support (https://support.github.com/contact). The issue was on their side, not with my repository./nHi @mscountermarsh et al, I encountered same issue./nSame here I can see \"Publish this Action to Marketplace\" banner, but there's no checkbox to \"Publish this action to the GitHub Marketplace\" to be found when drafting the release. I contacted the support and hope for a quick answer./nI'm also experiencing this issue.\nI created a support ticket. I'll update here for others if I find out a resolution beyond \"contact support\". Ugh./nStill have this problem now. I click Draft a Release, and I only get as far as making a new release with no option to make it be on the marketplace./n"
    },
    {
        "title": "ssh connection is successful on local machine, but not on Github Actions",
        "url": "https://github.com//orgs/community/discussions/70501",
        "upvotes": "154",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "Question/nWere you able to find an answer? I'm facing a similar issue./n"
    },
    {
        "title": "self-hosted not using bashrc",
        "url": "https://github.com//orgs/community/discussions/25407",
        "upvotes": "147",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 2,
        "replies": 4,
        "comments": 4,
        "body": "I can source it, but by default nothing from bashrc is loaded into the runtime at launch./nHi\u00a0@everops-alex\u00a0,\u00a0/nYou can use custom shell,\u00a0@everops-alex:/nIs it possible to set this for the whole workflow?/nYou could use  defaults.run   to  provide default  shell  options for all run steps in a workflow./n"
    },
    {
        "title": "There should be separate options to allow GitHub Actions to (1) create pull requests (2) approve pull requests",
        "url": "https://github.com//orgs/community/discussions/76707",
        "upvotes": "145",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "Product Feedback/nDefinitely want to see this sorted out as well!/n"
    },
    {
        "title": "Are there plans to support deletions of images in ghcr?",
        "url": "https://github.com//orgs/community/discussions/24974",
        "upvotes": "1288",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 4,
        "replies": 2,
        "comments": 6,
        "body": "Similar post but unanswered: Deleting temporary docker images from ghcr.io using actions/nYou can do this already via the UI Deleting a container image - GitHub Docs/nThanks for the reply! Sorry for not being clear, I was referring to having an API to automate this. Great news to hear one is coming!/nHi, do you have an ETA on this?/nRolled out yesterday. You can now delete and restore any package type within GitHub Packages/nHas there been any solution here? The \"answer\"  goes to a dead link. Still get/nHi guys, any news about this issue ?/n"
    },
    {
        "title": "Exposing ACTIONS_CACHE_URL and ACTIONS_RUNTIME_URL to run step",
        "url": "https://github.com//orgs/community/discussions/42856",
        "upvotes": "1078",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 1,
        "replies": 8,
        "comments": 3,
        "body": "Question/nHi\nyou can use ghaction-github-runtime\nand after that env.ACTIONS_RUNTIME_TOKEN will be available/nHowever I would like to avoid pulling in yet another third party dependency for something that seems like it could be an one-liner (or maybe 3 lines at least)/nBtw, if anyone's still interested in the cause of bollocks, here's why the environment variables are available to export through github-script and not in a bash shell./n"
    },
    {
        "title": "Self-hosted runner job queue API/UI",
        "url": "https://github.com//orgs/community/discussions/48708",
        "upvotes": "551",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 1,
        "replies": 4,
        "comments": 3,
        "body": "Product Feedback/nI think that https://github.com/organizations/$ORGANIZATION/settings/actions/hosted-runners provides a UI.../nIt would be great to have an API/UI to query what jobs are waiting for a self-hosted runner or group/label of runners across all repos/n@jsoref We are there enterprise custom and have same requirement. We need a API to see incoming runner request for the GitHub Enterprise and way to slice and dice per GitHub organization, GitHub runners labels it's asking and so on.\nCan we collate data somehow from the GitHub organization webhook?/n"
    },
    {
        "title": "Environment name does not support matrix",
        "url": "https://github.com//orgs/community/discussions/26594",
        "upvotes": "485",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 10,
        "replies": 1,
        "comments": 4,
        "body": "It looks like the new environment property does not support a matrix variable. I would expect the following to be possible:/nSimilarly, I would expect the following to work:/nHello,/n@GregoireW You\u2019re right, expression evaluation does work with the long form environment syntax:/nThanks a lot for this answer, we were trying with setting the value of an environment with the short form as in environment: ${{ github.event.deployment.environment }} and we were almost ready to give up thinking that it wasn\u2019t implemented yet as environments is still in beta./n"
    },
    {
        "title": "Configurable grace period for cancel-in-progress jobs",
        "url": "https://github.com//orgs/community/discussions/59652",
        "upvotes": "477",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "Question/nA configurable grace period would be very helpful, but definitely does not fully solve the issues with writing reliable, robust github actions runner cancellation logic./n"
    },
    {
        "title": "Option to exclude commits from a certain user from status checks",
        "url": "https://github.com//orgs/community/discussions/46610",
        "upvotes": "415",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 1,
        "comments": 1,
        "body": "Product Feedback/n"
    },
    {
        "title": "Deployment does not have a deployment status",
        "url": "https://github.com//orgs/community/discussions/40417",
        "upvotes": "362",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 3,
        "replies": 0,
        "comments": 2,
        "body": "Question/nHi there @lgrigoryeva1 and welcome to our community! Thank you for asking a great question \ud83d\ude42\nWhile you are waiting for a reply to your question, here are a few things you can do:/nWe've integrated with this API and can't figure out why some of our deployments show up as \"abandoned\". This status does not seem to be listed in the REST API docs: https://docs.github.com/en/rest/deployments/statuses?apiVersion=2022-11-28#create-a-deployment-status/n"
    },
    {
        "title": "[Request] Add a status badge for a PR that targets a particular branch (e.g. main)",
        "url": "https://github.com//orgs/community/discussions/9091",
        "upvotes": "338",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 1,
        "comments": 3,
        "body": "As suggested by @ethomson in response to github/docs#12331 (github/docs#12331 (comment)) I'm adding feedback on why I'd like to see status badge for a PR that targets a particular branch./nThanks @danielfdickinson  - I don't think that there's really a way to capture this today, but I think that we can indeed add this support.  Just to help understand, are you using this to build a dashboard or something along those lines?/nIMO the behaviour of the badge.svg?event=pull_request is broken and inconsistent with workflow query event: pull_request./n"
    },
    {
        "title": "YAML folded multiline strings interpreted as multiple commands",
        "url": "https://github.com//orgs/community/discussions/26105",
        "upvotes": "289",
        "tags": [],
        "rections": 1,
        "replies": 0,
        "comments": 9,
        "body": "When using YAML folded multiline strings (using \u2018>\u2019 instead of \u2018|\u2019), each line is still interpreted as a separate command instead of the newlines just being replaced by spaces./nThanks for reporting this, we\u2019re taking a look./nCould you give an example of where you are using the folding syntax?/nI\u2019ve made a branch in reproc that changes one of my CMake invocations to use a folded multiline string on Ubuntu and macOS:/nCurrently the run step just takes the multi-line contents and writes that to a file that is then executed using the specified shell program.\u00a0 The parser does not make any decisions based on the particular type of multi-line specifier in the YAML.\u00a0\u00a0/nI realize that a Beta is not supposed to break stuff but it would be rather convenient if this could still be changed while Github Actions is still in Beta./n@daandemeyer could you try formatting your command like this and see if you still see the issue/nTo elaborate on the syntax here a bit more, this is one of the odder parts of the YAML specification:/nThat fixes the issue. Thanks!/nI agree, this doesn\u2019t exactly seem intuitive for a config language. Hopefully this thread helps others that encounter the same issue./n"
    },
    {
        "title": "Reusable Workflows - Input deprecatedMessage",
        "url": "https://github.com//orgs/community/discussions/58855",
        "upvotes": "282",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "Question/nLooks like this only works for the Github Actions but it is described in the github-workflow.json schema. Anyone knows why this is happening and if there's a solution to this? Inputs cannot be completely removed, otherwise caller will start crashing immediately, we have to gradually start deprecating specific inputs./n"
    },
    {
        "title": "Streamlining DevOps: infrastructure as state at Air France KLM [DEV2716G]",
        "url": "https://github.com//orgs/community/discussions/74836",
        "upvotes": "261",
        "tags": [
            "Actions",
            "DevOps",
            "Universe2023",
            "Speaker"
        ],
        "rections": 3,
        "replies": 1,
        "comments": 1,
        "body": "Speakers:/nHi team, wonderful presentation \ud83c\udf89. We are using terraform in the company and was absolutely amazing to see a different approach with powershell scripts./n"
    },
    {
        "title": "Github action fails: Error: Process completed with exit code 1",
        "url": "https://github.com//orgs/community/discussions/25299",
        "upvotes": "258",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 3,
        "comments": 3,
        "body": "I am running workflow but getting this message: Error: Process completed with exit code 1. in npm run build step/nOnce I added CI=false in env it worked any idea why so?/nHave you solved it? I also met:(/nPlease also ensure your jest has no warnings during pipeline running:/n"
    },
    {
        "title": "How do I make a workflow produce an artifact?",
        "url": "https://github.com//orgs/community/discussions/25536",
        "upvotes": "236",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 4,
        "body": "I\u2019m trying to set up a build workflow for that produces several artifacts via a script. I\u2019ve got as far as successfully running the build scripts via the workflow, which the logs indicate are producing the artifacts as expected, but I don\u2019t see the artifact menu as described in https://help.github.com/en/articles/managing-a-workflow-run#downloading-logs-and-artifacts. Do I have to explicitly mark the files to be archived somehow?/nI think to make artifacts show up there you can use GitHub\u2019s upload-artifact action:\u00a0https://github.community/t5/GitHub-Actions/Caching-files-between-GitHub-Action-executions/m-p/30172/highlight/true#M130/nMore here:/nIs there a way to manually upload an artifact, without using GitHub\u2019s upload-artifact action? Our organization has enabled the \u201cEnable local actions only\u201d restriction so we\u2019re unable to use actions outside of our own repository./nIsn\u2019t the action open source? In which case, your organisation can simply fork to fix this issue?/n"
    },
    {
        "title": "Publishing download links in the check details instead of posting a comment",
        "url": "https://github.com//orgs/community/discussions/25585",
        "upvotes": "233",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 12,
        "body": "Hi, we just built a workflow to build a preview version in a pull-request, and push this build to our download server: https://github.com/deltachat/deltachat-desktop/blob/master/.github/workflows/build-preview.yml/nYou can post it to GitHubs API yourself./ncool, will try it out!/nHm, I\u2019m playing around with it, but the API doesn\u2019t seem to do anything. Neither does it give me a proper error message. Where would the message pop up?/nWeird. I think somethings wrong with SHA, but cannot figure out why./nHm, this seems to be the merge commit which would be generated when the PR would be merged after this commit: https://github.com/deltachat/deltachat-desktop/tree/c239d9ac7d5b5a47d2fc28892c55cdd226facd2c/nCould it be github.ref instaed of github.sha?/nPosting a status worked for me in:\u00a0arnested/playground#5/nAh, the difference is that you are using a push event, not a pull-request event. push events don\u2019t create a merge commit, but use just their own commit\u2019s SHA. PR events create a merge commit and use that SHA./nI got it! I could get the SHA from the PR event: https://github.com/deltachat/deltachat-desktop/pull/1116/files/nCool. I didn\u2019t notice yours was triggered on a pull_request event./nUh, great. I will refactor my code I guess, that is way more beautiful./nNote for later reference; all three solutions have the problem that they can\u2019t get the commit sha for the first commit in a PR. I tried all of them:/n"
    },
    {
        "title": "cache action has existential crisis",
        "url": "https://github.com//orgs/community/discussions/25030",
        "upvotes": "228",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "I am trying to setup caching for a build pipeline in a piece of software, but the cache action never seems to play nicely./nThis is an issue about cache action, please refer to this issue :\u00a0actions/cache#144/n"
    },
    {
        "title": "Use env variable for jobs.id.runs-on and jobs.id.services.image ?",
        "url": "https://github.com//orgs/community/discussions/25092",
        "upvotes": "216",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 4,
        "body": "Hi,/nThanks abdellani for reaching this out!/nThis is confusing me/nHi\u00a0@croydon\u00a0,\u00a0/n2 years in and this still does not work \ud83e\udd72/n"
    },
    {
        "title": "GitHub Container Registry (ghcr.io) public images not visible anonymously on the web",
        "url": "https://github.com//orgs/community/discussions/26886",
        "upvotes": "212",
        "tags": [
            "Packages",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 4,
        "body": "public docker images on github container registry (ghcr.io) not visible anonymously./nI\u2019ve just confirmed this. My personal package page is empty when not logged in, and so is the repository packages page of a repository linked with an image. If I try to use a direct link to the container page (e.g. my example container) I get 404./n\ud83d\udc4b The team is tracking this issue and working on an immediate fix.  Thank you for reporting!  We will give a status update once the fix is live./nFix went out minutes ago. Let us know if you still see an issue!/nIt works ! You guys totally rock ! Great job \u2026 Thanks/n"
    },
    {
        "title": "Deployment Events - Incongruent Grouping for Errors/Failures/Cancellations",
        "url": "https://github.com//orgs/community/discussions/17622",
        "upvotes": "210",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "For GHA, the Deployment Event status enumeration includes both error and failure , but it's a bit of a quirky mix:/n"
    },
    {
        "title": "Support env context inside env to be able to compose larger environment variables",
        "url": "https://github.com//orgs/community/discussions/18089",
        "upvotes": "202",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "Composing larger environment variables from other variable is a very common thing to do in scripting and in Jenkins./nRight now I have to work around this using extra steps to compose a new environment variable in shell and then export it to $GITHUB_ENV for future steps to be able to use it, eg:/n"
    },
    {
        "title": "More width for logs in Actions please \ud83d\udc40",
        "url": "https://github.com//orgs/community/discussions/19029",
        "upvotes": "178",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "Why I have to see this sidebar all time when I scrooling?\nIt doesn't make sense./nAs a temporary band-aid solution you could overwrite some css rules to have a cleaner view of these logs. No extensions are even required when it comes to Safari./n"
    },
    {
        "title": "Secrets on Team level",
        "url": "https://github.com//orgs/community/discussions/18652",
        "upvotes": "173",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 1,
        "replies": 0,
        "comments": 0,
        "body": "(this is related to unresolved part of Secrets on Team and Organization level 29 which was marked resolved)/n"
    },
    {
        "title": "Upload files with specific file extensions",
        "url": "https://github.com//orgs/community/discussions/27087",
        "upvotes": "155",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 8,
        "body": "As previously I opened an issue at: upload files with specific file extensions \u00b7 Issue #178 \u00b7 actions/upload-artifact \u00b7 GitHub\nBut answer doesn\u2019t seems to be working./n* in YAML references an anchor, e.g. *A references whatever was defined with &A. Add quotes to explicitly make the value a string:/nHi sir,\nthanks for jet reply./nMy guess is that this feature only works on Unix shells. (i.e. it\u2019s depending on the shell to do the expansion.)/nAre you sure its a bug ?\nAnd what you mean by inconsistent behavior ?/n80% certain (this is fairly low for me)./nIt\u2019s a Windows runner and the workflow uses the default shell, which is pwsh in this case. PowerShell Core appears to support path expansion. ls **\\*.exe worked in my test. However, judging by the error message, the shell does not appear to be involved at all. Whatever tries to work with the supplied path **/*.exe manages to turn the forward into a backward slash, but then seems to interpret the path literally instead of expanding it to just files with the extension .exe from any subfolders./nLooking at the workflow, I realized that it uses a super outdated version of the actions/upload-artifacts action. It probably doesn\u2019t support globbing./nThanks so much. You are professional. It worked.\nI was using old artifact version.\nNow it works fine: Update Csharp_Compiler.yml \u00b7 DarkSecDevelopers/RunSomeAware@33be108 \u00b7 GitHub/n"
    },
    {
        "title": "Workflow receives \"This page is taking too long to load\" message (with Unicorn!)",
        "url": "https://github.com//orgs/community/discussions/25231",
        "upvotes": "154",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 1,
        "comments": 8,
        "body": "Hello,\nI\u2019m unable to load executions in one of my workflows. It worked up until last week and nothing\u2019s changed./nI\u2019m observing the same issue, which has also shown up in the last week (worked fine before). Some workflow runs show up correctly, some not./nUpdate:/nGreat to hear we\u2019re not the only ones affected. We currently still haven\u2019t found a solution and splitting our workflow is unfortunately not so simple (would require a few gb of artifcats for each flow which gets very expensive).\nI hope this gets acknowledged by the team, I have a feeling it\u2019s simply a matter of a timeout which needs to be increased./nWe are seeing similar, on long-running large workflows we have. The \u201cSummary page\u201d is especially affected. I\u2019ve opened a ticket./nAs I\u2019m facing the same issue I\u2019ve opened up a ticket here: HTTP 502 \"This page is taking too long to load\" on matrix workflow \u00b7 Issue #1786 \u00b7 actions/runner \u00b7 GitHub/nI can update that in a ticket I opened, I got a response from the GH team on Mar25 that the issue should be resolved soon:/nApologies for the trouble here. We believe that we\u2019ve rolled out a fix for these problems, but please do let us know if you\u2019re still seeing it./nYes, it works now and Thank you !!!/n"
    },
    {
        "title": "Diminishing disk space on Ubuntu images",
        "url": "https://github.com//orgs/community/discussions/26493",
        "upvotes": "147",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 6,
        "body": "Our Linux builds have started to fail because they are running out of disk space. While investigating the cause of the failures, I found that the amount of disk space on the Ubuntu images are declining on a weekly basis. Here is what gets displayed in our log for df -h within a typical Docker container that we\u2019re using for our builds that takes about 4 GB of disk space once everything installed:/nHi\u00a0@saudet\u00a0,/nYes, I know and I did mention that the container takes about 4 GB of space. The point is, 13 GB of space is less than the 14 GB that is supposed to be guaranteed:/nAs of at least yesterday, we\u2019re now down to about 9 GB:/nI had seen the same thing on our builds that started to fail. The following values are after docker system prune:/nYou could see the logs in my above screenshot , the /dev/sdb1 is 14 G, used 41M, then the Avail show 13G . It is not an accurate data.\u00a0/nSorry for this bad experience. There is an opening issue in virtual-environments repo ,\u00a0 engineering team are working on a fix fot it.\u00a0https://github.com/actions/virtual-environments/issues/709#issuecomment-616767507\u00a0/n"
    },
    {
        "title": "Github Action not being triggered",
        "url": "https://github.com//orgs/community/discussions/26919",
        "upvotes": "145",
        "tags": [],
        "rections": 1,
        "replies": 0,
        "comments": 5,
        "body": "I defined a simple workflow which looks like this:/nI\u2019m facing similar problem here:\u00a0https://github.community/t5/GitHub-API-Development-and/GitHub-Actions-workflow-not-triggered-with-path/m-p/29872#M2745/nUpdate: The action now seems to actually run as intended what I changed is: (Update 2: no it does not)/nSee\u00a0https://github.community/t5/GitHub-Actions/GitHub-Actions-workflow-not-triggered-with-path/m-p/30321#M400\u00a0for futher info./nYou missed specifying the branch which should trigger the build/nSometimes GitHub Actions does not enter the \u201cqueued\u201d state until 5 minutes after pushing. This can be misleading. I think it should move into queued state immediately, even if it doesn\u2019t start running anything until later. This would improve UX and ease expectations in some cases./n"
    },
    {
        "title": "GitHub Actions - Error when doing a git push inside an action",
        "url": "https://github.com//orgs/community/discussions/26968",
        "upvotes": "1288",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 2,
        "body": "Hello./nHey, I was able to get this working.\u00a0 Here is an example:/ndownload gk bisa di unduh/n"
    },
    {
        "title": "Job environment can't access services",
        "url": "https://github.com//orgs/community/discussions/25603",
        "upvotes": "1078",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 5,
        "body": "I was happy to know that the global environment is now alive and can be within the job or the workflow (https://github.blog/changelog/2019-10-01-github-actions-new-workflow-syntax-features/#env-at-the-workflow-and-job-level)/nThat is currently by design. \u00a0The job level ENV is built before the services are setup on the runner so those values are not known. \u00a0 Your only option is to pass the variable to the step where it is needed./nhey @chrispat\u00a0 is there any plan to change this behavior?/nNot at the moment.\u00a0 We will continue to evaluate based on feedback./nThank you very much \ud83d\udc4d/n@Chrispati\u2019ve also run into this issue and would love to be able to do what @linuxjuggler suggests.\u00a0 I have multiple steps that require the database port value./n"
    },
    {
        "title": "Action on newly created branch",
        "url": "https://github.com//orgs/community/discussions/26987",
        "upvotes": "551",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 5,
        "body": "We delete our QA branch, and recreate it from develop every week./n@outrunthewolf\u00a0,/nyes thats right, we do have a paths filter on there!/n@outrunthewolf\u00a0,/nYou can use on: create and jobs.if:/nThanks I removed the path filters for now and it operates as expected \ud83d\udc4d/n"
    },
    {
        "title": "Space for GitHub Actions feedback?",
        "url": "https://github.com//orgs/community/discussions/7914",
        "upvotes": "485",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 3,
        "replies": 2,
        "comments": 1,
        "body": "I do not see any dedicated space for feedback on GitHub Actions. Is there one? Will there be one?/n\ud83d\udc4b\ud83c\udffc @pllim - We just opened up our GitHub Actions category today: #8473/n"
    },
    {
        "title": "UX improvements for main workflows page",
        "url": "https://github.com//orgs/community/discussions/10060",
        "upvotes": "477",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 1,
        "replies": 0,
        "comments": 3,
        "body": "The main https://github.com/<org>/<repo>/actions workflows UI page is not very helpful and leaves much to be desired in terms of usability and UX. I'm talking about this view:/nIt would also be really nice to be able to filter workflows by commit SHA or similar commit related metadata. There could be multiple workflow runs with same commit SHA and currently it's difficult to find all workflow runs related to that commit./nThanks @EvHaus for the very detailed feedback.  We really appreciate it.  I like your idea of providing more details on the Actions landing page - I'll share this with the other PMs and designers./nI just came across Trunk CI Analytics. This is almost exactly that sort of thing I was imaging GitHub would have natively. You guys should buy them :)/n"
    },
    {
        "title": "[Reusable Workflow] How can I specify that I need a specific job of a reusable workflow?",
        "url": "https://github.com//orgs/community/discussions/11072",
        "upvotes": "415",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 2,
        "replies": 0,
        "comments": 1,
        "body": "My question is:\nWhen I\u2019m using a reusable workflow, how can I specify using the needs parameter in an independent job that I need a specific job of a reusable workflow, not the whole workflow?/nInteresting.  I agree that there's no way to do this today, but this seems like something that we should be able to improve.  The team is working on a handful of other things right but, but I'll talk to the team about it when they free up./n"
    },
    {
        "title": "Allow shorter artifact retention times",
        "url": "https://github.com//orgs/community/discussions/12028",
        "upvotes": "362",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 5,
        "replies": 4,
        "comments": 1,
        "body": "Right now one set up the retention time for artifact deletion for anything lower than minimum one day. That's unfortunate./nThanks for the feedback @aramfe.  Can you tell me more about why you want a tighter retention?  Are you just producing a lot of data and want to keep the amount used under control, or are there some regulatory concerns that you have?/n"
    },
    {
        "title": "Request: Input Field Secret Type .. Please.",
        "url": "https://github.com//orgs/community/discussions/5621",
        "upvotes": "338",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 3,
        "replies": 0,
        "comments": 6,
        "body": "There are times in operations pipelines when you have to pass in a secret through the workflow input. However, currently there is no way to input a masked secret like a password field. Also, even using echo mask the first step that runs you can expand and see the secret in the output of the job./nHi @gzukel - apologies for the delay in getting back to you.  This is very good feedback - you may notice that we recently added input types for workflow_dispatch events.  Adding password or secret types feels like a nice next step./nHi @ethomson/nthe latest thread found on the same #12764/nBump/nBump/nI think you could technically use actions/cache/save and actions/cache/restore to pass secrets around. (I'm not actively advocating for this, but I think it'd work.)/n"
    },
    {
        "title": "Simplify Actions Steps with Checks",
        "url": "https://github.com//orgs/community/discussions/16312",
        "upvotes": "289",
        "tags": [
            "Enhancement",
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "As a developer, I would like to have the process of adding checks to steps in jobs simplified. I am moving from Jenkins to actions and my setup has always been to add a check for each step in a pipeline so developers could instantly see which part failed without leaving the pull request.\nExample:\n/n"
    },
    {
        "title": "Adding needs feature at a workflows scale",
        "url": "https://github.com//orgs/community/discussions/15700",
        "upvotes": "282",
        "tags": [
            "Enhancement",
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "I'm wondering why didn't Github add a feature like Relies-On natively?/nRelated https://github.community/t/depend-on-another-workflow/16311/n"
    },
    {
        "title": "Permissions nesecary to comment on a PR",
        "url": "https://github.com//orgs/community/discussions/26644",
        "upvotes": "261",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 8,
        "comments": 14,
        "body": "Been working on a workflow that will comment based on changes in the PR. But when the PR comes from the outside or Dependabot it doesn\u2019t have all the write permissions the repo\u2019s owner has. Does anyone know which permissions have to be set to what to make an action be allowed to comment on a PR, when that PR isn\u2019t coming from the repo owner?/nDependabot is fun./nThanks! Been really hoping to avoid using a PAT because that widens the attack possibilities with it significantly rather than reducing it. And just setting the issues to write permissions works fine when I make the PR. But any external party still gets blocked, currently attempting the route as described here: \"Error: Resource not accessible by integration\" when using Dependabot \u00b7 Issue #298 \u00b7 marocchino/sticky-pull-request-comment \u00b7 GitHub/nYeah, I\u2019m currently playing with variations./nSo I currently came to this after a Twitter thread with one of the Dependabot people:/nBtw, I\u2019m shocked to see anyone using actions/checkout@v1 at this point./nWhy? That commit is included in the v1 tag, I\u2019m rather shocked that you didn\u2019t notice that as it\u2019s right there when you open the page:\n/nBecause v2 was a major change from v1; v1 is clearly not getting updates. So, unless there\u2019s a specific reason to use v1, one really shouldn\u2019t./nOw absolutely, most of my workflows (that I haven\u2019t forgotten to update) are running on v2, especially ones with big repositories. However, that specific action I\u2019ve build has a very specific git use case that I\u2019ve been unable to get working on v2, so yeah it uses v1 because that just works./nI should note that while commenting requires permissions, if all you want is to provide a report, there\u2019s a new feature called a job summary:/nDoes it support updating the same summary if you push again to the same PR?/nSummaries are assigned to jobs, so each job gets its own summary./nAlso still need to check it out, but if only the latest summary is shown on the PR page it could work. Will see if I can have a try at this soon/nI believe they\u2019re basically only reachable via the \u2705/\u274c for the commit or the summary box at the bottom of the PR./n@WyriHaximus do you have any feedback about this ? (usage of summary OR good way to put comment on PR with github action from forked repo)/n"
    },
    {
        "title": "Re-run dependabot workflows as another actor",
        "url": "https://github.com//orgs/community/discussions/27505",
        "upvotes": "258",
        "tags": [
            "Actions",
            "Dependabot",
            "ProductFeedback"
        ],
        "rections": 1,
        "replies": 6,
        "comments": 1,
        "body": "With the recent change announced at https://github.blog/changelog/2022-07-19-differentiating-triggering-actor-from-executing-actor/ I'm not able to re-run dependabot pull requests as myself. I ususally have to re-run workflows, because dependabot isn't allowed to access secrets required for the workflows. Re-running them as myself enables access to the secrets. I'm aware that such a manual intervention isn't ideal by itself, but I at least I could fix failing workflows with a simple re-run./nhello!/n"
    },
    {
        "title": "Github token has no access to new container REST APIs",
        "url": "https://github.com//orgs/community/discussions/26268",
        "upvotes": "236",
        "tags": [
            "Packages",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 8,
        "body": "Hello,/nRelated changelog post: Packages: Container registry now supports GITHUB_TOKEN - GitHub Changelog/nHowever, switching from PAT to the GITHUB_TOKEN and adding permissions (push works fine with new token), now my custom action to list and then delete containers from ghcr.io throws:/nThanks @byrneh,\nyes I also thought that is most likely intentionally limited./nHowever which other API exists to read and delete containers if not those ?\nAs the changelog mentions even delete, I was hoping that these APIs would be supported,\nas the only other alternative which I know of is to use the UI./nHi,\npackages#get-all-package-versions-for-a-package-owned-by-a-user returns details for a user, rather than the authenticated user.\nAdditionally, you will need to have have set appropriate access permissions\nconfiguring-access-control-and-visibility-for-container-images/nFor now, PATs are still required for the REST API. We plan to support GITHUB_TOKEN on the REST API in the future, however./nHi @shayneburgess , is there any progress here? 1 year later? Deleting a package via API and GITHUB_TOKEN seems like a pretty basic feature?/n@shayneburgess, any progress? I think deleting a pakcage via API and GITHUB_TOKEN is very usefull for me./n"
    },
    {
        "title": "Branch Filter for Environment Protection Rules",
        "url": "https://github.com//orgs/community/discussions/27117",
        "upvotes": "233",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 7,
        "body": "The recently announced environment protection rules and environment secrets feature is interesting. However, one big capability it is missing is the ability to specify a branch filter as an environment protection rule. Example: Specify workflows triggered from main branch are the only ones to access certain environment secrets. This way it can be combined with existing branch protection rules to only deploy code that\u2019s been reviewed and merged to a specific branch like main./nYes this is one of the items we want to add before we exist the beta./n@chrispat Are there any plans of rolling this out to private repos of paid plans other than Enterprise?/n@chrispat I have the same question: are Environments (including protection rules, required reviewers and env secrets) going to be available for private repos in other paid plans besides Enterprise level?/nIs there any way to make branch filter rules apply to tags?/nGiven GitHub does not have a concept of protected tags we decided to only include branches in the matching for Environments.  If protected tags come in the figure we will likely update the environment rules./nWhile I get that, given that builds can be kicked off by a push to a tag (and a release), it would be REALLY helpful to be able to apply to tags so that you can control what tags are allowed to kick off certain builds\u2013regardless of a tags \u201cprotected\u201d status./nI wanted to point that GitHub has released this functionality in case anybody missed it or ends up here later./n"
    },
    {
        "title": "How to retry a failed step in github actions workflow?",
        "url": "https://github.com//orgs/community/discussions/27121",
        "upvotes": "228",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 2,
        "comments": 3,
        "body": "Hi Team,/nHi @riprasad,/nRelated: Retry for failed steps/nI was able to achieve retries by using this simple workaround/n"
    },
    {
        "title": "Can't make internal ghcr images public",
        "url": "https://github.com//orgs/community/discussions/27164",
        "upvotes": "216",
        "tags": [
            "Packages",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 5,
        "body": "Hi there,/n@clarkbw any ideas on who we can contact about this issue? It\u2019s been impacting our users for weeks now as they are unable to pull these images (not to mention our github triggers are also failing due to not being able to check the last pushed version)/n@aptalca We are investigating this right now. Thanks for reporting this, i\u2019ll reply when I know more about what is happening./nThanks for the confirmation \ud83d\udc4d/nNo problem @aptalca. This should be fixed now and you should be able to make it public again. Please let me know if your still having issues./nExcellent, it works again now. Thanks so much./n"
    },
    {
        "title": "SSH test using GitHub Action",
        "url": "https://github.com//orgs/community/discussions/24913",
        "upvotes": "212",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 13,
        "body": "I have a code that wraps around some SSH operations. I would like to build CI for this code. Is there a way to generate two virtual machine and SSH between them?/nTechnically you should be able to use Qemu (possibly with libvirt) on an Ubuntu runner, maybe with Vagrant or something to set them up automatically./nIt\u2019s actually a good idea to use an ssh server! I\u2019ll try to get started based on your example, thanks./n@airtower-luna I\u2019ve been trying your suggestion. Here is what I have in my action:/nAt a glance, no. To get more information try running ssh with the -v option, and check /var/log/auth.log (as in, cat to the log or upload as artifact) for the server side./nThanks @airtower-luna ! I\u2019m not too good at reading the verbose output of ssh, but it seems to me that ssh wants to read a passphrase that I set to be empty:/nThis looks like the key issue, not the passphrase:/nThanks once more @airtower-luna ./nSorry, writing authorized_keys in the previous post was a mistake. The issue is with known_hosts. The rest still applies, though. \ud83d\ude09  The key missing from known_hosts is not your login key, but the host key, which the SSH client uses to ensure it\u2019s talking to the right server./nThanks! Indeed that was one issue in adding myself to know_hosts. However, even with this fixed, ssh seems to really now want to take my rsa key./nIt looks like the SSH server rejected the key. To figure out why you\u2019ll need to check /var/log/auth.log as I mentioned above, it should contain information on login attempts./nThanks for all your help. The solution was in the end very simple. My $HOME has permissions 777, which is too much for SSH. So what solved it was/nI have lost a lot of time debugging users ssh incidents only to find out it was a simple file permission.  I wrote a few bash scripts that allow users and administrators to make sure that the ssh files and directory permissions are correct on each system.   The script names are check-user-ssh.sh and check-host-ssh.sh which can be found at docker-security-infrastructure/ssh at master \u00b7 BradleyA/docker-security-infrastructure \u00b7 GitHub/nThanks nice @bradleya . Did you consider making this an GitHub Action?/n"
    },
    {
        "title": "Sort actions in marketplace by popularity and projects using them.",
        "url": "https://github.com//orgs/community/discussions/24934",
        "upvotes": "210",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 3,
        "body": "When searching for actions in marketplace it is difficult to find the one everyone is using. Please sort them by stars, number of projects using the action or a combination of both. Also adding usedby feature to the actions like on libraries would be a great addition./nThanks for the feedback! I\u2019ve taken your suggestion and passed it along to the appropriate teams. Thanks again for reaching out \ud83d\ude00/nHello!\nAny updates on it? Seems very reasonable feature./n+1/n"
    },
    {
        "title": "Merge matrix build artifacts for release",
        "url": "https://github.com//orgs/community/discussions/25338",
        "upvotes": "202",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 1,
        "replies": 0,
        "comments": 4,
        "body": "I am using a matrix configuration to compile my project on different platforms and want to merge all the outputs to one single release./nYou could create a job that depends on the jobs that build your artifacts https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idneeds.  You can then have that job download all of the artifacts using https://github.com/actions/download-artifact and upload those as release assets./nHi @thebino,/nThanks, I didn\u2019t knew that I can download ALL artifacts together.\nI solved it in a separate job and used a 3rd party action for uploads/nHi @thebino,/n"
    },
    {
        "title": "Is that possible to run job which takes more than 6 hours on self-hosted runner?",
        "url": "https://github.com//orgs/community/discussions/26679",
        "upvotes": "178",
        "tags": [],
        "rections": 3,
        "replies": 2,
        "comments": 14,
        "body": "In my CI/CD setup, one step is to retrain a deep learning model. We setup our own GPU-box as a self-hosted runner to run this step. However, the training takes about one day, which is much longer than the current 6-hours cap GitHub Actions allowed. Is there any way to workaround this limitation?\u00a0/nYes, you can use self-hosted runner to run more than 6 hours job./nThis is interesting. My test shows the jos is killed after 6 hours even running on self-hosted runner.\u00a0/nThe maximum number of minutes to let a job run before GitHub automatically cancels it. In default is 360 minutes.\u00a0/nI was very confused. It didn\u2019t work for me.\u00a0\u00a0/nSolution is false.\nJobs can not run longer than six hours by any meaning/n+1 . Can some one please update if we can run any jobs more than 6hrs ?/nJust to let all the folks know, Yes its possible to run job/steps for more than 6 hrs , provided you are using self hosted runners .for ex:  Use job-timeout: 1000 parameter to allow jobs/steps to run for 1000 mins in your workflow./nCan someone help with this? This solution doesn\u2019t work. I\u2019m still getting a 6h timeout even after putting timeout-minutes in the step and job level with a self hosted runner. As aside note I\u2019m using reusable workflows (reusable workflows can\u2019t have timeout-minutes property)/nDo we have any updates on the solution. Self hosted runners even with timeout parameter being more than 6 hours doesnt work. It still cancels the job after 6 hours. Any solutions here ?/nI'm running into the same issue with a self-hosted runner./nStill running into this. Any movement on allowing longer than 360 min jobs on self hosted runners? We would like to run stress tests on custom hardware, which shouldn't affect extra runner infrastructure GitHub makes for Actions./nI can report that still the limit is in place and I'm unable to do a longer build beyond 6h./nI can report that still the limit is in place and I'm unable to do a longer build beyond 6h./nWe were actually able to get longer than 6h builds on self-hosted runners recently with something like the following:/n"
    },
    {
        "title": "Having a workflow that triggers multiple times for different apps within a monorepo",
        "url": "https://github.com//orgs/community/discussions/56092",
        "upvotes": "173",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 2,
        "replies": 0,
        "comments": 2,
        "body": "Question/nRunning into the exact same issue.../nHaving the same issue here with a monorepo deploying on Vercel/n"
    },
    {
        "title": "Improve error messaging on the 300 file git diff limit for triggering actions",
        "url": "https://github.com//orgs/community/discussions/53831",
        "upvotes": "155",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 1,
        "replies": 1,
        "comments": 2,
        "body": "Bug/nThe filter is clearly GitHub protecting itself from doing expensive work./nHey, I currently just faced the same issue in my GitHub action for a monorepo. How did you circumvent this?/n"
    },
    {
        "title": "Possible to share outputs from nested reusable workflows upstream to the calling workflow?",
        "url": "https://github.com//orgs/community/discussions/44007",
        "upvotes": "154",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Product Feedback/n"
    },
    {
        "title": "Workflow_dispatch - Is it possible to pass a secret as parameter?",
        "url": "https://github.com//orgs/community/discussions/26748",
        "upvotes": "147",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 4,
        "replies": 2,
        "comments": 6,
        "body": "Hi and thanks for the new feature, it was really important to have it as part of GitHub Actions.\nI would like to know if it is possible to pass a secret as a parameter (inputs)./nHi, I\u2019m not sure if I can help or not but do you mean passing the name of a secret, or passing the value and treating it as a secret and masking it?/nAlright I think I got you. Assuming you meant the first interpretation from my other post./nHi @gderaco,/nThanks.\nThis is what worked for me/nDoes this no longer work?/nWith secrets, it's better if you either explicitly pass them or inherit all of them.\nRef:/n"
    },
    {
        "title": "Getting object length?",
        "url": "https://github.com//orgs/community/discussions/27125",
        "upvotes": "145",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 18,
        "replies": 2,
        "comments": 4,
        "body": "How do I get an object\u2019s length?/nFor my use case, I only needed to check whether labels existed or not so I was able to do this ugly hack:/n@chingc Sorry to tell you that Github Actions context and expression syntax doesn\u2019t provide a way to get an array or object length directly.\u00a0/n@yanjingzhu Thanks for the workaround. I do hope GitHub will add a length function in a future update./nAnother easy trick is to check if the label at a given index is null:\nCheck if labels is not empty:\nif: github.event.pull_request.labels[0] != null\nCheck if labels has at least 2 items:\nif: github.event.pull_request.labels[1] != null/n"
    },
    {
        "title": "How to add a workflow with an existing yml file, and the existing file doesn't exist in \"main\" branch",
        "url": "https://github.com//orgs/community/discussions/59603",
        "upvotes": "1288",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 2,
        "replies": 1,
        "comments": 1,
        "body": "Question/n"
    },
    {
        "title": "Workflow stuck at \"complete job\" on self-hosted runner",
        "url": "https://github.com//orgs/community/discussions/33046",
        "upvotes": "1078",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Hey folks! \ud83d\udc4b/n"
    },
    {
        "title": "\ud83d\udda5\ufe0f  Apple Silicon Powered M1 macOS Larger Runners \ud83d\udea2",
        "url": "https://github.com//orgs/community/discussions/69096",
        "upvotes": "551",
        "tags": [
            "\ud83d\ude80Shipped",
            "Actions"
        ],
        "rections": 3,
        "replies": 1,
        "comments": 1,
        "body": "/nIs there a m1 support for smaller runners? Like macos-13-arm64 ?/n"
    },
    {
        "title": "Block rerunning old workflow runs",
        "url": "https://github.com//orgs/community/discussions/47601",
        "upvotes": "485",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 2,
        "replies": 1,
        "comments": 2,
        "body": "Question/nHey there, did you find a solution for this? I'm looking for the same./nThis is also an issue for me. I'm using Git with Terraform and running an old action could cause the deletion of a lot of things even if done by mistake./n"
    },
    {
        "title": "Using multiple jobs as part of a single deployment",
        "url": "https://github.com//orgs/community/discussions/29257",
        "upvotes": "477",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Hi,\nI am using GitHub actions to continuously deploy my application. My CD workflow consists of multiple jobs that all reference the same environment (to get access to the environment-specific secrets): One \"build-and-deploy\" job and one Matrix testing job that is used to test the deployment using 4 concurrent test runners.\nUsing this setup GitHub creates 5 deployments: One for each job. I am looking for a way to tell GitHub that all these jobs are part of the same deployment.\nAny help would be greatly appreciated./n"
    },
    {
        "title": "IAC CODE SCANNING USING SNYK",
        "url": "https://github.com//orgs/community/discussions/44329",
        "upvotes": "415",
        "tags": [
            "Actions",
            "CodeScanning",
            "Question"
        ],
        "rections": 2,
        "replies": 4,
        "comments": 3,
        "body": "Question/nIt looks like snyk is not producing a sarif file at the location you are expecting. Please make sure to configure snyk and ensure it is saving the file in the right location./nI'm running into what is likely the same issue. The Snyk Github Action for IAC is not creating the snyk.sarif file. I have tried explicitly setting sarif: true to no avail. When I set json: true it generates the snyk.json file. I have tested this also with the Snyk Github Action for Docker for a different repo and have not encountered this issue. This snyk action still shows that it relies on actions/checkout@v2, it seems that it needs a little care from the team responsible for it./n@shanumodi9 While I realize it has been quite a while since you raised this issue, I have the official resolution from Snyk. According to Snyk's support team, and verified with my own github action/workflow implementation. The file and sarif arguments are required in order to rectify this issue. Note: This solution is not currently contained, or referenced, in their official Snyk Github Action documentation.\nPlease see below example:/n"
    },
    {
        "title": "RPC failed; HTTP 500 curl 22 The requested URL returned error: 500",
        "url": "https://github.com//orgs/community/discussions/40492",
        "upvotes": "362",
        "tags": [
            "Actions",
            "Issues"
        ],
        "rections": 0,
        "replies": 1,
        "comments": 2,
        "body": "Bug/n"
    },
    {
        "title": "Feature request: share credentials between jobs (job outputs)",
        "url": "https://github.com//orgs/community/discussions/62269",
        "upvotes": "338",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Feature request: add a secret output option which makes output values masked between jobs, for instance:\necho \"mysecret=MySecretValue\" >> $GITHUB_SECRET_OUTPUT/n"
    },
    {
        "title": "Why the difference between Composite Actions inputs and reusable workflow inputs",
        "url": "https://github.com//orgs/community/discussions/65588",
        "upvotes": "289",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 2,
        "replies": 1,
        "comments": 2,
        "body": "Question/nFollowing as I would love to see the type property added to action inputs./nwhile looking for something else, I stumbled upon this question again. I've noticed that while the GitHub Actions platform doesnt support the type property for an input in a custom action, it also doesnt seem to complain if you've included it anyway./n"
    },
    {
        "title": "Fine-grained PAT permissions for organization level self-hosted runners",
        "url": "https://github.com//orgs/community/discussions/59733",
        "upvotes": "282",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 2,
        "comments": 3,
        "body": "Question/nTotally agree.  I've brought this up in some other threads as well:/nBump please \ud83d\ude4f/n"
    },
    {
        "title": "Actions workflows view should allow filtering by multiple statuses",
        "url": "https://github.com//orgs/community/discussions/67516",
        "upvotes": "261",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 4,
        "replies": 0,
        "comments": 1,
        "body": "Product Feedback/n"
    },
    {
        "title": "Inconsistent Environment deployment approval behavior with max-parallel matrix strategy",
        "url": "https://github.com//orgs/community/discussions/102771",
        "upvotes": "258",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Bug/n"
    },
    {
        "title": "Can I access job status from ACTIONS_RUNNER_HOOK_JOB_COMPLETED hook script?",
        "url": "https://github.com//orgs/community/discussions/28644",
        "upvotes": "236",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 2,
        "replies": 0,
        "comments": 0,
        "body": "Hi, I'm trying to use self-hosted runner's hook script for logging about ran jobs on runners.\nEach runners are container not VM and deployed to AWS ECS for scaling. Those runner containers will recreate after a job finished with --ephemeral option./n"
    },
    {
        "title": "github.event.workflow_run.conclusion is always null",
        "url": "https://github.com//orgs/community/discussions/58929",
        "upvotes": "233",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 1,
        "replies": 0,
        "comments": 0,
        "body": "Question/n"
    },
    {
        "title": "Add if condition into workflow inputs for show or hide field",
        "url": "https://github.com//orgs/community/discussions/34127",
        "upvotes": "228",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 8,
        "replies": 0,
        "comments": 0,
        "body": "Hello,  I want suggest a proposal about workflow inputs\nAs you see in screenshot we have _Fastlane lane_ this input have 2 choices (promote or deploy)\nI want when I select promote hide _Fastlane Bump version_ ,_Create new tag_& _Push bump version_ &\n_Deploy to input_\nWhen I select deploy show _Fastlane Bump version_ ,_Create new tag_& _Push bump version_ &\n_Deploy to input_ & hide  _Promote from_ & _Promote to_\nwe need something as if: some condition as input parameter\n\nCurrent yaml/n"
    },
    {
        "title": "\"On Secret Change\" as a Worfklow trigger",
        "url": "https://github.com//orgs/community/discussions/49547",
        "upvotes": "216",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "Question/n"
    },
    {
        "title": "Concurrency with Environment Manual Approvals",
        "url": "https://github.com//orgs/community/discussions/17401",
        "upvotes": "212",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 2,
        "body": "This seems like an unexpected behavior for jobs that uses both concurrency and an environment that requires manual approval:/nI had found this similar comment but no follow-up here./nUnfortunately this is how it works./n"
    },
    {
        "title": "Allow workflows to handle check run actions",
        "url": "https://github.com//orgs/community/discussions/12098",
        "upvotes": "210",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "GitHub Apps have (full) access to the checks api, which allows them to register actions :\nhttps://docs.github.com/en/rest/guides/getting-started-with-the-checks-api#check-runs-and-requested-actions/n"
    },
    {
        "title": "Why does a merge commit not trigger an on: push workflow?",
        "url": "https://github.com//orgs/community/discussions/25812",
        "upvotes": "202",
        "tags": [
            "Actions"
        ],
        "rections": 16,
        "replies": 5,
        "comments": 8,
        "body": "I\u2019ve setup a workflow that runs on: push - with no conditions./nAFAIK if you configured your workflow with something similar to/nhttps://github.community/t5/GitHub-Actions/Github-push-actions-suddenly-not-triggering/m-p/36988#M2753/nWhen a merge commit push to master, it will trigger the workflow with on:push./nall working as expected now. thank you!/nHaving issues with actions triggering on merge currently. Are you guys sure it wasn\u2019t just temp. fixed?/nI have also issues when merging to master, that results in no trigger of the workflow. The weird thing is, that it works for staging  but not for prod./nI have the same problem when using paths and merge commit. There are files changed in the paths. But action does not trigger. If I change something and then do an append push it works./nWe are also experiencing this issue. we have dev and main branch. and when doing a merge from dev to main and then pushing, on: push doesnt not trigger the workflow./n"
    },
    {
        "title": "Github action does not run when multiple files were added/removed",
        "url": "https://github.com//orgs/community/discussions/57830",
        "upvotes": "178",
        "tags": [
            "Actions"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 3,
        "body": "Bug/nWe are currently experiencing the same behavior. We have a similar configuration where we want to trigger an action on pull-request with three paths set as filter. When i manually create a PR with a lot of new/changed files (more than 300 in this case) the action is not triggering./nHello, GitHub Community./n+1 on this issue. We run a mono repo running on yarn workspaces and pnp. When we need to update our yarn version i.e. 3->4, there are thousands of file changes since yarn automatically updates cached modules during the upgrade./n"
    },
    {
        "title": "Use matrix context in Jobs.job.if",
        "url": "https://github.com//orgs/community/discussions/37883",
        "upvotes": "173",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 2,
        "replies": 3,
        "comments": 5,
        "body": "Hi guys \ud83e\udd20\nI'm wondering if it's possible to use the matrix context in a jobs.job.if to control the execution ?\nThe docs states that we can use any context and expression to create conditionals./n@su-sisk - could you try it with the curly braces , like if: ${{ matrix.packages.enabled == 'true' }} ?/nDoes anyone know why the matrix context is not available for jobs.<job_id>.if? The reference above shows that it is available almost anywhere except there... it is a bit annoying.../n@fherreazcue the workaround (forgive me if this is obvious) is to pass your flag as an input in the called workflow and then it will be in an accessible context for the jobs (and there if condition) defined there./n@fherreazcue the workaround (forgive me if this is obvious) is to pass your flag as an input in the called workflow and then it will be in an accessible context for the jobs (and there if condition) defined there./nNot sure if I should open another discussion to request a new feature where matrix can be extended to become available in an if. My main usecase is required jobs that are sometimes skipped if certain invariants haven't changed, which means it would suceed again if ran, and so we skip for efficiencies sake./n"
    },
    {
        "title": "GitHub Container Registry and GitHub App",
        "url": "https://github.com//orgs/community/discussions/34084",
        "upvotes": "155",
        "tags": [
            "Packages",
            "ProductFeedback"
        ],
        "rections": 3,
        "replies": 2,
        "comments": 1,
        "body": "I'm looking for a best way to access ghcr.io private packages from automation outside GitHub Actions, i.e production servers./nis there any way to authenticate with ghcr.io other than PAT?/n"
    },
    {
        "title": "set-output deprecated",
        "url": "https://github.com//orgs/community/discussions/35994",
        "upvotes": "154",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 24,
        "replies": 14,
        "comments": 13,
        "body": "Two days ago the Github Actions announced the deprecation of set-output and workflows started to emit these warnings:/nThe documentation on how to set outputs now is here: https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#setting-an-output-parameter You do not need to replace outputs with environment variables, just set the outputs by writing to a file instead of stdout./nThank you for the tip. The docs are pretty vague on how this works./nChangelog:/nFor what it's worth, this change materially impacts where you can set output from. Perhaps that's a good thing or design intention. Regardless, any scripts or outputs that previously ran in a Docker container will now need to volume-mount the $GITHUB_OUTPUT file (and likely will want to set it as an env var), whereas previous implementations allowed stdout to be intercepted at the top level/nThe port of yaml files by replacing the set-output to an echo redirect to GITHUB_OUTPUT works. But my python code does not log correclty the multiline values:/nsame issue as @funes79 faced regarding non-replaced new line characters. any fix for this? \ud83d\ude4f/nAll examples on how to use the recommended show code in either yaml or in PowerShell./nFigured it out. The way to do it is:/nWhy doesn't github just intelligently translate this on the fly?/nHere Alternative way for use terminal or any programming language output on workflow\n/n"
    },
    {
        "title": "Can we inherit repo variables the same way we can inherit secrets when calling another workflow?",
        "url": "https://github.com//orgs/community/discussions/44426",
        "upvotes": "147",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 1,
        "replies": 3,
        "comments": 1,
        "body": "When calling another workflow, it's possible for the current secrets to be passed by using secrets: inherit. With the new variables functionality, is it possible to do something similar?/nI think the answer is yes per this: https://docs.github.com/en/actions/using-workflows/reusing-workflows#limitations/n"
    },
    {
        "title": "API for downloading the billing usage report",
        "url": "https://github.com//orgs/community/discussions/26941",
        "upvotes": "145",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 10,
        "replies": 2,
        "comments": 1,
        "body": "I saw the new of Billing usage report is now available to download, I wonder if there is currently API that we can perodically download so that we can track our usage./n"
    },
    {
        "title": "how to limit workflow.concurrency to pull_request only?",
        "url": "https://github.com//orgs/community/discussions/31040",
        "upvotes": "1288",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "First thanks for implementing this. Manually cancelling builds is quite a hassle./n"
    },
    {
        "title": "Authorized user cannot push in GitHub action",
        "url": "https://github.com//orgs/community/discussions/39189",
        "upvotes": "1078",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 1,
        "replies": 1,
        "comments": 3,
        "body": "Question/nHi @goulon, did you find a solution for this? I I'm facing similar issue/nAlso facing the issue if we use a custom github app that can bypass the protection rules.\nAny hint?/nAlso experiencing this, except with a GitHub App. Unlike the OP, I was able to reproduce the problem with only one branch protection requirement enabled./n"
    },
    {
        "title": "GitHub Actions: Upload Artifact Failed: Unable to get local issuer certificate",
        "url": "https://github.com//orgs/community/discussions/42344",
        "upvotes": "551",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "We are using self hosted runners (Windows) for GitHub actions. Recently our company changed the proxy. We have updated the System Environment Variables to the new proxy and we have updated the proxy details in .env file as suggested by GitHub documentation. And we have added the Root CA in the Windows Certificate Manager (Certificates - Local Computer -> Trusted Root Certification Authorities -> Certificates). But when uploading the artifact during workflow run, we got the below error message and workflow is failing./n"
    },
    {
        "title": "Allow use of custom backing store for artifacts",
        "url": "https://github.com//orgs/community/discussions/21294",
        "upvotes": "485",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "We use self-hosted runners on GCP. The upload speeds to GitHub artifacts are appallingly bad: like 2MiB/s. This is totally unworkable for large artifacts. Besides, we'd rather use our own backing store, so we control storage costs, retention, etc./n"
    },
    {
        "title": "Does GitHub Actions (cloud) allow running of ARM based instances?",
        "url": "https://github.com//orgs/community/discussions/25319",
        "upvotes": "477",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 19,
        "replies": 7,
        "comments": 7,
        "body": "When we run code online for testing with CI/CD, is there an option to make it so that our code can run on Ubuntu on ARM? I\u2019m assuming that all existing OS options are all on x86/nI\u2019m not aware of any directly supported options. If you\u2019re willing to build a somewhat complex workflow you could either set up a VM, or (for better performance) cross-compile and then use Qemu user space emulation to test ARM binaries in the runner system. Here\u2019s a tutorial for Debian, it should be possible to adapt that to Ubuntu./nHi @joshuarobs,/n@weide-zhou Thanks for clarification. Also can you run your own self hosted runners with a free account of GitHub or is this only a premium feature?/nHi @joshuarobs,/nWould be great to ARM being directly supported by GitHub actions, I've found qemu to be quite slow for 32-bit ARM versions. Don't get me wrong, the fact that qemu can still build a 32-bit ARM image on 64-bit amd64 architecture is incredibly impressive!/nLooks like Github will be adding ARM based runners in the near future \ud83e\udd73 \ud83d\ude80 \ud83c\udf8a/nStill no public access and no information about free plans and public repositories - Arm-based hosted runners are coming to GitHub Actions! \ud83d\udea2 #73040./n"
    },
    {
        "title": "Action custom branding icon?",
        "url": "https://github.com//orgs/community/discussions/26767",
        "upvotes": "415",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 9,
        "replies": 3,
        "comments": 5,
        "body": "How are these custom icons added to branding: ?/nGood question. As the author of multiple Actions I\u2019d love to be able to have consistent branding across my actions rather than \u201cwell all the icons are the same colour.\u201d/nI suspect that the author has to be an organization and somehow automatically is applied from the organization\u2019s avatar or something, but I haven\u2019t been able to confirm./nThis reply to a similar question \u201cCan one set a custom image (icon) for a GitHub Action or GitHub Workflow? Or only GitHub Apps?\u201d, from a github staff, says/nThanks!/nHow can I partner with you to be able to customize the logo, @muzimuzhi?\nShake - we're partners. Let's get to it, ya? (Edit: I applied for realz...)\n(I feel like I'm back in 2004...)/n"
    },
    {
        "title": "vars and secrets from environment is not being populated in actions",
        "url": "https://github.com//orgs/community/discussions/49608",
        "upvotes": "362",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 8,
        "replies": 2,
        "comments": 1,
        "body": "Bug/nYou have to specify environment: xx in the body of the job/n"
    },
    {
        "title": "npm run build doesn't push",
        "url": "https://github.com//orgs/community/discussions/49114",
        "upvotes": "338",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "Bug/nCommit it to the repo/n"
    },
    {
        "title": "Writing to job summaries sometimes fails",
        "url": "https://github.com//orgs/community/discussions/32926",
        "upvotes": "289",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 2,
        "body": "We are running into a problem where writing to a job summary sometimes causes the build to fail with the message. It fails roughly 1 in 10 times:/nI've done a bit more investigation on my side by echoing the value of $GITHUB_STEP_SUMMARY. When the job above works we get something like this/nIt appears that the root cause of this was due to our self-hosted runners. Only a subset of them had been updated to the latest version. The impacted runners didn't have the support for $GITHUB_STEP_SUMMARY which is why we were running into this problem./n"
    },
    {
        "title": "Reusable workflow action refers to latest release.",
        "url": "https://github.com//orgs/community/discussions/50312",
        "upvotes": "282",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 8,
        "comments": 2,
        "body": "Question/nYou can refer to any Git ref. So for example you could create a latest branch in your repository and when you make a release (ff-)merge it into the branch./nTo refer to the latest tag of a reusable workflow in GitHub Actions, you can use the following syntax:/n"
    },
    {
        "title": "New Year, New Commitments, and New Actions \ud83c\udfc1",
        "url": "https://github.com//orgs/community/discussions/45114",
        "upvotes": "261",
        "tags": [
            "\ud83d\ude80Shipped",
            "Actions",
            "CommunityCheck-In"
        ],
        "rections": 2,
        "replies": 0,
        "comments": 0,
        "body": "Hello everyone! \ud83d\udc4b and welcome to the first Action-packed check-in of 2023. Our feature list is getting stronger each day and you don\u2019t wanna miss out on what I\u2019ve for you today./n"
    },
    {
        "title": "GitHub runners are missing.",
        "url": "https://github.com//orgs/community/discussions/47023",
        "upvotes": "258",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Question/n"
    },
    {
        "title": "Error 500 and action stuck on queue",
        "url": "https://github.com//orgs/community/discussions/47853",
        "upvotes": "236",
        "tags": [
            "Actions"
        ],
        "rections": 6,
        "replies": 9,
        "comments": 3,
        "body": "Product Feedback/nHey @gnarlyeah, there is an issue with the GitHub website./nThis problem related to Github with many incident. i checked on github status/n@gnarlyeah and @LuminousEnergy, try triggering another run of GitHub Actions./n"
    },
    {
        "title": "Not able to use App Generated Access Token to Upload a nuget package to github packages",
        "url": "https://github.com//orgs/community/discussions/47973",
        "upvotes": "233",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 4,
        "body": "Question/nI'm having similar issues. Even more strange, if I than navigate to https://nuget.pkg.github.com/xxxx/index.json or  https://nuget.pkg.github.com/xxxx/query and I put the token and my username into the browser prompt I get access to the querying functionality so I know the token's correct/nThe name of your nuget server could be wrong.\nIt must contain the github account name and not the project name/nI have an update./nHello, I've came across this discussion while I had troubles with the same thing and it turns out I had to add/n"
    },
    {
        "title": "Using deployment environment secrets and vars in a shared job",
        "url": "https://github.com//orgs/community/discussions/48179",
        "upvotes": "228",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 2,
        "replies": 2,
        "comments": 1,
        "body": "Question/nYou are right it is easy to get confused about the difference of env and environment in GitHub Actions. There is definetly a name clash./n"
    },
    {
        "title": "No Artifacts in UI show Although log shows that Artifacts has been uploaded successfully",
        "url": "https://github.com//orgs/community/discussions/47721",
        "upvotes": "216",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "Bug/nThis is pretty unfortunate. It was really easy to be able to download artifacts from the UI and also be able to delete them. Can we please have this back?/n"
    },
    {
        "title": "The Repository Actions Runners List is in Public Beta",
        "url": "https://github.com//orgs/community/discussions/63838",
        "upvotes": "212",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 19,
        "replies": 12,
        "comments": 9,
        "body": "We're excited to announce the latest addition to GitHub Actions: the Repository Actions Runners List! As we continuously strive to improve your development and CI/CD workflows, this new feature aims to make your GitHub Actions experience smoother and more intuitive./nWe have repo's with self hosted runners assigned to it (in \"Settings/Actions/Runners\"), but we don't see then in the \"Actions\" tab of the repo?\nDon't know if this is normal? We have a paid team plan./nDon\u2018t see them in an org with a payed team plan. Slow rollout or something wrong?/nI see that this is getting enabled for GitHub Enterprise Cloud but doesn't seem to be planned for those using Enterprise Managed Users. Why is that case and will EMUs eventually get in down the line?/nCan you add the status of each runner, or even better the specific active job?\nThis is definitely a step in the right direction but having the status would greatly increase the visibility for the team./nCan you add the cpu/mem/disk details for the self hosted runners as you've done to the GitHub hosted runners?/nAnother issue: clicking \"...\"-> \"Copy label\" will copy the runner NAME and not the LABEL(s).\n/nWhat are the future plans for the Actions & Actions.Runners tab?\nDo we need to expect other features coming in the near future?\nCurrently there's just a list with runners.\nI mean things like:/nIs the Repository Actions Runners list (self-hosted) available through API call?/n"
    },
    {
        "title": "How to get base_ref/head_ref on event issue_comment triggered from a pull request ?",
        "url": "https://github.com//orgs/community/discussions/49628",
        "upvotes": "210",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 2,
        "comments": 1,
        "body": "Question/n@LPauzies it's possible to derive the PR number from the event metadata (github.event.issue.number) and check out the branch from that.\nThis solution worked for me:\nactions/checkout#331 (comment)/n"
    },
    {
        "title": "jobs.<job-id>.if should support matrix context",
        "url": "https://github.com//orgs/community/discussions/60448",
        "upvotes": "202",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 1,
        "replies": 0,
        "comments": 1,
        "body": "Question/nI expect to use if to achieve manual triggering to specify the matrix I want , not all matrix./n"
    },
    {
        "title": "Please support milestoned and demilestoned events for pull request (not just issue)",
        "url": "https://github.com//orgs/community/discussions/8674",
        "upvotes": "178",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 1,
        "replies": 1,
        "comments": 1,
        "body": "I have been waiting very long for this one. Also see https://github.community/t/feature-request-add-milestone-changes-as-activity-type-to-pull-request/16778/10/nThanks @pllim - GitHub Actions triggers work based on events that come from other parts of the platform.  In this case, this is part of the pull request platform, so once they add this data to their event payloads we'll be able to add support for triggering based on it in GitHub Actions.  I've asked the team that looks after pull requests to take a look./n"
    },
    {
        "title": "Possible Undocumented \"Pending\" State in Check Suite API Response",
        "url": "https://github.com//orgs/community/discussions/66341",
        "upvotes": "173",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Product Feedback/n"
    },
    {
        "title": "Http request 'GET' to https://api.github.com/ failed with Unauthorized",
        "url": "https://github.com//orgs/community/discussions/49318",
        "upvotes": "155",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Product Feedback/n"
    },
    {
        "title": "How to control notifications for cron triggered workflows?",
        "url": "https://github.com//orgs/community/discussions/25351",
        "upvotes": "154",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 3,
        "body": "How can I specify a list of users that get notified when a cron triggered workflow fails?\nRight now it appears that whichever user last pushed the codebase is the one and only user that gets notified./nHi @pcstout,/nThank @weide-zhou! This is exactly what I needed. Works perfectly./nRight now it appears that whichever user last pushed the codebase is the one and only user that gets notified/n"
    },
    {
        "title": "Self-hosted runner stuck in \"Waiting for a runner to pick up this\" about 2-5 minutes",
        "url": "https://github.com//orgs/community/discussions/46469",
        "upvotes": "147",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 1,
        "comments": 1,
        "body": "Product Feedback/n@liweijian I am stuck in the same situation. Did you find any solution?/n"
    },
    {
        "title": "Ordering of matrix jobs when running",
        "url": "https://github.com//orgs/community/discussions/68732",
        "upvotes": "145",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Bug/n"
    },
    {
        "title": "Github Actions could benefit significantly from Dynamic Programming features",
        "url": "https://github.com//orgs/community/discussions/38571",
        "upvotes": "1288",
        "tags": [
            "Actions"
        ],
        "rections": 18,
        "replies": 4,
        "comments": 1,
        "body": "It would be great if we could memoize our Github Actions and skip networking (and many other non-performant behaviors)./nI can't speak for the general case, but we are working on a performance optimization (internally called \"skipping green trees\") specifically around Git tree state -- that if your tree SHA is the same as what has been seen previously, we will just skip running the jobs and give you the same output & artifacts from the previous run. The use cases are a) on a merge to main you don't need to rebuild everything and b) if you revert a commit we can just give you the artifacts from the previous state./n"
    },
    {
        "title": "Download-artifact doesn't find existing artifact",
        "url": "https://github.com//orgs/community/discussions/26375",
        "upvotes": "1078",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 2,
        "body": "I have a problem with a scheduled job./nThe documentation on Downloading artifacts during a workflow run says this:/nOh, I missed it from the documentation of the action itself. Thanks @airtower-luna .\nWill try accessing it through the API, which indeed allows to look and get artifacts.\nThere is already an action that does what I wanted: download-workflow-artifact/n"
    },
    {
        "title": "How do I run commands concurrently?",
        "url": "https://github.com//orgs/community/discussions/26864",
        "upvotes": "551",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 2,
        "body": "I have a project uses interprocess-communication using RabbitMQ./nIt sounds like you might want to run the server in the background?\u00a0 The & symbol at the end of a command in bash will run the command in the background.\u00a0 For example, to run rabbitmq-server in the background, and the receiver _also_ in the background, and then run (blocking) on the sender:/nThis doesn\u2019t seems work on windows. The script won\u2019t report error, but looks like not execute in the end. My case is using choco install nasm vscode & /n"
    },
    {
        "title": "Access token not working",
        "url": "https://github.com//orgs/community/discussions/26869",
        "upvotes": "485",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 5,
        "body": "package.json/nHi @callumok2004,/nHello, @jcansdale!/nNow the npmjs main page is serving json:/nCould you please clarify why $GITHUB_TOKEN should suddenly appear in my environment variables?/n"
    },
    {
        "title": "Failure to find file when building docs",
        "url": "https://github.com//orgs/community/discussions/26873",
        "upvotes": "477",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 8,
        "body": "I am trying to build Sphinx documentation for my python project using Github Actions and I am hitting an error stating that the relevant file is not found. The documentation builds fine locally (it works on my machine!). I thought it was might be an issue with location of file but that doesnt seem to be the case as from as the paths in the error hold the correct relative position./nYour code was referencing a directory that does not exist./nThank you, mate, I have no idea why it was ever Game instead of game!/nIf that\u2019s from the Actions build, too, I\u2019d guess it\u2019s tests having issues with the runner VMs not having displays and sound cards. Could you run tests in a headless mode? If not you might need to set up some sort of emulation./nI think all the tests are headless but given this is just to build documentation I would have thought it was all headless anyway./nI think all the tests are headless but given this is just to build documentation I would have thought it was all headless anyway./nAh, I am with you. That makes sense and it gives me a clear way forward. Thank you very much. I\u2019ll refactor to avoid those sort of calls and see how it goes./nLegend, that did it! Thank you again!/nNice, thanks for the update! \ud83d\ude38/n"
    },
    {
        "title": "Updates from the Code to Cloud world",
        "url": "https://github.com//orgs/community/discussions/28909",
        "upvotes": "415",
        "tags": [
            "\ud83d\udce3ANNOUNCEMENT",
            "Actions",
            "CodeSecurity",
            "Copilot",
            "ProductFeedback",
            "CommunityCheck-In"
        ],
        "rections": 5,
        "replies": 5,
        "comments": 2,
        "body": "Hello \ud83d\udc4b  and welcome to another Code to Cloud check-in. I am sure you have started to settle into the new Community space. We\u2019ve been busy settling down too and my team has put together a ton of resources to help you get started. \ud83c\udfc1/n"
    },
    {
        "title": "Feedack \"Design improvements to GitHub Actions navigation\"",
        "url": "https://github.com//orgs/community/discussions/36104",
        "upvotes": "362",
        "tags": [
            "Enhancement",
            "Actions",
            "ProductFeedback"
        ],
        "rections": 6,
        "replies": 0,
        "comments": 4,
        "body": "Hi,\nreferring to https://github.blog/changelog/2022-10-13-design-improvements-to-github-actions-navigation/ , here some feedback of my negative experience:/nSame as above.\nOtherwise I like the changes./nSame here. It still unthinkable how you cannot organize your actions in any way (categories, order etc).\nExample of good UI (from TeamCity)\n/nSame here, with our set of templates called AL-Go for GitHub, we have a series of workflows, which is larger than the new optiomization:\n/nWhy am I not seeing the new design in my repository?/n"
    },
    {
        "title": "Marketplace actions: additional insights and usage metrics",
        "url": "https://github.com//orgs/community/discussions/38770",
        "upvotes": "338",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 2,
        "comments": 1,
        "body": "Product Feedback/nApparently there's private beta which may answer your questions, available under Org Insights...\n/n"
    },
    {
        "title": "Support for environments in secrets for Dependabot",
        "url": "https://github.com//orgs/community/discussions/40090",
        "upvotes": "289",
        "tags": [
            "Actions",
            "Dependabot",
            "ProductFeedback"
        ],
        "rections": 2,
        "replies": 0,
        "comments": 1,
        "body": "Product Feedback/nSame issue but even going further than the PR itself...\nIf dependabot merges a PR, the secret source for the subsequent push workflow is not actions, but rather dependabot./n"
    },
    {
        "title": "GitHub workflows started to fails",
        "url": "https://github.com//orgs/community/discussions/27056",
        "upvotes": "282",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 2,
        "replies": 0,
        "comments": 11,
        "body": "Workflows pinned actions with SHA have been failing since yesterday./nThat commit doesn\u2019t seem to exist in the actions/checkout repository. That explains the failed download, but if the same commit ID worked before it seems like something weird is going on. \ud83e\udd14/nThat commit doesn\u2019t seem to exist in the  actions/checkout repository /nYes, exactly. I have no idea why, but trying to view the commit doesn\u2019t work (404)./nThis is SHA of v2 ref, not commit id. You can see via API:/nAlso, it was already working like this. It suddenly stopped working yesterday./nThe issue may not be exactly about pinning the SHA either. The only error I can see is this./nAs I understand the documentation (jobs.<job_id>.steps[*].uses) specifying a commit SHA to pin the version is the intended use, not other objects. So unless pinning the commit ID fails, too, my guess is that there was some internal change that broke something that wasn\u2019t intended to work./nAs you said, using the latest  version commit hashes fixed the issue. But since it broke while working with tag hashes, I reported the situation to the github support team. Thanks./n\ud83d\udc4b Hey @afbora,/nYou use too many acronyms which I have no idea of their meaning such as Pull and here the use of SHA./nTo learn Git terms, take a look at the Git Book. \ud83d\ude42/n"
    },
    {
        "title": "Are the services in a matrix shared?",
        "url": "https://github.com//orgs/community/discussions/26066",
        "upvotes": "261",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 2,
        "body": "Hello to everyone,/nEach matrix entry creates a job, and each job gets assigned its own runner (which for Github hosted runners means a fresh VM). So the environments are completely separate./nThank you very much for the quick ans complete answer./n"
    },
    {
        "title": "Docker Compose YAML Invalid but Works Locally",
        "url": "https://github.com//orgs/community/discussions/39333",
        "upvotes": "258",
        "tags": [
            "Actions",
            "Issues"
        ],
        "rections": 3,
        "replies": 4,
        "comments": 3,
        "body": "Bug/nAlso here is my output from running docker info on my machine:/nAlso, I just tested using a similar strategy just building docker images explicitly instead of using docker compose build syntax through this: https://github.com/marketplace/actions/build-and-push-docker-images. In this syntax, I am able to pass build secrets securely, however, I'd like to be able to use docker compose build as that is a cleaner way to do this./ndocker-compose (used in your script) and docker compose (which you mentioned later) are very different tools, the latter being meant as a replacement for the former. So I'm not surprised docker-compose doesn't support some newer features./n"
    },
    {
        "title": "Is it possible to checkout code before starting a service?",
        "url": "https://github.com//orgs/community/discussions/25792",
        "upvotes": "236",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 4,
        "replies": 0,
        "comments": 1,
        "body": "I\u2019m using the service containers to spin up a couple of services my tests need. It\u2019s working great!/nIs it possible to have checkout happen before the services start? Any tips for making a user supplied config is available to a service container./n"
    },
    {
        "title": "How to get the author of a PR?",
        "url": "https://github.com//orgs/community/discussions/25502",
        "upvotes": "233",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 1,
        "replies": 1,
        "comments": 15,
        "body": "I have these in my yml file:/n@zachliu,/nThanks. But in my case, the workflow is triggered by issuing a comment. Will this still work?/n@zachliu,/nGreat! I\u2019ll give it a go and report back \ud83d\ude4f/n@zachliu,\nOkay. Please go ahead, and any update, feel free to tell me./n@zachliu,/nIt\u2019s a bit confusing now. Let me tell the story again:\nIf A opens a PR and triggers a workflow, it\u2019s easy to get A\u2019s username in the workflow\nIf B comments on A\u2019s PR and triggers another workflow, how do I still get A\u2019s username in this workflow?/n@zachliu,/nIs it issue or issues in {{ github.event.issue.user.login }}? You meant issues right?\nI can\u2019t find issue under webhook events./n@zachliu,/nGreat it works! Thank you!/n@zachliu,/nI have/n@zachliu,/nThank you so much!/n"
    },
    {
        "title": "Multiple problems (wrong title / job state) in the UI for reusable workflows + matrix",
        "url": "https://github.com//orgs/community/discussions/42183",
        "upvotes": "228",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Bug/n"
    },
    {
        "title": "Mouse over text of the full job name in the jobs list",
        "url": "https://github.com//orgs/community/discussions/41364",
        "upvotes": "216",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "Product Feedback/nAlternatively, the list could also be made wider or adjust its width more dynamically to available space.\nMy workflows are never taking even half of the screen, even with everything expanded, but the side job list and items in the graph always insist on clipping the name for no reason.\n/n"
    },
    {
        "title": "Trigger workflow_dispatch event for non-default branch?",
        "url": "https://github.com//orgs/community/discussions/41157",
        "upvotes": "212",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Product Feedback/n"
    },
    {
        "title": "Problem with file permissions in bind mount shared by consecutive containers",
        "url": "https://github.com//orgs/community/discussions/44243",
        "upvotes": "210",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 1,
        "replies": 8,
        "comments": 6,
        "body": "Question/nPing ping!/nPinging again. I've also opened a support ticket for this: 1970875./nSharing a screenshot of what we've discussed so far in case it helps someone. But as far as I'm concerned, this is a problem that needs to be fixed on the GH side./nDoes it help in your situation to run umask 0000 in the same step as the docker run command?/nHey there @banool  The first container, in particular, is writing a file to a volume mount with permissions set to -rw\u2014\u2014\u2014-, and the second container is unable to read that file due to permission errors. The problem may be that environment differences between your local machine and the GH environment cause the problem. A possible workaround is to use the chmod command inside the first container before exiting to change the file's permissions so that the second container can read it. Have you contacted the Docker community, as they may be able to assist you as well?/nOkay sweet Jesus I finally figured it out. So the problem was, as Arthur suggested in the support ticket, that the container was running as root and creating the file in the bindmount as root. Why it would work this way when it doesn't work like that locally is beyond me, one of the two environments (probably my local Docker Desktop setup on Mac honestly) is doing some magic to make the container run as the host user automatically./n"
    },
    {
        "title": "I'm losing faith/interest in Actions (and GH) fast",
        "url": "https://github.com//orgs/community/discussions/57665",
        "upvotes": "202",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Product Feedback/n"
    },
    {
        "title": "Github Action Job Status is Wrong",
        "url": "https://github.com//orgs/community/discussions/65359",
        "upvotes": "178",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 1,
        "replies": 0,
        "comments": 0,
        "body": "Bug/n"
    },
    {
        "title": "Question about expression context parsing",
        "url": "https://github.com//orgs/community/discussions/26337",
        "upvotes": "173",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 5,
        "body": "This might be the dumbest question ever\u2026/nalso as a followup, is it possible to create a workflow level environment variable using bash to evaluate something dynamically?/n$MYVAR is Bash (and generally Unix shell) syntax. ${{ env.MYVAR }} is Github actions syntax. So you can use the former wherever you have a shell, which is in the run part of steps (unless you set another interpreter, or run on Windows)./nThanks! I wasn\u2019t sure if run was the only step that supports shell syntax./nThere\u2019s no equivalent at the workflow level. The syntax I mentioned above works at the job level, for all steps after the one setting the variable./nThanks, too bad. I guess I\u2019ll have to create a feature request for that!/n"
    },
    {
        "title": "Github Actions do not seem to support .yml-files",
        "url": "https://github.com//orgs/community/discussions/26124",
        "upvotes": "155",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 3,
        "body": "I\u2019ve been a GitHub Actions user since the early beta days and when I heard the news about the new CI/CD-capabilities, I decided to try it out again. I\u2019ve created a new repo, added a .github/workflows/main.yml with some content taken from one of your examples and expected a job to start running, but nothing happened. The Actions tab did not even detect the file. Creating an old, good .github/main.workflow did however work, so it got me thinking that I might not have yet gotten access to the latest version of GitHub Actions. Has anyone else experienced this problem?/nI\u2019m confused about this too. Everything looks the same way they did when I first enrolled to the actions beta. Nothing they showed on the conference is working. Is this intended? Are these features coming later? If so, this seems to be rather poor messaging on GitHub\u2019s part. \ud83d\ude15/nLooks like the new features aren\u2019t available to most people quite yet. Someone who appears to be from github\u00a0replied to my question on twitter./nYes, I too am having the same experience. Was already using Actions, then tried to create a new one for C++ CI by hand following documentation. My interface does not look like the recently updated documentation, so my account/repo must not yet be migrated. Currently all Actions are dead for me. Clicking the Actions tab yeilds a frustrating response of \u201cSorry, something went wrong.\u00a0Reload?\u201d But that is of new use.\u00a0/n"
    },
    {
        "title": "No post run capability for composite actions?",
        "url": "https://github.com//orgs/community/discussions/26743",
        "upvotes": "154",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 6,
        "body": "According to Metadata syntax for GitHub Actions - GitHub Docs, it looks like there isn\u2019t the ability to specify steps for the action to be executed \u201cpost run\u201d. This capability exists for Javascript and Docker actions but not composite./n@pcolmer,/nThanks for the clarification/confirmation./n@pcolmer,/nHope post for composite action./nPost scripts from actions that your composite action executes still run\nso even though post is not supported directly you can use something like this/nAs another option, you can use run-and-post-run-action, which allows you to define both run and post commands, and also supports multiple command execution./n"
    },
    {
        "title": "Modify repo file with Actions",
        "url": "https://github.com//orgs/community/discussions/25833",
        "upvotes": "147",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "I want to create an Action that changes a file in my repository. Files written to the local file system inside the Action will dissapear when the workflow is done. What is the best approach to modify files? Can Actions create commits?/nHi\u00a0@estensen,/n"
    },
    {
        "title": "Permission denied to create file in \"/github/home/\" folder",
        "url": "https://github.com//orgs/community/discussions/25841",
        "upvotes": "145",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 3,
        "body": "I have this simple workflow to build a Flutter app, but it is failing to create a file at the home /github/home/ folder./nI\u2019m not familiar with the cirrusci/flutter container.\u00a0 What user is that running as?\u00a0 You may need to run some commands in that container as root./nflutter pub get will create ~/.pub-cache/nSolved it by adding \u201csudo\u201d before any command that requires permission. It also requires that the full path of Flutter is referenced when executing the commands./n"
    },
    {
        "title": "ENV vars are not expanded, causing DRY violations",
        "url": "https://github.com//orgs/community/discussions/25850",
        "upvotes": "1288",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 2,
        "body": "Problem:/nNo, that\u2019s not expanded since the YAML is not evaluated in the context of the bourne shell.\u00a0 You can use the YAML variable expansion, though:/nNice! I\u2019ll give that a shot and will report back./n"
    },
    {
        "title": "Selecting an Xcode version?",
        "url": "https://github.com//orgs/community/discussions/25870",
        "upvotes": "1078",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 3,
        "body": "According to the documentation, the macOS-latest image includes many versions of Xcode. But how do I select one?\u00a0/nxcode-select -switch/nAs another way, you can use DEVELOPER_DIR env variable./nThanks. I guess I expected some specific syntax for Xcode version, not to have to set the version manually./n"
    },
    {
        "title": "Although in the new beta, new repos have the old actions",
        "url": "https://github.com//orgs/community/discussions/25890",
        "upvotes": "551",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 17,
        "body": "I\u2019ve successfully setup the new actions for one repo, but now that i want to do it for another repo, i don\u2019t see a way to \u201cupgrade\u201d it or \u201cenable\u201d the new actions. I honestly can\u2019t remember how i got the first repo enabled, but i would like to be able to use it with multiple repos\u00a0/nWhen I create a new repo, the actions is already upgraded to the new system. Have you tried creating the .github/workflows/<something>.yml file to see if it works?/nI have not tried that yet. good point though :slight_smile: i\u2019ll give that a shot/nno luck\u2026it\u2019s a public repo, but making it private doesn\u2019t seem to make a difference\u2026/nHi Dennis,/nthat would be awesome! thanks\u00a0@mscoutermarsh\u00a0/nDone. try now. \ud83d\ude0e/nsuccess!! thank you!/n@mscoutermarsh I\u2019m having the exact same issue. I have been enrolled in both the old and new betas and have a new repo that seems to insist on only using the old workflow syntax. Adding a new style workflow file https://github.com/softprops/rust-bin/blob/master/.github/workflows/main.yml in place doesn\u2019t seem to be detected by the actions tab./n@softprops Just enabled for your entire account. Give it a try now \ud83d\ude00/nSame issue for me, I was only able to upgrade a single repo - I have quite a number of them and I\u2019d like to switch them all from webhooks to actions \ud83d\ude04/nAlso having the same issue. I would like to use the new actions in my other repos as well./n@mscoutermarsh you are the best! Thanks for the fast turn around./n@alfg\u00a0\u00a0and\u00a0@filliph\u00a0, I\u2019ve enabled your user accounts./nseems like I am having the same problem/nI believe I\u2019m seeing the same thing as well. New repos appear to have new workflows, but all of my old ones do not. An organization I\u2019m in also just got access to the beta, and even its older repos are using the new style, so perhaps I\u2019m in a weird limbo too! \ud83d\ude2c/n+1 any chance of having my whole\u00a0@chrisns account done so my new repos can use new actions?/nIf this happens to anyone else, you can get around it by creating an HCL syntax workflow. Then you\u2019ll see the option to upgrade. You need an old-style one and then it will just offer it and you can move forward without waiting for staff to upgrade you manually./n"
    },
    {
        "title": "Stay Code-Connected! Code to Cloud updates",
        "url": "https://github.com//orgs/community/discussions/30511",
        "upvotes": "485",
        "tags": [
            "Actions",
            "CodeScanning",
            "CodeSecurity",
            "CodeSearchandNavigation",
            "Copilot",
            "ProductFeedback",
            "CommunityCheck-In"
        ],
        "rections": 14,
        "replies": 1,
        "comments": 3,
        "body": "GitHub is on a mission to build technology that makes developers happy and productive. As the #1 CI/CD tool used on GitHub repositories, GitHub Actions is poised to increase the development velocity and increase software reliability for developers. This week I bring you some thrilling new updates, product releases and events from all corners of Code to Cloud. Let\u2019s go! \ud83d\ude80/n"
    },
    {
        "title": "Can't check out a different branch on a submodule",
        "url": "https://github.com//orgs/community/discussions/26818",
        "upvotes": "477",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 6,
        "replies": 0,
        "comments": 6,
        "body": "I\u2019m using actions/checkout@v2 to check out a repo and all its submodules. or From my workflow:/nOkay, I\u2019ve tried lots of new things, and I figured something out. I can see the remote refs like this:/nHi @aormsby,/nOoooohhhhhh, this makes complete sense. I just didn\u2019t realize I needed to set the branch property of .gitmodules to sync it that way. Nice solution./nOkay, I\u2019ve got it! The original solution I marked got me really close to the right functionality, but there were still some issues coming through. However, I want to thank @weide-zhou for their help. I couldn\u2019t have come to these solutions without the push. :slight_smile:/n@aormsby thank you so much! your back-and-forth (plus the detailed examples) saved me a whole bunch of time./nTurns out you can also do this:/n"
    },
    {
        "title": "Missing $GITHUB_REF in release event",
        "url": "https://github.com//orgs/community/discussions/64993",
        "upvotes": "415",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Bug/n"
    },
    {
        "title": "How to get Workflow url related to the current action?",
        "url": "https://github.com//orgs/community/discussions/27114",
        "upvotes": "362",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 3,
        "replies": 0,
        "comments": 2,
        "body": "I am building an actions workflow. In the action, I would love to get the path of the workflow file that is responsible for running this action?/nUsing the github context object, you can get the display name of the workflow:  ${{ github.workflow }}/nThanks @mickeygousset. I have instead used Github API for getting workflows./n"
    },
    {
        "title": "curl: (7) Failed to connect to more.musl.cc port 443: Connection timed out",
        "url": "https://github.com//orgs/community/discussions/27906",
        "upvotes": "338",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 10,
        "replies": 7,
        "comments": 4,
        "body": "Hi,/nSame issue here./nTimeout without any connection makes me think of some kind of firewall, that's usually the cause of something like this. Your workflow seems to be downloading other data just fine, so it's probably not the Actions infrastructure in general./nhey guys, I am using cURL directly on GitHub Codespaces without anything being installed ! ( You also have there by default Git, Bash, Java etc. ) That is awesome ! and unlike local installation like this that can interfere with the functionalities, you don't worry about that using GitHub Codespaces,/nHi, @gabek did email me. Thanks for reaching out and creating a discussion about this./n"
    },
    {
        "title": "Workflow conditional cancel-in-progress",
        "url": "https://github.com//orgs/community/discussions/49963",
        "upvotes": "289",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 1,
        "replies": 3,
        "comments": 3,
        "body": "Question/n@big-andy-coates Curious if you ever found a solution here? I wonder if the issue with your current approach is ${{ github.event_name == 'push' }} resulting in a string \"true\", not a boolean. For an if clause, you can remove the ${{ }} wrapping and just write if: github.event_name == 'push'. However, that doesn't seem to be valid syntax here (must be a boolean, not a string). Perhaps I'm getting it mixed up with actions/runner#1483 though/nPregunta/nEuh../n"
    },
    {
        "title": "Could we have workflow_dispatch and workflow_call write to the same inputs dict",
        "url": "https://github.com//orgs/community/discussions/17240",
        "upvotes": "282",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "So I have a workflow docker-push that pushes a random ref to our DockerHub.  And I have a workflow rollout that pushes a random DockerHub image to our deployments.  And then hopefully understandably, I have a 3rd workflow that wraps those two workflows and says \"Run these\"./nHow about this? I think the no-op run: true is required./n"
    },
    {
        "title": "Nested Workflow Names on Left Pane",
        "url": "https://github.com//orgs/community/discussions/44918",
        "upvotes": "261",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 2,
        "body": "Bug/nAccording to the docs, we're limited to 4 levels of nesting, ie, the top level and 3 more./nAny workaround here?/n"
    },
    {
        "title": "Path to action in the same repository as the workflow when workflow is inside a different private repository than the triggering workflow",
        "url": "https://github.com//orgs/community/discussions/70532",
        "upvotes": "258",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Product Feedback/n"
    },
    {
        "title": "\u26f5 Charting Our Course - Actions Community Check-in",
        "url": "https://github.com//orgs/community/discussions/58226",
        "upvotes": "236",
        "tags": [
            "\ud83d\ude80Shipped",
            "Actions",
            "CommunityCheck-In"
        ],
        "rections": 6,
        "replies": 6,
        "comments": 2,
        "body": "If you're moving to GitHub.com and excited about all of the great features developers love\u2014from GitHub Actions to GitHub Codespaces\u2014you\u2019ll have existing data that you want to bring with you. This week we launched another great feature, GitHub Enterprise Importer, a self-serve tool which empowers teams to migrate their code, history, and collaboration context to GitHub Enterprise Cloud so your team doesn\u2019t miss a beat and can get right to enjoying those great features./n@Akash1134\nCan you comment on the future of GitHub JavaScript Actions after Node.js 16 enters end-of-life in September 2023? (Also mentioned in https://github.com/orgs/community/discussions/53217.)/n\ud83d\ude4c/n"
    },
    {
        "title": "Can't access Dependabot alerts API via GitHub Action default token",
        "url": "https://github.com//orgs/community/discussions/60612",
        "upvotes": "233",
        "tags": [
            "Bug",
            "Actions",
            "Dependabot"
        ],
        "rections": 1,
        "replies": 0,
        "comments": 2,
        "body": "Bug/nI've set up a minimal reproduction public repository in https://github.com/laughedelic/dependabot-alerts-gha-access:/nThe default GITHUB_TOKEN alone will never have enough permissions on its own to call the API that lists Dependabot alerts for a specific repository, because the underlying Actions App the token is minted for can't be customized to have the Dependabot alerts read permission./n"
    },
    {
        "title": "Deceptive site ahead on Git page",
        "url": "https://github.com//orgs/community/discussions/51769",
        "upvotes": "228",
        "tags": [
            "Actions"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "Question/nAny of your sites had something that looks like some other website? For example a twitter clone for practicing. Google may mark your site as phishing website if so./n"
    },
    {
        "title": "runner configuration without prompt",
        "url": "https://github.com//orgs/community/discussions/26893",
        "upvotes": "216",
        "tags": [],
        "rections": 14,
        "replies": 3,
        "comments": 4,
        "body": "Hello,/nYou can try the following command lines, when you install an self-hosted runner, enter the correct values of the parameters into the command lines./nThanks, it\u2019s very helpful/n\u2013agent seems to have been replaced --name/nIf you already have config.sh it takes the argument --help which outputs:/n"
    },
    {
        "title": "Secret with special/escape characters fails when used",
        "url": "https://github.com//orgs/community/discussions/25541",
        "upvotes": "212",
        "tags": [],
        "rections": 2,
        "replies": 0,
        "comments": 2,
        "body": "I am using a macos-latest executor to build a React Native app for iOS. The build itself works fine but deploying to TestFlight (via Fastlane) fails due to incorrect formatting of the Apple ID session token. I am generating the token locally and then saving it as a secret in the GitHub repo per this documentation. The Fastlane script expects the token to be available via environment variable FASTLANE_SESSION so I am exporting the value of the secret as the environment variable per the GitHub actions documentation. It should be noted that the token string has special and escaped characters and Apple expects it to be formatted exactly as it is generated. I have tested locally and the session tokens I have generated are valid - they only fail when being read from the secret store in GitHub Actions. The Fastlane step fails with the following error:/nHey\u00a0@derek-ef\u00a0,/nWell, I suppose the string would be different if it had a $ at the beginning\u2026 yesterday was a long day./n"
    },
    {
        "title": "This request was automatically failed because there were no enabled runners online to process the request for more than 1 days.",
        "url": "https://github.com//orgs/community/discussions/28226",
        "upvotes": "210",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "I have a self-hosted runner and long build times. I add 50-100 jobs to the queue. Each job can be 5-10 hours.\nJobs fail before the runner can take them. The limitation is ridiculous. I specified timeout-minutes: 144000\nwhich is 10 days. I will have to build a custom job queue and move away from GitHub because of this issue. Is there a way to actually set up a timeout longer than 1 day??\nP.S. I'm referring to Job queue time which is hardcode limited to 1 day according to documentation.https://docs.github.com/en/actions/hosting-your-own-runners/about-self-hosted-runners#usage-limits/nI have more or less the exact converse issue. I have a job that runs every night and takes minutes, but which is important and I want to know if it fails much quicker if runners go down and fail to pick it up. It would be really nice to be able to set this to a lower (or higher) value./n"
    },
    {
        "title": "Support for variables",
        "url": "https://github.com//orgs/community/discussions/27370",
        "upvotes": "202",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "I would like to be able to reuse certain patterns (strings, especially) in my workflow file. Since yaml anchors aren't supported (#4501, https://github.community/t/support-for-yaml-anchors/16128, actions/runner#1182), this is especially desirable. Frequently I can put such variables in the top-level env field, but the env context is not available everywhere. I've encountered issues with wanting variables in the \"runs-on\" field and for job env variables that contain common strings. Additionally, this somewhat an abuse of env, since I don't actually need these variables available in the environment, necessarily./nI have but only one upvote to give./n"
    },
    {
        "title": "github actions repository dispatch \"message\": \"Problems parsing JSON\"",
        "url": "https://github.com//orgs/community/discussions/28224",
        "upvotes": "178",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 6,
        "replies": 5,
        "comments": 2,
        "body": "I am trying to create an actions workflow that can be triggered from an external event. Upon researching, found out I can do it through repository_dispatch./nHere's your problem:/nI made the changes that @airtower-luna suggested, but the error persists. In the remote repo workflow file I have enabled both workflow_dispatch and repository_dispatch. I want to go with workflow_dispatch which is more flexible./n"
    },
    {
        "title": "Share concurrency between different repos of an organization.",
        "url": "https://github.com//orgs/community/discussions/40907",
        "upvotes": "173",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 2,
        "replies": 1,
        "comments": 3,
        "body": "Question/nHi @mohamedzhioua Thanks for the answer./nThis morning, I asked the same question after seeing that two jobs from two repos with the same concurrency group ran simultaneously.\nYou're right - there is no clear answer in the docs.\nBut https://docs.github.com/en/actions/using-jobs/using-concurrency says: \"If you have multiple workflows in the same repository, concurrency group names must be unique across workflows to avoid canceling in-progress jobs or runs from other workflows.\"/n"
    },
    {
        "title": "Understanding Cache Action keys",
        "url": "https://github.com//orgs/community/discussions/25027",
        "upvotes": "155",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "Can someone please help me understand how the cache keys work in the Cache Action?/nCaches not only can be shared between workflow runs, you also can share caches between jobs in the same workflow run. So when using github.sha in the key is feasible. The key can be any combination of variables, context values, static strings, and functions.\nAn ordered list of alternative keys to use for finding the cache if no cache hit occurred for key. If you provide restore-keys, the cache action sequentially searches for any caches that match the list of restore-keys./n"
    },
    {
        "title": "Github Actions for PyPI: files not detected in dist/",
        "url": "https://github.com//orgs/community/discussions/65497",
        "upvotes": "154",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "Question/nHey friends, did you find the solution?/n"
    },
    {
        "title": "Runner Set feature request: Add ability to add annotations to Runner Pods once they start running a job",
        "url": "https://github.com//orgs/community/discussions/82207",
        "upvotes": "147",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 6,
        "replies": 0,
        "comments": 0,
        "body": "Product Feedback: Feature Request/n"
    },
    {
        "title": "Job with dynamic matrix crashes if matrix contains zero elements. How to resolve?",
        "url": "https://github.com//orgs/community/discussions/27096",
        "upvotes": "145",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 1,
        "replies": 2,
        "comments": 5,
        "body": "Hi all.  I have a GitHub action with two jobs.  The first job returns an array, which I\u2019ve been able to pass to a second job which then uses that array as its matrix.  But the first job can sometimes return an array with zero length, and when it does, the second job crashes with the error:/nTry putting some sort of condition if statement on Job 2, where you do something like:/nOK perfect, thanks\u2013that works!  I had found a way to set a condition on a particular step in a job, but didn\u2019t know how to put a conditional on an entire job, which is exactly what I needed./nCan you share what the if statement looks like?/nIt\u2019s essentially what you gave me :slight_smile:/nFor those looking to prevent builds with empty matrices in the form of empty JSON array's, a conditional in the following form worked for me:/n"
    },
    {
        "title": "Conditional Expression Syntax",
        "url": "https://github.com//orgs/community/discussions/25014",
        "upvotes": "1288",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 2,
        "body": "I\u2019m looking for the ability to use a conditional within an expression.\u00a0 For example, if the github.head_ref starts with a certain prefix, I would like to change an environment variable for every job in the workflow.\u00a0 (Yes, I could make two workflows, but since GitHub Actions / YAML in general doesn\u2019t support including other YAML files, well, code duplication sucks no matter where it is\u2026)/nFor top level env, which is used for all jobs in the workflow, it doesn\u2019t accept \u2018if\u2019 expression.\u00a0 You cannot set conditional expression for it./nThanks, using ::set-env allows me to conditionally set them based on shell logic./n"
    },
    {
        "title": "workflow with \"on: push\" triggers on release?",
        "url": "https://github.com//orgs/community/discussions/25048",
        "upvotes": "1078",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 2,
        "body": "I have a workflow setup which triggers when I push files to the path \u201cwiki/**\u201d to then update the wiki of the repository./nA release triggers on: push because it pushes a tag. I think you can ignore pushes to tags and just have the workflow triggered on pushes to branches with this filter./nThanks./n"
    },
    {
        "title": "how do I get rid of github workflow",
        "url": "https://github.com//orgs/community/discussions/25117",
        "upvotes": "551",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 4,
        "body": "I am just learning GitHub.\u00a0 I added somehow .github/workflow. \u00a0 How do I get rid of it?\u00a0 It gives me errors of some kind./nIf you do not want to run any workflow for you repository, you can directly delete all the YAML files under\u00a0_ .github/workflow _ from your repository./nThank you, BrightRan.\u00a0 Much appreciated.\u00a0 Happy Thanksgiving to you and your loved ones./nThanks for this solution on a per-repo level. Having 300+ repos which are all set to enabled Actions automatically (without my consent), I wonder if there\u2019s a possibility to opt-out completely, on account level?/nDisable Action just remove the Action button. You can add \u201c/actions\u201d to the repo url to see the existing Action list.\u00a0/n"
    },
    {
        "title": "How can I use my own docker image in an action?",
        "url": "https://github.com//orgs/community/discussions/26417",
        "upvotes": "485",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 2,
        "body": "I recently discovered how to publish my own docker image to ghcr.io.\nI thought it would be handy so I can use a custom configured image in my actions. That would save me precious time in every action-run for installing all kinds of utils I need./nYou can do that with jobs.<job_id>.container, something like:/nGreat, this works! Thanks./n"
    },
    {
        "title": "Declaratively define GitHub actions",
        "url": "https://github.com//orgs/community/discussions/26424",
        "upvotes": "477",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 7,
        "body": "tl;dr: Define a GitHub Action using the workflow syntax, allowing reuse of other actions across repositories without creating own JS based wrapper actions./n@sidvishnoi,/nThanks. Shared through the feedback channel you provided.\nKeeping this open here so community members can vote and show interest./n@sidvishnoi,/nHey @sidvishnoi,/nyou are wanting a way to write an action using the yaml syntax/nIf I\u2019m understanding your comments correctly, you are wanting a way to write an action using the yaml syntax./nComposite run steps actions are also available since August:/n"
    },
    {
        "title": "Github actions IP ranges?",
        "url": "https://github.com//orgs/community/discussions/26442",
        "upvotes": "415",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 5,
        "body": "Hello, I need to know subnets of github actions, because my staging server blocks access by default and need to whitelist specific IP/Subnet, it\u2019s necessary to run e2e tests in Github Actions against my staging server. Please help./nGitHub Hosted Windows or Ububtu runner use the same IP address arranges as Azure Data Center. You can following our documentation here to get the IP address:\u00a0IP addresses of GitHub-hosted runners./nHi,/nI just checked the latest IP ranges, same filename as yours. The IP is there, as it belongs to subnet 40.70.0.0/18./nThanks for taking the time about my issue./nThis thread is a duplicate./n"
    },
    {
        "title": "Concurrency group - Workflows pending deployment environment approval block runnable workflows not requiring approval in other branch",
        "url": "https://github.com//orgs/community/discussions/18670",
        "upvotes": "362",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "I share a concurrency group for Terraform Plan for pull_requests and Terraform Apply in main branch./nRelated to:/n"
    },
    {
        "title": "Bug: We are having problems searching workflow runs. The results may not be complete.",
        "url": "https://github.com//orgs/community/discussions/14871",
        "upvotes": "338",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "When I filter actions using a branch, some results are missing, as explained by the red banner that appears at the top of the page:/nSeems we are having the same issue./n"
    },
    {
        "title": "NPM ping not working with GitHub private registry",
        "url": "https://github.com//orgs/community/discussions/14943",
        "upvotes": "289",
        "tags": [
            "Bug",
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "Hello, I filed an issue with NPM, but this maybe something that changed in GitHub's API./nHello. You can report the bug here: https://support.github.com/contact/bug-report/n"
    },
    {
        "title": "Filtering out cancelled workflows notifications",
        "url": "https://github.com//orgs/community/discussions/16987",
        "upvotes": "282",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Hi!/n"
    },
    {
        "title": "Generating *.Designer.cs from .resx",
        "url": "https://github.com//orgs/community/discussions/26244",
        "upvotes": "261",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 10,
        "body": "Hi,\nI\u2019m using C# on a project and I have resx files that generate some Designer.cs files, however since they are generated I would like to not push them on Git.\nHowever the Build phase of GitHub action doesn\u2019t generate them, but the Test phase do\nI\u2019m building with/n@Xwilarg,/nThanks for your answer,\nMy application is a console application and not a WinForm one (but I\u2019m not sure if that really matters)\nI\u2019m using it because it\u2019s easier and faster for me than creating a dictionary or a JSON file.\nVisual Studio already generate the Designer file from the resx file thanks to this code in the csproj/n@Xwilarg,/nThe issue is that I\u2019m not using any command, they are automatically generated./n@Xwilarg,/nYeah I\u2019m indeed a bit confused by that, since the .Designer.cs contains what is inside the .resx and a way to access it in C#, why isn\u2019t it \u201cgenerated from it\u201d?/n@Xwilarg,/nInside my *Designer.cs file:/nCan you elaborate a bit more on the command line to resgen.exe that can regenerate .designer.cs files? For example, sample command lines?/nI had this problem, I found a solution by reading the powershell source code.    PowerShell://docs/building/internals.md\nThe idea is simple, you compile a helper assembly that generates resx then you use a Source Generator to generate cs from that.\nhttps://devblogs.microsoft.com/dotnet/introducing-c-source-generators//n"
    },
    {
        "title": "How to trigger event on first successful merge by authors using github action?",
        "url": "https://github.com//orgs/community/discussions/26918",
        "upvotes": "258",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 4,
        "body": "I want to append the name of every user on their first successful PR merge. My current understanding is -/n@theSwapnilSaste Thanks for your feedback.\nThrough the action code, we find that this variable( firstContribution) is checked in the main.js line55. Based on your needs, you could try to append username when you add message. Such as:/n@niconbw  Can you tell how to add this username to README.md at the end in append mode ? I am new with actions./nHi @theSwapnilSaste\nPlease try to use git command to update README.md. Such as:/nHi @theSwapnilSaste\nDid the git command meet your needs? Feel free to contact me if there is any questions related to this ticket./n"
    },
    {
        "title": "Attempting to build docker image with COPY --from on Actions",
        "url": "https://github.com//orgs/community/discussions/25599",
        "upvotes": "236",
        "tags": [],
        "rections": 0,
        "replies": 1,
        "comments": 2,
        "body": "Attempting to port the creation of my public Docker images from CircleCI to Github Actions. Most of it seems to work but when it hits a/nHi,/nThanks! That indeed does the trick, I have no clue why tho/n"
    },
    {
        "title": "Workflow error (action not allowed)",
        "url": "https://github.com//orgs/community/discussions/25129",
        "upvotes": "233",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 3,
        "body": "What is happening ?/nThe error message indicates that it is only allowed to run the actions exist within your repository or organization (sundowndev). Please check the \u201cSettings\\Actions\u201d of your repository:/nHello,/nI have an action that references an external module./n"
    },
    {
        "title": "Get list of files on pull request merge",
        "url": "https://github.com//orgs/community/discussions/26604",
        "upvotes": "228",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 9,
        "body": "If I have the following workflow to trigger on a pull request merge:/nYou can use rest api to get the file list of pull request. Please refer to the link for more details./nHi\u00a0@weide-zhou.\u00a0Your snippet was very helpful, but I\u2019m having some trouble and I don\u2019t understand why, could you help me?\n/nHi\u00a0@luchiago\u00a0,/nThanks\u00a0@weide-zhou. It worked/nFILES=$(curl -s -X GET -G $URL | jq -r '.[] | .filename')/nHi @self-coding-crab,/nHi @weide-zhou ,/nI am using a private repo, do we have to include some sort of authentication in the curl command so it takes the GITHUB_TOKEN?/nHi @mattt , thank you for responding. Your command works perfectly for pull events since the URL is taking info from a pull API. But it fails for push events or when we merge the PR./n"
    },
    {
        "title": "How can I check out code with \"Enable local Actions only for this repository\" permission",
        "url": "https://github.com//orgs/community/discussions/27005",
        "upvotes": "216",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 3,
        "body": "When I set my repo\u2019s permission to \u201cEnable local Actions only for this repository\u201d, I cannot use \u201cactions/checkout@v1\u201d to check out code anymore because it is in another repo. When I do that I get error message/nI figured it out now. You need to fork the \u201cactions/checkout\u201d repo to your own organization and use that one instead./nHey\u00a0@lgylym Thanks a bunch for coming back and sharing your solution!\u00a0/nHi,/n"
    },
    {
        "title": "Package section to contain latest version number",
        "url": "https://github.com//orgs/community/discussions/5785",
        "upvotes": "212",
        "tags": [
            "Actions",
            "Packages",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "As a Github registry user that downloads packages, I would like to have the version number displayed in the Packages sidebar section of a repo so that I know quickly if new version are available/nTotally agree, but since the sidebar only shows a few of them, I'd like to have it in the full list as well:/n"
    },
    {
        "title": "Actions suddenly complains about syntax errors in yml",
        "url": "https://github.com//orgs/community/discussions/8384",
        "upvotes": "210",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 5,
        "replies": 0,
        "comments": 2,
        "body": "My actions no longer run and complain about syntax errors in the yml file, even though they worked this morning and are unchanged since./nEverything is working again for now. Thanks to whomever fixed it. \ud83d\udc4d/nSorry about the difficulty @lars-reimann - this was a bug that got reverted./n"
    },
    {
        "title": "360 minutes as default timout for github actions is too large",
        "url": "https://github.com//orgs/community/discussions/4109",
        "upvotes": "202",
        "tags": [
            "Enhancement",
            "Actions",
            "ProductFeedback"
        ],
        "rections": 2,
        "replies": 2,
        "comments": 1,
        "body": "this caused all of our CI to be stuck in queuing because 1 bad commit was causing a test to hang forever; the fix was to revert that commit and then manually go through all queued/in-process jobs to cancel / restart them, and then change CI with timeout-minutes: 60 to avoid this in the future, but IMO the default of 360 minutes is too large; this problem would've been discovered faster with a saner default of 60 minutes, which for most CI code is sufficient./nIf this is implemented, there should be an option (or default) to keep the 360 limit. I predict that lowering a timeout on a platform with so many users can cause many issues./n"
    },
    {
        "title": "Publish an action with the API",
        "url": "https://github.com//orgs/community/discussions/13498",
        "upvotes": "178",
        "tags": [
            "Actions",
            "APIandWebhooks",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Hi, I'm developing a GitHub action and want to publish it to the marketplace from CI/CD. As I see here the only way to publish action is to use the GitHub web interface. However, it is more reasonable for me (and I guess I'm not alone here) to publish it during CI/CD process. But as I see official releases API does not support publishing to marketplace feature.\nIs it possible to publish an action to the Marketplace using the API? If not, is there a plan to support that?/n"
    },
    {
        "title": "[Feature Request] PyPI Support for GitHub Packages",
        "url": "https://github.com//orgs/community/discussions/13631",
        "upvotes": "173",
        "tags": [
            "Actions",
            "Packages",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Currently, GitHub packages only supports these registries./n"
    },
    {
        "title": "Workflow notifications",
        "url": "https://github.com//orgs/community/discussions/11355",
        "upvotes": "155",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 1,
        "replies": 3,
        "comments": 2,
        "body": "We have set up a workflow runs-on: macos-latest. We have a team that manages the failure of deployment. But as per GitHub documentation, only the person who commits to the workflow action file will receive the notifications of Action status. The committed person may change time to time. Is there any way we can set up slack channel notifications for Github actions or email alerts only for workflow actions to multiple accounts?/nI keep running into the same problem. I work on a lot of GitHub Actions that are consumed by other repositories, where workflow runs are triggered by users who create issues / comment / change labels / etc. When a build fails, only they get notified. But as the responsible person / team behind these actions, I'd like to subscribe to at all builds that fail for specific workflows within a scope of a repository./nThanks for the feedback @Mohinder659 - I'll make sure that both the Actions team is looking into this, as well as the integrations team that works on Slack notifications./n"
    },
    {
        "title": "Add support for permissions.secrets so actions can write secrets",
        "url": "https://github.com//orgs/community/discussions/12424",
        "upvotes": "154",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "Actions can already read secrets if they are within the current scope, but there are some instances where a secret could be more dynamic than a long-lived static value. For example, a token might need to be rolled every so often. This could be performed automatically by a Workflow, but the default GITHUB_TOKEN cannot be scoped to manage secrets./nWhat I don't understand, is that the contents permission should encompass the secrets permission, according to https://docs.github.com/en/actions/security-guides/automatic-token-authentication#permissions-for-the-github_token and https://docs.github.com/en/rest/overview/permissions-required-for-github-apps#permission-on-contents, but in practice it doesn't work./n"
    },
    {
        "title": "Add an option to GitHub Actions config (yml) to skip sending email notifications",
        "url": "https://github.com//orgs/community/discussions/12292",
        "upvotes": "147",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 3,
        "body": "It would be good to add an option to GitHub Actions config (yml) to skip sending email notifications, leaving the email clean and unpolluted./n+1 I need this a lot when I automerge PRs in my repositories./nThanks for the feedback @barseghyanartur - I think that there may be some areas that we can improve our notifications experience. I'll make sure that we take your feedback into account when we look into improving this area./nHere is a somewhat related suggestion:\n#13015/n"
    },
    {
        "title": "Jobs triggered with workflow dispatch and workflow run are missing branch names",
        "url": "https://github.com//orgs/community/discussions/14497",
        "upvotes": "145",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 1,
        "body": "See https://github.community/t/tag-branchname-in-workflow-dispatch-workflow/134588/nUsing this (https://github.blog/changelog/2022-09-26-github-actions-dynamic-names-for-workflow-runs) may be a workaround, but i also would like to have this feature. I am not yet sure how to set the run-name only for manual triggers./n"
    },
    {
        "title": "Incremental Summaries",
        "url": "https://github.com//orgs/community/discussions/16454",
        "upvotes": "1288",
        "tags": [
            "Enhancement",
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "I'm really excited about the new summaries feature detailed here./n"
    },
    {
        "title": "GitHub Actions | Allow configuring options for a deployment approval timeout",
        "url": "https://github.com//orgs/community/discussions/16381",
        "upvotes": "1078",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Currently, when a deployment is left in pending approval state for long enough (1 Month?), it automatically gets marked as cancelled/failed. Being able to configure the duration for timeout, and what happens (Auto approve, cancel, fail, etc.) to the pending deployment would be great./n"
    },
    {
        "title": "distinguish canceled deployments",
        "url": "https://github.com//orgs/community/discussions/16436",
        "upvotes": "551",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "[GitHub Deployment][] is a very convenient feature to do the actual deployment process safely, especially using the deployment review feature./n"
    },
    {
        "title": "Sections in Summary should have anchors",
        "url": "https://github.com//orgs/community/discussions/15666",
        "upvotes": "485",
        "tags": [
            "Actions",
            "UI/UX",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Consider https://github.com/check-spelling/scimax/actions/runs/2227324276/n"
    },
    {
        "title": "Approve and run a specific workflow on a pull request",
        "url": "https://github.com//orgs/community/discussions/14406",
        "upvotes": "477",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 1,
        "replies": 1,
        "comments": 1,
        "body": "In our repository, we have 3 types of running workflows in a Pull Request: integration tests, a security scanner, and a CLA assistant.\nEach one of them runs in a pull request./nHi @yahavi - this sounds like you might want want to set up approvals for your other workflows instead of relying on the more general new contributor approval framework? Does this suit your needs?/n"
    },
    {
        "title": "How to make a workflow file to save the output as a file to my GitHub Repo?",
        "url": "https://github.com//orgs/community/discussions/26672",
        "upvotes": "415",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 2,
        "comments": 2,
        "body": "For past 3 days I have been learning about matplotlib and pandas from youtube and I tried to implement my knowledge by making a very basic python project,which analyzes data from an api hosted by the Govt of India containing the data of COVID-19 cases in different states of India./nHi\u00a0@piyushke\u00a0,\u00a0/nDear yanjingzhu, thank you for your reply./n"
    },
    {
        "title": "Problem to run system tests on Rails",
        "url": "https://github.com//orgs/community/discussions/26674",
        "upvotes": "362",
        "tags": [],
        "rections": 0,
        "replies": 0,
        "comments": 5,
        "body": "My setup file look slike this:/nHi\u00a0@pepan\u00a0,/nWas this ever solved? I\u2019m getting some Chrome Driver errors and would like to know if you had any success with running your specs./nWould you be willing to explain what I do after downloading the latest Chromedriver?/nI tweaked my selenium settings in the ruby helper, but you should be able to do the same in most languages I\u2019d guess.\u00a0/nI\u2019ve been using the nanasess \u201csetup-chromedriver\u201d action and noticed i was on v1.0.1, but there is now v1.0.7 so maybe that\u2019s also a way to upgrade: GitHub - nanasess/setup-chromedriver: ChromeDriver for use in GitHub Actions/n"
    },
    {
        "title": "Cannot call workflow_dispatch with optional boolean input with no default value from API",
        "url": "https://github.com//orgs/community/discussions/27262",
        "upvotes": "338",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "I have a workflow that responds to workflow_dispatch events like this:/n"
    },
    {
        "title": "How to get the target branch name using pull_request_review event on github actions",
        "url": "https://github.com//orgs/community/discussions/27154",
        "upvotes": "289",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 1,
        "replies": 0,
        "comments": 4,
        "body": "I have multiple jobs in github actions. I want to run jobs based on specific branches only on pull_request_review event.  I tried using github.ref, github.head_ref,  github.base_ref but none of them worked as they only work on pull_request or push event. As it is described below:/nHi @so-amuk,/n@weide-zhou Thanks for your valuable answer. It worked for me./nThanks for the hint.\nBelow the revised version for Windows./nIn our case, it's even not base, but github.event.pull_request.head.ref./n"
    },
    {
        "title": "Parameter ''using: composite ' is not supported, use 'docker' or 'node12' instead. Github Server 3.0.1",
        "url": "https://github.com//orgs/community/discussions/24922",
        "upvotes": "282",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 1,
        "replies": 0,
        "comments": 4,
        "body": "Hello all,\nThe title says it all, according to the Actions documentation, it should be possible to use composite actions, but when I tried using an action with such action.yml:/nHey @anthonydahanne, that is strange. Composite actions should be supported on Enterprise installs so I don\u2019t know why you\u2019d be seeing that specific error. Would you be able to post your full workflow file and the full composite action so we can see what\u2019s going on here and attempt to reproduce?/n  using: 'composite '/nHello @Simran-B ,\nGood catch, indeed I got a trailing whitespace! and removing it, made it work./nOmg what a find, I totally didn\u2019t see that either \ud83d\ude02 Thanks, @Simran-B! And yeah, I\u2019ll report this to the Actions team because that\u2019s a confusing error message \u270c\ufe0f/n"
    },
    {
        "title": "Libffi.so.6 error on ubuntu-latest",
        "url": "https://github.com//orgs/community/discussions/24949",
        "upvotes": "261",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 6,
        "replies": 0,
        "comments": 1,
        "body": "I started to see errors this morning on:/nBusting the Ruby cache appears to have fixed it:/n"
    },
    {
        "title": "How do I split a single step into multiple sections",
        "url": "https://github.com//orgs/community/discussions/25314",
        "upvotes": "258",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 5,
        "body": "I have a step that runs some validation and cross references stuff. It outputs ~10.000 lines and I would like to section this up into multiple sections. The output touches roughly 8 projects and each project contains data for 1-12 languages./nDoes the step use your own action?\nThere is a function in  action toolkit > core library to wrap chunks of output in foldable groups.  You could use it in your JavaScript Action./nThat is pretty neat! but not as of now I\u2019m not using my own action, If I do however this is a great tip!/nIf you have control over the output, you can also use these functions via the :: syntax:\nhttps://help.github.com/en/actions/reference/workflow-commands-for-github-actions#using-workflow-commands-to-access-toolkit-functions/nTried this and it worked pretty much as expected. I would have loved to have the options of having groups inside groups but besides that that feature is great!/nOne little thing would be to add an example to the documentation, it did not take long to figure out but might help the next dev./n"
    },
    {
        "title": "Unexpected TemplateToken type 3",
        "url": "https://github.com//orgs/community/discussions/25321",
        "upvotes": "236",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 2,
        "body": "I\u2019ve switched default branch in my GitHub repo and changed workflow to trigger for changes for new branch, but actions for new default branch will fail with message The workflow is not valid. Unexpected TemplateToken type '3' on the first line of workflow file.\n/nSOLVED: I\u2019ve used ${{ github.run_number }} in matrix field. The error is extremely missleading./nHi \u2013 sorry you\u2019ve experienced this./n"
    },
    {
        "title": "Macos-latest stuck on Starting your workflow run",
        "url": "https://github.com//orgs/community/discussions/25368",
        "upvotes": "233",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 6,
        "body": "Hi,/nHi @goshiz,/nHi,/nJust happened today, around afternoon-ish (CET time). Was working fine earlier in the morning and yesterday too./n@goshiz, @iambaim - we discovered an issue affecting newer orgs and running Mac workflows, we\u2019re working on fixing it right now. It\u2019s very localized so I\u2019m guessing that\u2019s what you\u2019re seeing./nThanks you  ! I can confirm that this morning (in Europe) it\u2019s working !/nThanks! It\u2019s all good now./n"
    },
    {
        "title": "Empty matrix triggers step",
        "url": "https://github.com//orgs/community/discussions/13756",
        "upvotes": "228",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Hi there, I was experimenting with matrix configuration and run into this strange behaviour. If you have a workflow that has boolean inputs and these inputs are later used and filtered in the matrix then even when none of the checkboxes is checked workflow is still run./n"
    },
    {
        "title": "Pushing more than three tags at once makes actions fail to execute",
        "url": "https://github.com//orgs/community/discussions/56152",
        "upvotes": "216",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Question/n"
    },
    {
        "title": "Dashboard / Deployment view for Github Actions - Anyone found anything?",
        "url": "https://github.com//orgs/community/discussions/57498",
        "upvotes": "212",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 2,
        "comments": 2,
        "body": "Question/nHey \ud83d\udc4b\ud83c\udffd/n"
    },
    {
        "title": "Could I get issue title in Github actions by environment variables?",
        "url": "https://github.com//orgs/community/discussions/26715",
        "upvotes": "210",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 1,
        "replies": 0,
        "comments": 5,
        "body": "Hi I\u2019m trying to get issue title to use it to create issue clone on an another service./nHi @KouWakai\nunfortunately, there is no that variable.\nYou can check what are in place Environment variables - GitHub Docs.\nAlso you can try to check GH marketplace GitHub Marketplace \u00b7 Actions to improve your workflow \u00b7 GitHub maybe some actions can help you to achieve your goals./nDepending on the event, it\u2019s possible that what you want is available in the event objects which can be mapped to environment variables using ${{...}} magic./nYes, @jsoref is right there./nThis one is self resolved./n@ViacheslavKudinov @jsoref/n"
    },
    {
        "title": "[BUG] Error parsing called workflow in reusable workflow",
        "url": "https://github.com//orgs/community/discussions/55649",
        "upvotes": "202",
        "tags": [
            "Bug",
            "Actions"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 2,
        "body": "Bug/nsame issue here, has anyone found a solution?/nI was also having the same error, but it has been resolved.\nIt seems that this can happen when using annotated tags.\nThe solution is not to use annotated tags./n"
    },
    {
        "title": "Feature Request: Add statically-defined and lexically-scoped Consts for YAML files",
        "url": "https://github.com//orgs/community/discussions/18115",
        "upvotes": "178",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "I would like to see if it would be possible for GitHub Actions to support statically-defined and lexically-scoped constants in its GitHub Actions yaml files?/n"
    },
    {
        "title": "Hosted Runner with 2 cores",
        "url": "https://github.com//orgs/community/discussions/44117",
        "upvotes": "173",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 2,
        "comments": 3,
        "body": "Question/n+1/n+1/nCreating 2-core runners with all of the new options here could be very useful - but still no option to choose 2-core.../n"
    },
    {
        "title": "What's github.actor in scheduled jobs?",
        "url": "https://github.com//orgs/community/discussions/47855",
        "upvotes": "155",
        "tags": [
            "Actions",
            "Question"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 4,
        "body": "Question/nWe have the same challenge, on our end, it does seem to point towards the user who first added the scheduled parameter./nI think it's based on their notification system for scheduled workflow runs: https://docs.github.com/en/actions/monitoring-and-troubleshooting-workflows/notifications-for-workflow-runs/nI asked GitHub support about this and got the following answer:/nCould it be possible to have a new feature added in Github so we can define the user we want to trigger the scheduled workflow?\nI have a use case where I need to validate whether a specific job is triggered by a specific user./n"
    },
    {
        "title": "Add API to get all workflows from all repositories",
        "url": "https://github.com//orgs/community/discussions/46189",
        "upvotes": "154",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 0,
        "replies": 0,
        "comments": 0,
        "body": "Product Feedback/n"
    },
    {
        "title": "Github Actions to make changes to a file",
        "url": "https://github.com//orgs/community/discussions/26842",
        "upvotes": "147",
        "tags": [
            "ProductFeedback"
        ],
        "rections": 6,
        "replies": 0,
        "comments": 4,
        "body": "Hello, I am learning to use GitHub Actions for a project and I am having difficulties./n@allisonsampaio ,/n@allisonsampaio ,\nHow are things going?\nIs my above suggestion helpful to you?\nPlease try it, and feel free to tell me if you have any update./nHi @brightran\nIt helped me a lot, thank you/nYou can add a step like this for debugging purposes (assuming bash as shell):/n"
    },
    {
        "title": "Trigger workflow event when PR is removed from the merge queue",
        "url": "https://github.com//orgs/community/discussions/89919",
        "upvotes": "145",
        "tags": [
            "Actions",
            "ProductFeedback"
        ],
        "rections": 1,
        "replies": 0,
        "comments": 1,
        "body": "Product Feedback/nYes! This would be great! At the moment, our developers are not informed when their PRs are removed from the queue, so this would be quite useful \ud83d\ude4f/n"
    }
]